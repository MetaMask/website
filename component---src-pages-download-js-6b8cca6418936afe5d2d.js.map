{"version":3,"sources":["webpack:///./src/components/DownloadContainer.js","webpack:///./src/components/DownloadBrowser.js","webpack:///./src/pages/download.js"],"names":["TabWrapper","React","lazy","TabContentDownload","withTheme","props","useState","device","setDevice","appExtensions","useEffect","isMobile","isAndroid","isIOS","isEmpty","isSSR","window","tabs","Object","keys","map","item","label","id","content","Suspense","fallback","Loading","Container","ContentWrapper","activeTabDefault","styled","Section","browsers","className","sectionPadding","Heading","length","BrowserWrapper","BrowserList","browser","cta","image","BrowserItem","key","to","ctaLink","newTab","Image","BrowserName","theme","mobileMediaMax","div","Link","text","body","h2","DownloadTitle","h1","DownloadPage","data","seo","header","footer","download_extension","download_ios","download_android","browser_chrome","browser_firefox","browser_brave","browser_edge","cta_chrome","cta_ios","cta_android","cta_firefox","cta_edge","cta_chrome_browser","cta_firefox_browser","location","browserName","title","ctaChrome","ctaFirefox","ctaEdge","ctaChromeBrowser","ctaFirefoxBrowser","ios","ctaText","ctas","android","moduleConfig","pagePath","pathname","hideDownloadBtn"],"mappings":"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","file":"component---src-pages-download-js-6b8cca6418936afe5d2d.js","sourcesContent":["import PropTypes from 'prop-types'\nimport { isAndroid, isIOS, isMobile } from 'react-device-detect'\nimport React from 'react'\nimport styled, { withTheme } from 'styled-components'\nimport { Section } from './StyledGeneral'\nimport ContentWrapper from './ContentWrapper'\nimport Loading from './Loading'\nimport isEmpty from 'lodash/isEmpty'\nconst TabWrapper = React.lazy(() => import('./Tab/TabWrapper'))\nconst TabContentDownload = React.lazy(() => import('./DownloadTab'))\n\nconst DownloadContainer = props => {\n  const [device, setDevice] = React.useState('')\n  const { appExtensions } = props\n  React.useEffect(() => {\n    if (isMobile) {\n      if (isAndroid) {\n        setDevice('android')\n      } else if (isIOS) {\n        setDevice('ios')\n      } else {\n        setDevice('browser')\n      }\n    } else {\n      setDevice('browser')\n    }\n  }, [])\n  if (isEmpty(appExtensions)) return null\n  const isSSR = typeof window === 'undefined'\n  const tabs = Object.keys(appExtensions).map(item => ({\n    label: appExtensions[item]['label'],\n    id: item,\n    content: !isSSR && (\n      <React.Suspense fallback={<Loading />}>\n        <TabContentDownload {...appExtensions[item]} id={item} />\n      </React.Suspense>\n    ),\n  }))\n\n  return (\n    <Container>\n      <ContentWrapper>\n        {!isSSR && device ? (\n          <React.Suspense fallback={<div />}>\n            <TabWrapper tabs={tabs} activeTabDefault={device}></TabWrapper>\n          </React.Suspense>\n        ) : null}\n      </ContentWrapper>\n    </Container>\n  )\n}\n\nexport default withTheme(DownloadContainer)\n\nDownloadContainer.propTypes = {\n  appExtensions: PropTypes.object,\n}\n\nconst Container = styled(Section)``\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport styled, { withTheme } from 'styled-components'\nimport { Section } from './StyledGeneral'\nimport ContentWrapper from './ContentWrapper'\nimport Image from './Image'\nimport Link from './Link'\n\nconst DownloadBrowser = props => {\n  const { browsers } = props\n\n  return (\n    <Container className={'bg-gray'} sectionPadding={'88px'}>\n      <ContentWrapper>\n        <Heading>Supported Browsers</Heading>\n        {browsers && browsers.length ? (\n          <BrowserWrapper>\n            <BrowserList>\n              {browsers.map(browser => {\n                const { cta, image, label } = browser\n                return (\n                  <BrowserItem key={label} to={cta.ctaLink} newTab={cta.newTab}>\n                    <Image image={image} />\n                    <BrowserName>{label}</BrowserName>\n                  </BrowserItem>\n                )\n              })}\n            </BrowserList>\n          </BrowserWrapper>\n        ) : null}\n      </ContentWrapper>\n    </Container>\n  )\n}\n\nexport default withTheme(DownloadBrowser)\n\nDownloadBrowser.propTypes = {\n  browsers: PropTypes.arrayOf(\n    PropTypes.shape({\n      cta: PropTypes.object,\n      image: PropTypes.object,\n      label: PropTypes.string,\n    })\n  ).isRequired,\n}\n\nconst Container = styled(Section)`\n  @media (max-width: ${({ theme }) => theme.device.mobileMediaMax}) {\n    padding-top: 88px !important;\n    padding-bottom: 88px !important;\n  }\n`\nconst BrowserWrapper = styled.div`\n  display: block;\n`\n\nconst BrowserList = styled.div`\n  display: flex;\n  flex-flow: wrap;\n  margin: -20px;\n\n  @media (max-width: ${({ theme }) => theme.device.mobileMediaMax}) {\n    margin: -12px;\n  }\n\n  & > * {\n    width: 25%;\n    padding: 20px;\n    @media (max-width: ${({ theme }) => theme.device.mobileMediaMax}) {\n      width: 100%;\n      padding: 12px;\n    }\n  }\n`\n\nconst BrowserItem = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  text-align: center;\n  color: ${({ theme }) => theme.text.body};\n\n  img {\n    width: 50px;\n    height: 50px;\n  }\n`\n\nconst BrowserName = styled.div`\n  display: block;\n  margin-top: 16px;\n`\nconst Heading = styled.h2`\n  margin-bottom: 32px;\n  font-size: 35px;\n  line-height: 40px;\n  font-weight: 700;\n  text-align: center;\n  @media (max-width: ${({ theme }) => theme.device.mobileMediaMax}) {\n    padding-right: 10px;\n    padding-left: 10px;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { graphql } from 'gatsby'\nimport { browserName, isMobile } from 'react-device-detect'\nimport {\n  ContentfulSeo as Seo,\n  ContentfulLayoutHeader as Header,\n  ContentfulLayoutFooter as Footer,\n} from '../components/Contentful'\nimport Layout from '../templates/PageLayout'\nimport DownloadContainer from '../components/DownloadContainer'\nimport DownloadBrowser from '../components/DownloadBrowser'\n\nconst DownloadPage = props => {\n  const {\n    data: {\n      seo,\n      header,\n      footer,\n      download_extension,\n      download_ios,\n      download_android,\n      browser_chrome,\n      browser_firefox,\n      browser_brave,\n      browser_edge,\n      cta_chrome,\n      cta_ios,\n      cta_android,\n      cta_firefox,\n      cta_edge,\n      cta_chrome_browser,\n      cta_firefox_browser,\n    },\n    location,\n  } = props\n  const browsers = [\n    {\n      image: browser_chrome,\n      cta: cta_chrome,\n      label: 'Chrome',\n    },\n    {\n      image: browser_firefox,\n      cta: cta_firefox,\n      label: 'Firefox',\n    },\n    {\n      image: browser_brave,\n      cta: cta_chrome,\n      label: 'Brave',\n    },\n    {\n      image: browser_edge,\n      cta: cta_edge,\n      label: 'Edge',\n    },\n  ]\n\n  const appExtensions = {\n    browser: {\n      image: download_extension,\n      label: isMobile ? 'Chrome' : browserName,\n      title: 'Install MetaMask for your browser',\n      ctaChrome: cta_chrome,\n      ctaFirefox: cta_firefox,\n      ctaEdge: cta_edge,\n      ctaChromeBrowser: cta_chrome_browser,\n      ctaFirefoxBrowser: cta_firefox_browser,\n    },\n    ios: {\n      image: download_ios,\n      label: 'iOS',\n      title: 'Install MetaMask for iPhone',\n      ctaText: 'Install MetaMask for iPhone',\n      ctas: [cta_ios],\n    },\n    android: {\n      image: download_android,\n      label: 'Android',\n      title: 'Install MetaMask for Android',\n      ctas: [cta_android],\n    },\n  }\n  return (\n    <Layout>\n      {seo && <Seo moduleConfig={{ ...seo, pagePath: location.pathname }} />}\n      <Header moduleConfig={header} hideDownloadBtn />\n      <Container>\n        <DownloadTitle>Install MetaMask</DownloadTitle>\n        <DownloadContainer appExtensions={appExtensions} />\n        <DownloadBrowser browsers={browsers} />\n      </Container>\n      <Footer moduleConfig={footer} />\n    </Layout>\n  )\n}\n\nexport const DownloadPageQuery = graphql`\n  query {\n    header: contentfulLayoutHeader(\n      contentful_id: { eq: \"6I0knvqLf0DS5PB72DqUlM\" }\n    ) {\n      ...ContentfulLayoutHeaderFields\n    }\n    cta_firefox_browser: contentfulCta(\n      contentful_id: { eq: \"417gM11RFHEzJJGiVptS0b\" }\n    ) {\n      ...ContentfulCtaFields\n    }\n    cta_chrome_browser: contentfulCta(\n      contentful_id: { eq: \"dOfqSHhB8M5UUrAf3c2zF\" }\n    ) {\n      ...ContentfulCtaFields\n    }\n    cta_chrome: contentfulCta(contentful_id: { eq: \"CrOB61ZSnuQCuYUhhxBP5\" }) {\n      ...ContentfulCtaFields\n    }\n    cta_firefox: contentfulCta(\n      contentful_id: { eq: \"1xsshciF4UVR84KqFpHXNS\" }\n    ) {\n      ...ContentfulCtaFields\n    }\n    cta_edge: contentfulCta(contentful_id: { eq: \"5EWyZidEFFdMHvX2cTisje\" }) {\n      ...ContentfulCtaFields\n    }\n    cta_ios: contentfulCta(contentful_id: { eq: \"6IujWp8Z8TSdB8fpBifwZQ\" }) {\n      ...ContentfulCtaFields\n    }\n    cta_android: contentfulCta(contentful_id: { eq: \"x5Nr4AbHCHBZDNJURlzsP\" }) {\n      ...ContentfulCtaFields\n    }\n    download_extension: contentfulAsset(\n      contentful_id: { eq: \"6ngCUoU36ABPjs6cDNnuoK\" }\n    ) {\n      title\n      description\n      file {\n        url\n      }\n    }\n    download_ios: contentfulAsset(\n      contentful_id: { eq: \"7Dwln6hVLXZJnOAHNlH2tT\" }\n    ) {\n      title\n      description\n      file {\n        url\n      }\n    }\n    download_android: contentfulAsset(\n      contentful_id: { eq: \"7CU9NE4jlL0XjKEerlEL16\" }\n    ) {\n      title\n      description\n      file {\n        url\n      }\n    }\n    browser_chrome: contentfulAsset(\n      contentful_id: { eq: \"5CEOSBaSKv43i0mNninl5G\" }\n    ) {\n      title\n      description\n      file {\n        url\n      }\n    }\n    browser_firefox: contentfulAsset(\n      contentful_id: { eq: \"4WVycyyYvlfuRrArPRjj1d\" }\n    ) {\n      title\n      description\n      file {\n        url\n      }\n    }\n    browser_brave: contentfulAsset(\n      contentful_id: { eq: \"6HcekwtMp9fRFIphaPlqX5\" }\n    ) {\n      title\n      description\n      file {\n        url\n      }\n    }\n    browser_edge: contentfulAsset(\n      contentful_id: { eq: \"2O0Uh2Nt1OciYoK96DscLF\" }\n    ) {\n      title\n      description\n      file {\n        url\n      }\n    }\n\n    footer: contentfulLayoutFooter(\n      contentful_id: { eq: \"75bFgEllkMxpVsY8wWlroX\" }\n    ) {\n      ...ContentfulLayoutFooterFields\n    }\n\n    seo: contentfulSeo(contentful_id: { eq: \"2d9sWm0RbmC5zSEsF8JkiS\" }) {\n      ...ContentfulSeoFields\n    }\n  }\n`\n\nconst Container = styled.div`\n  display: block;\n`\n\nconst DownloadTitle = styled.h1`\n  display: none;\n`\n\nexport default DownloadPage\n"],"sourceRoot":""}