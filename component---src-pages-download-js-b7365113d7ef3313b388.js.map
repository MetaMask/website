{"version":3,"file":"component---src-pages-download-js-b7365113d7ef3313b388.js","mappings":"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","sources":["webpack://metamask-io/./src/components/DownloadContainer.js","webpack://metamask-io/./src/components/DownloadBrowser.js","webpack://metamask-io/./src/pages/download.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport { isAndroid, isIOS, isMobile } from 'react-device-detect'\nimport React from 'react'\nimport styled, { withTheme } from 'styled-components'\nimport { Section } from './StyledGeneral'\nimport ContentWrapper from './ContentWrapper'\nimport Loading from './Loading'\nimport isEmpty from 'lodash/isEmpty'\nconst TabWrapper = React.lazy(() => import('./Tab/TabWrapper'))\nconst TabContentDownload = React.lazy(() => import('./DownloadTab'))\n\nconst DownloadContainer = props => {\n  const [device, setDevice] = React.useState('')\n  const { appExtensions } = props\n  React.useEffect(() => {\n    if (isMobile) {\n      if (isAndroid) {\n        setDevice('android')\n      } else if (isIOS) {\n        setDevice('ios')\n      } else {\n        setDevice('browser')\n      }\n    } else {\n      setDevice('browser')\n    }\n  }, [])\n  if (isEmpty(appExtensions)) return null\n  const isSSR = typeof window === 'undefined'\n  const tabs = Object.keys(appExtensions).map(item => ({\n    label: appExtensions[item]['label'],\n    id: item,\n    content: !isSSR && (\n      <React.Suspense fallback={<Loading />}>\n        <TabContentDownload {...appExtensions[item]} id={item} />\n      </React.Suspense>\n    ),\n  }))\n\n  return (\n    <Container>\n      <ContentWrapper>\n        {!isSSR && device ? (\n          <React.Suspense fallback={<div />}>\n            <TabWrapper tabs={tabs} activeTabDefault={device}></TabWrapper>\n          </React.Suspense>\n        ) : null}\n      </ContentWrapper>\n    </Container>\n  )\n}\n\nexport default withTheme(DownloadContainer)\n\nDownloadContainer.propTypes = {\n  appExtensions: PropTypes.object,\n}\n\nconst Container = styled(Section)``\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport styled, { withTheme } from 'styled-components'\nimport { Section } from './StyledGeneral'\nimport ContentWrapper from './ContentWrapper'\nimport Image from './Image'\nimport Link from './Link'\n\nconst DownloadBrowser = props => {\n  const { browsers } = props\n\n  return (\n    <Container className={'bg-gray'} sectionPadding={'88px'}>\n      <ContentWrapper>\n        <Heading>Supported Browsers</Heading>\n        {browsers && browsers.length ? (\n          <BrowserWrapper>\n            <BrowserList>\n              {browsers.map(browser => {\n                const { cta, image, label } = browser\n                return (\n                  <BrowserItem\n                    key={label}\n                    to={cta?.ctaLink}\n                    newTab={cta?.newTab}\n                  >\n                    <Image image={image} />\n                    <BrowserName>{label}</BrowserName>\n                  </BrowserItem>\n                )\n              })}\n            </BrowserList>\n          </BrowserWrapper>\n        ) : null}\n      </ContentWrapper>\n    </Container>\n  )\n}\n\nexport default withTheme(DownloadBrowser)\n\nDownloadBrowser.propTypes = {\n  browsers: PropTypes.arrayOf(\n    PropTypes.shape({\n      cta: PropTypes.object,\n      image: PropTypes.object,\n      label: PropTypes.string,\n    })\n  ).isRequired,\n}\n\nconst Container = styled(Section)`\n  @media (max-width: ${({ theme }) => theme.device.mobileMediaMax}) {\n    padding-top: 88px !important;\n    padding-bottom: 88px !important;\n  }\n`\nconst BrowserWrapper = styled.div`\n  display: block;\n`\n\nconst BrowserList = styled.div`\n  display: flex;\n  flex-flow: wrap;\n  margin: -20px;\n\n  @media (max-width: ${({ theme }) => theme.device.mobileMediaMax}) {\n    margin: -12px;\n  }\n\n  & > * {\n    width: 20%;\n    padding: 20px;\n\n    @media (max-width: ${({ theme }) => theme.device.tabletMediaMax}) {\n      width: 33.33%;\n    }\n\n    @media (max-width: ${({ theme }) => theme.device.mobileMediaMax}) {\n      width: 100%;\n      padding: 12px;\n    }\n  }\n`\n\nconst BrowserItem = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  text-align: center;\n  color: ${({ theme }) => theme.text.body};\n\n  img {\n    width: 50px;\n    height: 50px;\n  }\n`\n\nconst BrowserName = styled.div`\n  display: block;\n  margin-top: 16px;\n`\nconst Heading = styled.h2`\n  margin-bottom: 32px;\n  font-size: 35px;\n  line-height: 40px;\n  font-weight: 700;\n  text-align: center;\n  @media (max-width: ${({ theme }) => theme.device.mobileMediaMax}) {\n    padding-right: 10px;\n    padding-left: 10px;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { graphql } from 'gatsby'\nimport { browserName, isMobile } from 'react-device-detect'\nimport {\n  ContentfulSeo as Seo,\n  ContentfulLayoutHeader as Header,\n  ContentfulLayoutFooter as Footer,\n} from '../components/Contentful'\nimport Layout from '../templates/PageLayout'\nimport DownloadContainer from '../components/DownloadContainer'\nimport DownloadBrowser from '../components/DownloadBrowser'\nimport isChromium from '../lib/utils/isChromium'\n\nconst DownloadPage = props => {\n  const {\n    data: {\n      seo,\n      header,\n      footer,\n      download_extension,\n      download_ios,\n      download_android,\n      browser_chrome,\n      browser_firefox,\n      browser_brave,\n      browser_edge,\n      browser_opera,\n      cta_chrome,\n      cta_ios,\n      cta_android,\n      cta_firefox,\n      cta_edge,\n      cta_opera,\n      cta_chrome_browser,\n      cta_firefox_browser,\n    },\n    location,\n  } = props\n  const browsers = [\n    {\n      image: browser_chrome,\n      cta: cta_chrome,\n      label: 'Chrome',\n    },\n    {\n      image: browser_firefox,\n      cta: cta_firefox,\n      label: 'Firefox',\n    },\n    {\n      image: browser_brave,\n      cta: cta_chrome,\n      label: 'Brave',\n    },\n    {\n      image: browser_edge,\n      cta: cta_edge,\n      label: 'Edge',\n    },\n    {\n      image: browser_opera,\n      cta: cta_opera,\n      label: 'Opera',\n    },\n  ]\n\n  const appExtensions = {\n    browser: {\n      image: download_extension,\n      label: isMobile ? 'Chrome' : isChromium() ? 'Chromium' : browserName,\n      title: 'Install MetaMask for your browser',\n      ctaChrome: cta_chrome,\n      ctaFirefox: cta_firefox,\n      ctaEdge: cta_edge,\n      ctaOpera: cta_opera,\n      ctaChromeBrowser: cta_chrome_browser, // Show when the browser is not supported.\n      ctaFirefoxBrowser: cta_firefox_browser, // Show when the browser is not supported.\n    },\n    ios: {\n      image: download_ios,\n      label: 'iOS',\n      title: 'Install MetaMask for iPhone',\n      ctaText: 'Install MetaMask for iPhone',\n      ctas: [cta_ios],\n    },\n    android: {\n      image: download_android,\n      label: 'Android',\n      title: 'Install MetaMask for Android',\n      ctas: [cta_android],\n    },\n  }\n  return (\n    <Layout>\n      {seo && <Seo moduleConfig={{ ...seo, pagePath: location.pathname }} />}\n      <Header moduleConfig={header} hideDownloadBtn />\n      <Container>\n        <DownloadTitle>Install MetaMask</DownloadTitle>\n        <DownloadContainer appExtensions={appExtensions} />\n        <DownloadBrowser browsers={browsers} />\n      </Container>\n      <Footer moduleConfig={footer} />\n    </Layout>\n  )\n}\n\nexport const DownloadPageQuery = graphql`\n  query {\n    header: contentfulLayoutHeader(\n      contentful_id: { eq: \"6I0knvqLf0DS5PB72DqUlM\" }\n    ) {\n      ...ContentfulLayoutHeaderFields\n    }\n    cta_firefox_browser: contentfulCta(\n      contentful_id: { eq: \"417gM11RFHEzJJGiVptS0b\" }\n    ) {\n      ...ContentfulCtaFields\n    }\n    cta_chrome_browser: contentfulCta(\n      contentful_id: { eq: \"dOfqSHhB8M5UUrAf3c2zF\" }\n    ) {\n      ...ContentfulCtaFields\n    }\n    cta_chrome: contentfulCta(contentful_id: { eq: \"CrOB61ZSnuQCuYUhhxBP5\" }) {\n      ...ContentfulCtaFields\n    }\n    cta_firefox: contentfulCta(\n      contentful_id: { eq: \"1xsshciF4UVR84KqFpHXNS\" }\n    ) {\n      ...ContentfulCtaFields\n    }\n    cta_edge: contentfulCta(contentful_id: { eq: \"5EWyZidEFFdMHvX2cTisje\" }) {\n      ...ContentfulCtaFields\n    }\n    cta_opera: contentfulCta(contentful_id: { eq: \"5yNHtUxlS4DuImyCNQXJ1B\" }) {\n      ...ContentfulCtaFields\n    }\n    cta_ios: contentfulCta(contentful_id: { eq: \"6IujWp8Z8TSdB8fpBifwZQ\" }) {\n      ...ContentfulCtaFields\n    }\n    cta_android: contentfulCta(contentful_id: { eq: \"x5Nr4AbHCHBZDNJURlzsP\" }) {\n      ...ContentfulCtaFields\n    }\n    download_extension: contentfulAsset(\n      contentful_id: { eq: \"6ngCUoU36ABPjs6cDNnuoK\" }\n    ) {\n      title\n      description\n      gatsbyImageData(width: 1920, quality: 80)\n    }\n    download_ios: contentfulAsset(\n      contentful_id: { eq: \"7Dwln6hVLXZJnOAHNlH2tT\" }\n    ) {\n      title\n      description\n      gatsbyImageData(width: 1920, quality: 80)\n    }\n    download_android: contentfulAsset(\n      contentful_id: { eq: \"7CU9NE4jlL0XjKEerlEL16\" }\n    ) {\n      title\n      description\n      gatsbyImageData(width: 1920, quality: 80)\n    }\n    browser_chrome: contentfulAsset(\n      contentful_id: { eq: \"5CEOSBaSKv43i0mNninl5G\" }\n    ) {\n      title\n      description\n      file {\n        url\n      }\n    }\n    browser_firefox: contentfulAsset(\n      contentful_id: { eq: \"4WVycyyYvlfuRrArPRjj1d\" }\n    ) {\n      title\n      description\n      file {\n        url\n      }\n    }\n    browser_brave: contentfulAsset(\n      contentful_id: { eq: \"6HcekwtMp9fRFIphaPlqX5\" }\n    ) {\n      title\n      description\n      file {\n        url\n      }\n    }\n    browser_opera: contentfulAsset(\n      contentful_id: { eq: \"3jXxCAi5Q93Lf5fE6zmuAG\" }\n    ) {\n      title\n      description\n      file {\n        url\n      }\n    }\n    browser_edge: contentfulAsset(\n      contentful_id: { eq: \"2O0Uh2Nt1OciYoK96DscLF\" }\n    ) {\n      title\n      description\n      file {\n        url\n      }\n    }\n\n    footer: contentfulLayoutFooter(\n      contentful_id: { eq: \"75bFgEllkMxpVsY8wWlroX\" }\n    ) {\n      ...ContentfulLayoutFooterFields\n    }\n\n    seo: contentfulSeo(contentful_id: { eq: \"2d9sWm0RbmC5zSEsF8JkiS\" }) {\n      ...ContentfulSeoFields\n    }\n  }\n`\n\nconst Container = styled.div`\n  display: block;\n`\n\nconst DownloadTitle = styled.h1`\n  display: none;\n`\n\nexport default DownloadPage\n"],"names":["TabWrapper","React","TabContentDownload","withTheme","props","_React$useState","device","setDevice","appExtensions","isMobile","isAndroid","isIOS","isEmpty","isSSR","window","tabs","Object","keys","map","item","label","id","content","fallback","Loading","assign","Container","ContentWrapper","activeTabDefault","styled","Section","withConfig","displayName","componentId","browsers","className","sectionPadding","Heading","length","BrowserWrapper","BrowserList","browser","cta","image","BrowserItem","key","to","ctaLink","newTab","Image","BrowserName","_ref","theme","mobileMediaMax","_ref2","_ref3","tabletMediaMax","_ref4","Link","_ref5","text","body","_ref6","DownloadTitle","_props$data","data","seo","header","footer","download_extension","download_ios","download_android","browser_chrome","browser_firefox","browser_brave","browser_edge","browser_opera","cta_chrome","cta_ios","cta_android","cta_firefox","cta_edge","cta_opera","cta_chrome_browser","cta_firefox_browser","location","isChromium","browserName","title","ctaChrome","ctaFirefox","ctaEdge","ctaOpera","ctaChromeBrowser","ctaFirefoxBrowser","ios","ctaText","ctas","android","Layout","Seo","moduleConfig","pagePath","pathname","Header","hideDownloadBtn","DownloadContainer","DownloadBrowser","Footer"],"sourceRoot":""}