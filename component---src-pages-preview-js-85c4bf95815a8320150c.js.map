{"version":3,"sources":["webpack:///./node_modules/lodash/map.js","webpack:///./node_modules/lodash/flatMap.js","webpack:///./node_modules/lodash/_isFlattenable.js","webpack:///./node_modules/lodash/_baseForOwn.js","webpack:///./node_modules/lodash/_defineProperty.js","webpack:///./src/lib/utils/fetchContentfulData.js","webpack:///./src/pages/preview.js","webpack:///./node_modules/lodash/_baseEach.js","webpack:///./node_modules/lodash/_baseFlatten.js","webpack:///./node_modules/lodash/_baseFor.js","webpack:///./node_modules/lodash/_baseAssignValue.js","webpack:///./node_modules/lodash/_baseMap.js","webpack:///./node_modules/lodash/_createBaseEach.js","webpack:///./node_modules/lodash/_createBaseFor.js","webpack:///./node_modules/lodash/mapValues.js"],"names":["arrayMap","baseIteratee","baseMap","isArray","module","exports","collection","iteratee","baseFlatten","map","Symbol","isArguments","spreadableSymbol","isConcatSpreadable","undefined","value","baseFor","keys","object","getNative","defineProperty","func","Object","e","fetchContentfulData","dataType","id","host","CONTENTFUL_HOST","error","message","resource","resource_url","CONTENTFUL_SPACE_ID","CONTENTFUL_ENVIRONMENT","CONTENTFUL_API_KEY","axios","get","then","result","data","handleModuleResponse","handleAssetResponse","catch","fetchContentfulModule","fetchContentfulAsset","response","moduleConfig","fields","sys","contentful_id","type","contentType","internal","charAt","toUpperCase","slice","nestedModules","getNestedModules","allModuleRequests","resolveModuleRequests","Promise","all","resolvedModules","reduce","acc","key","i","file","url","assetUrl","length","resolvedModuleFields","mapValues","field","Array","mod","linkType","modules","flatMap","promiseList","resolve","filter","PreviewPage","props","getModule","a","location","search","qs","parse","module_id","setState","loading","state","componentWillMount","this","render","moduleConfigUpdate","previewMode","headline","description","PreviewWrapper","customPreview","contentfulModuleToComponent","React","PureComponent","styled","ContentWrapper","baseForOwn","baseEach","createBaseEach","arrayPush","isFlattenable","array","depth","predicate","isStrict","index","createBaseFor","isArrayLike","eachFunc","fromRight","iterable","keysFunc","baseAssignValue"],"mappings":"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","file":"component---src-pages-preview-js-85c4bf95815a8320150c.js","sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","import axios from 'axios'\nimport mapValues from 'lodash/mapValues'\nimport flatMap from 'lodash/flatMap'\n\nimport {\n  CONTENTFUL_SPACE_ID,\n  CONTENTFUL_ENVIRONMENT,\n  CONTENTFUL_API_KEY,\n  CONTENTFUL_HOST,\n} from '../config'\n\nexport const fetchContentfulData = dataType => (id, host = CONTENTFUL_HOST) => {\n  if (dataType !== 'module' && dataType !== 'asset') {\n    return {\n      error: {\n        message:\n          'Can only retrieve `module` and `asset` data types from Contentful',\n      },\n    }\n  }\n\n  if (!id || typeof id !== 'string') {\n    return {\n      error: {\n        message: `No ${dataType} ID provided to retrieve Contenful data : ${id}`,\n      },\n    }\n  }\n\n  // construct API url based on resource and env vars\n  const resource = dataType === 'module' ? 'entries' : 'assets'\n  const resource_url =\n    `/spaces/${CONTENTFUL_SPACE_ID}` +\n    `/environments/${CONTENTFUL_ENVIRONMENT}` +\n    `/${resource}/${id}?access_token=${CONTENTFUL_API_KEY}`\n\n  return axios\n    .get('https://' + host + resource_url)\n    .then(result => {\n      if (result.error || !result.data) {\n        return {\n          error: result.error || {\n            message:\n              `No data returned for Contentful ${dataType} with id: ` + id,\n          },\n        }\n      }\n\n      //  If requesting Modules (Custom Content Models)\n      if (dataType === 'module') {\n        return handleModuleResponse(result)\n      }\n\n      //  If requesting Assets (Images)\n      if (dataType === 'asset') {\n        return handleAssetResponse(result)\n      }\n    })\n    .catch(error => {\n      throw error\n    })\n}\n\nexport const fetchContentfulModule = fetchContentfulData('module')\nexport const fetchContentfulAsset = fetchContentfulData('asset')\n\nconst handleModuleResponse = response => {\n  if (!response.data) {\n    return {\n      error: {\n        message: 'Could not parse Module response',\n      },\n    }\n  }\n\n  const {\n    data: {\n      fields: moduleConfig,\n      sys: {\n        id: contentful_id,\n        contentType: {\n          sys: { id: type },\n        },\n      },\n    },\n  } = response\n\n  // format module type to mimic what is returned by GraphQL for our component mapping\n  const internal = {\n    type: `Contentful${type.charAt(0).toUpperCase() + type.slice(1)}`,\n  }\n  const nestedModules = getNestedModules(moduleConfig)\n  const allModuleRequests = resolveModuleRequests(nestedModules)\n\n  return Promise.all(allModuleRequests)\n    .then(result => {\n      const resolvedModules = result.reduce((acc, key, i) => {\n        // update module config to replace resolved promises\n        // with normal objects with module data to be used in component rendering\n        if (typeof key === 'string') {\n          return { ...acc, [key]: result[i + 1] }\n        } else {\n          return acc\n        }\n      }, moduleConfig)\n      return {\n        ...resolvedModules,\n        internal,\n        contentful_id,\n      }\n    })\n    .catch(error => error)\n}\n\nconst handleAssetResponse = response => {\n  if (!response.data) {\n    return {\n      error: {\n        message: 'Could not parse Asset response',\n      },\n    }\n  }\n\n  const {\n    data: {\n      fields: { file },\n    },\n  } = response\n\n  if (!file) return\n\n  const { url, contentType } = file\n  // Contentful returns a same protocol uri starting with '//' which is improperly handled by Gatsby\n  const assetUrl = `https://${url.slice(2, url.length)}`\n\n  return {\n    assetUrl,\n    contentType,\n  }\n}\n\nconst getNestedModules = moduleConfig => {\n  if (moduleConfig) {\n    const resolvedModuleFields = mapValues(moduleConfig, (field, i) => {\n      // Assume that anything in an array is another module (ModuleContainer or Page)\n      // Coerce module into correct format to work with next mapValues call\n      if (Array.isArray(field))\n        return field.map(mod => getNestedModules({ mod }))\n\n      // if field contains Contentful metadata then retrieve module/asset ID and call API again\n      if (!field.sys) {\n        return field\n      } else {\n        const {\n          sys: { linkType, id },\n        } = field\n        return linkType === 'Asset'\n          ? fetchContentfulAsset(id)\n          : fetchContentfulModule(id)\n      }\n    })\n    return { ...resolvedModuleFields }\n  } else {\n    return false\n  }\n}\n\nconst resolveModuleRequests = modules => {\n  return flatMap(modules, (mod, key) => {\n    // Check if module is a Promise API request to get more module data\n    // return to array to await all module data before rendering\n    // https://stackoverflow.com/questions/27746304/how-do-i-tell-if-an-object-is-a-promise/38339199#38339199\n    if (Array.isArray(mod)) {\n      const promiseList = mod.map(e => e.mod)\n      return [key, Promise.all(promiseList)]\n    }\n    return Promise.resolve(mod) === mod ? [key, mod] : null\n  }).filter(mod => !!mod)\n}\n","import React from 'react'\nimport qs from 'query-string'\nimport { contentfulModuleToComponent } from '../lib/utils/moduleToComponent'\nimport { fetchContentfulModule } from '../lib/utils/fetchContentfulData'\nimport ContentWrapper from '../components/ContentWrapper'\nimport Hero from '../components/HeroContainer'\nimport Layout from '../templates/PageLayout'\nimport styled from 'styled-components'\n\nclass PreviewPage extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      moduleConfig: {},\n      error: false,\n    }\n  }\n\n  componentWillMount() {\n    this.getModule()\n  }\n\n  getModule = async () => {\n    const { location } = this.props\n    if (location && location.search && qs.parse(location.search).module_id) {\n      const id = qs.parse(location.search).module_id\n      const moduleConfig = await fetchContentfulModule(id)\n      return this.setState({\n        loading: false,\n        moduleConfig,\n      })\n    } else {\n      return this.setState({\n        loading: false,\n        error: {\n          message: 'No module id provided to preview',\n        },\n      })\n    }\n  }\n\n  render() {\n    const { loading, moduleConfig, error } = this.state\n    const { contentful_id, internal } = moduleConfig\n    let moduleConfigUpdate = {\n      ...moduleConfig,\n      previewMode: true,\n    }\n\n    return (\n      <Layout>\n        {internal && internal.type !== 'ContentfulLayout' ? (\n          <Hero\n            headline=\"MetaMask Module Preview Page\"\n            description={\n              loading\n                ? `...Loading`\n                : `Previewing component ${internal && internal.type}`\n            }\n          />\n        ) : null}\n        <PreviewWrapper\n          customPreview={internal && internal.type !== 'ContentfulLayout'}\n        >\n          {contentful_id &&\n            internal.type &&\n            contentfulModuleToComponent(moduleConfigUpdate)}\n        </PreviewWrapper>\n        {error && <h4> Failed to load component: {error.message}</h4>}\n      </Layout>\n    )\n  }\n}\n\nconst PreviewWrapper = styled(ContentWrapper)`\n  ${({ customPreview }) => (customPreview ? `padding-bottom: 48px;` : '')}\n`\n\nexport default PreviewPage\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n"],"sourceRoot":""}