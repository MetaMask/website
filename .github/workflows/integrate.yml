name: Build and Deploy

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  build_deploy:
    runs-on: ubuntu-latest
    # container: node:18
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
        with:
          persist-credentials: false

      - name: Create development env file
        run: |
          touch gatsby.development.env
          echo GATSBY_LD_CLIENT_ID =${{ secrets.GATSBY_LD_CLIENT_ID }} >> gatsby.development.env
          echo GATSBY_CONTENTFUL_API_KEY =${{ secrets.GATSBY_CONTENTFUL_API_KEY }} >> gatsby.development.env
          echo GATSBY_CONTENTFUL_DOWNLOAD_LOCAL =${{ secrets.GATSBY_CONTENTFUL_DOWNLOAD_LOCAL }} >> gatsby.development.env
          echo GATSBY_CONTENTFUL_ENVIRONMENT =${{ secrets.GATSBY_CONTENTFUL_ENVIRONMENT }} >> gatsby.development.env
          echo GATSBY_CONTENTFUL_HOST =${{ secrets.GATSBY_CONTENTFUL_HOST }} >> gatsby.development.env
          echo GATSBY_CONTENTFUL_SPACE_ID =${{ secrets.GATSBY_CONTENTFUL_SPACE_ID }} >> gatsby.development.env
          echo GATSBY_GA_ID =${{ secrets.GATSBY_GA_ID }} >> gatsby.development.env
          echo GATSBY_GTM_ID =${{ secrets.GATSBY_GTM_ID }} >> gatsby.development.env
          echo GATSBY_CONSENSYS_HOST =${{ secrets.GATSBY_CONSENSYS_HOST }} >> gatsby.development.env
          echo GATSBY_CONTENTFUL_PREVIEW_HOST =${{ secrets.GATSBY_CONTENTFUL_PREVIEW_HOST }} >> gatsby.development.env
          echo GATSBY_CONTENTFUL_PREVIEW_API_KEY =${{ secrets.GATSBY_CONTENTFUL_PREVIEW_API_KEY }} >> gatsby.development.env
          echo GH_TOKEN =${{ secrets.GH_TOKEN }} >> gatsby.development.env

      - name: Read .nvmrc
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_ENV
        id: nvm

      - name: Setup Node.js 🔧
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NVMRC }}
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'

      - name: Install and Build 🔧
        run: |
          yarn install --frozen-lockfile
          yarn deploy:dev
        env:
          CI: true

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          # token: ${{ secrets.GITHUB_TOKEN }}
          # branch: gh-pages # The branch the action should deploy to.
          folder: public # The folder the action should deploy.
          clean: true # Automatically remove deleted files from the deploy branch
