{"componentChunkName":"component---src-templates-contentful-news-category-layout-js","path":"/tr/news/developers/page/10/","result":{"data":{"header":{"contentful_id":"6I0knvqLf0DS5PB72DqUlM","node_locale":"tr","internal":{"type":"ContentfulLayoutHeader"},"logo":{"contentful_id":"6fkPzzTMo3IoMKGMshuSVD","node_locale":"tr","internal":{"type":"ContentfulLogo"},"title":"MetaMask Logo","logo":{"title":"mm-logo","description":"","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/4zJfzJbG3kTDSk5Wo4RJI1/1b363263141cf629b28155e2625b56c9/mm-logo.svg"},"gatsbyImageData":null},"logoDarkMode":{"title":"mm-logo-white","description":"","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/2qy1wS5MmZOXkXn9yFlGJp/f3797a512c283e6f71450abd408b7452/mm-logo-white.svg"},"gatsbyImageData":null},"link":"/","newTab":false,"displayTitle":false,"widthLogo":null,"backgroundColor":null,"customClass":null},"logoMobile":null,"menuItems":[{"columns":1,"title":"Özellikler","displayTitle":true,"modules":[{"node_locale":"tr","contentful_id":"3Ngv0xEpQwwiVjfu3MVui9","fontSize":null,"ctaLink":"https://portfolio.metamask.io/","displayText":"MetaMask Portfolio","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":"Nav Bar Button","eventCategory":"MetaMask Portfolio ","socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"272HODLnCd83z9Is3VXfCV","fontSize":null,"ctaLink":"/swaps/","displayText":"Swap İşlemleri","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"3GGJuQss10B4ejSi1vzHxk","fontSize":null,"ctaLink":"/buy-crypto/","displayText":"Kripto Al","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"4OJuQIyiz6RKXiEZ2aMYX5","fontSize":null,"ctaLink":"/sell-crypto/","displayText":"Kripto Sat","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":"sell-crypto","customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"5n6LAatVBeM1vw6ok6bqcR","fontSize":null,"ctaLink":"/snaps/","displayText":"MetaMask Snaps","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}]},{"columns":1,"title":"Oluştur","displayTitle":true,"modules":[{"node_locale":"tr","contentful_id":"1JmDHLFU2Y45o1QXsQDjC1","fontSize":null,"ctaLink":"https://docs.metamask.io/","displayText":"Belgeler","displayTextTreatment":null,"newTab":true,"buttonDisplay":null,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":false,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"5gPptdmrIjeGdYowLtrCHo","fontSize":null,"ctaLink":"/developer/","displayText":"Geliştiriciler","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":false,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"60cjqarld8mVDWHs8qZ4q1","fontSize":null,"ctaLink":"/institutions/","displayText":"Institutions","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":false,"buttonCaretDown":false,"launchDarklyFlag":"institutions","customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"39eW2psItqGMrBVsMkLyDz","fontSize":null,"ctaLink":"/sdk/","displayText":"SDK","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}]},{"columns":1,"title":"Kaynaklar","displayTitle":true,"modules":[{"node_locale":"tr","contentful_id":"6NMiwFe3tTn9NV1K9UGlcZ","fontSize":null,"ctaLink":"/news/","displayText":"Blog","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"3eavIRbBzcKt3XA1CZRrON","fontSize":null,"ctaLink":"https://support.metamask.io","displayText":"Destek","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"qGq9T5d9vFmRNSvrQbNOk","fontSize":null,"ctaLink":"/faqs/","displayText":"Sıkça Sorulan Sorular","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"hFoMVr6dpc0M4Q8OzIvoa","fontSize":null,"ctaLink":"https://community.metamask.io/","displayText":"Topluluk","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}]},{"node_locale":"tr","contentful_id":"1wFIQKdGvyapyZJfmISWHc","fontSize":null,"ctaLink":"https://learn.metamask.io/overview","displayText":"Öğren","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":"Nav Bar Button","eventCategory":"MetaMask Learn ","socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}],"downloadButton":{"node_locale":"tr","contentful_id":"3v9J6feUIljXuMBM0EYQNh","fontSize":null,"ctaLink":"/download/","displayText":"İndir","displayTextTreatment":null,"newTab":false,"buttonDisplay":true,"buttonGradient":false,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":"Nav Bar Button","eventCategory":"Download Intent","socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":"ld-download-link","internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":{"node_locale":"tr","contentful_id":"4bGNlgZAx6ugxPYFht8Ble","fontSize":null,"ctaLink":"https://portfolio.metamask.io/","displayText":"Portfolio'yu görüntüle","displayTextTreatment":null,"newTab":true,"buttonDisplay":true,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":false,"buttonCaretDown":null,"launchDarklyFlag":"navbar-view-portfolio-cta","customClassName":"ld-portfolio-link","internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null}},"popupAnnouncement":{"contentful_id":"5yOpjVXgyG3eGYvZQkmv4f","node_locale":"tr","internal":{"type":"ContentfulPopupAnnouncement"},"title":null,"ctaText":"MetaMask Portfolio'yu bugün keşfedin. Tek bir noktadan web3 varlıklarınızı takip edin ve yönetin!","ctaLink":"https://portfolio.metamask.io","backgroundColor":"#037DD5"},"popupAnnouncementTreatment":{"contentful_id":"5cklTGW1qCkOwqxdVYhhFc","node_locale":"tr","internal":{"type":"ContentfulPopupAnnouncement"},"title":null,"ctaText":"Stake Havuzu ile kriptonuzun büyümesini izleyin. Kriptonuzu stake edin ve Ethereum ağını korumanız karşılığında ödül kazanın.","ctaLink":"https://portfolio.metamask.io/stake?tab=pooled","backgroundColor":"#037DD5"},"isSticky":true,"launchDarklyFlag":"use-treatment-for-non-uk-and-us-announcement"},"footer":{"contentful_id":"75bFgEllkMxpVsY8wWlroX","node_locale":"tr","internal":{"type":"ContentfulLayoutFooter"},"logo":{"contentful_id":"6fkPzzTMo3IoMKGMshuSVD","node_locale":"tr","internal":{"type":"ContentfulLogo"},"title":"MetaMask Logo","logo":{"title":"mm-logo","description":"","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/4zJfzJbG3kTDSk5Wo4RJI1/1b363263141cf629b28155e2625b56c9/mm-logo.svg"},"gatsbyImageData":null},"logoDarkMode":{"title":"mm-logo-white","description":"","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/2qy1wS5MmZOXkXn9yFlGJp/f3797a512c283e6f71450abd408b7452/mm-logo-white.svg"},"gatsbyImageData":null},"link":"/","newTab":false,"displayTitle":false,"widthLogo":null,"backgroundColor":null,"customClass":null},"menuItems":[{"columns":1,"title":"Daha Fazla Bilgi","displayTitle":true,"modules":[{"node_locale":"tr","contentful_id":"2OzvqisgIr6A5gzJuQm24G","fontSize":null,"ctaLink":"/about/","displayText":"Hakkında","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"5gPptdmrIjeGdYowLtrCHo","fontSize":null,"ctaLink":"/developer/","displayText":"Geliştiriciler","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":false,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"NM6IbWouGG4tghpXmNAtJ","fontSize":null,"ctaLink":"/download/","displayText":"İndir","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"6Ui9MOvxC2ExjCL1DeWH1q","fontSize":null,"ctaLink":"/institutions/","displayText":"MetaMask Institutional","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"5UxqbY7b31kskBIj5IibqC","fontSize":null,"ctaLink":"/news/","displayText":"Haberler","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"6qlnG54k7tXJVMscTQhIun","fontSize":null,"ctaLink":"https://metamask.io/security/","displayText":"Güvenlik","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}]},{"columns":1,"title":"Dahil Olun","displayTitle":true,"modules":[{"node_locale":"tr","contentful_id":"4mpEqrd6pewz2iX2Gfxt3z","fontSize":null,"ctaLink":"https://github.com/MetaMask/metamask-extension/","displayText":"GitHub","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"6kdhvf8S4erkJPUlGWY0Ae","fontSize":null,"ctaLink":"https://gitcoin.co/","displayText":"Gitcoin","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"5xd9mrSTpZ9Ky7XWhDDTth","fontSize":null,"ctaLink":"https://consensys.io/open-roles/?discipline=32543","displayText":"Açık Pozisyonlar","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"6SYAtiKQ188OxaIKhHd7qj","fontSize":null,"ctaLink":"https://shop.spreadshirt.com/metamask/","displayText":"Swag Mağazası","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"72IN7H47TcmIvmYyyTETIS","fontSize":null,"ctaLink":"https://metamask.zendesk.com/hc/en-us/requests/new?ticket_form_id=360001539191","displayText":"Basın ve Ortaklıklar","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}]},{"columns":1,"title":"Yasal","displayTitle":true,"modules":[{"node_locale":"tr","contentful_id":"4LiJW9vtg515J8Bhlzq8nC","fontSize":null,"ctaLink":"https://consensys.io/privacy-notice","displayText":"Gizlilik Politikası","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"2GpObxkrC9uUyLXLonaa3F","fontSize":null,"ctaLink":"/terms-of-use/","displayText":"Kullanım Şartları","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"5WpVb2xPvtf19P6NVNloit","fontSize":null,"ctaLink":"/cla/","displayText":"Katkıda Bulunan Lisans Sözleşmesi","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"tr","contentful_id":"19JXW3A4VGjeuEC6u46uC4","fontSize":null,"ctaLink":"/sitemap/","displayText":"Site Haritası","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}]}],"copyright":"©2024 MetaMask • Bir Consensys Oluşumu"},"seo":{"contentful_id":"7k3sOZj8ICP53K0J7jXp7B","node_locale":"tr","internal":{"type":"ContentfulSeo"},"pageTitle":"Web3: MetaMask Haberlerinde En Yeniler ile Güncel Kalın","pageDescription":"Haberdar Olun: MetaMask Haberlerinden En Yeni Güncellemeler ve Gelişmeler.","metaTags":null,"linkTags":null,"canonicalUrl":null,"featuredImage":{"file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/77mVisJcj8sMquYlW3iq73/22a2dd6975f7522fac5dca4ce1a4d969/tr_-_seo1.png"},"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/77mVisJcj8sMquYlW3iq73/22a2dd6975f7522fac5dca4ce1a4d969/tr_-_seo1.png?w=192&h=101&q=100&fm=webp 192w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/77mVisJcj8sMquYlW3iq73/22a2dd6975f7522fac5dca4ce1a4d969/tr_-_seo1.png?w=384&h=202&q=100&fm=webp 384w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/77mVisJcj8sMquYlW3iq73/22a2dd6975f7522fac5dca4ce1a4d969/tr_-_seo1.png?w=768&h=403&q=100&fm=webp 768w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/77mVisJcj8sMquYlW3iq73/22a2dd6975f7522fac5dca4ce1a4d969/tr_-_seo1.png?w=1536&h=806&q=100&fm=webp 1536w","sizes":"(min-width: 768px) 768px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/9sy2a0egs6zh/77mVisJcj8sMquYlW3iq73/22a2dd6975f7522fac5dca4ce1a4d969/tr_-_seo1.png?w=768&h=403&q=100&fm=png","srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/77mVisJcj8sMquYlW3iq73/22a2dd6975f7522fac5dca4ce1a4d969/tr_-_seo1.png?w=192&h=101&q=100&fm=png 192w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/77mVisJcj8sMquYlW3iq73/22a2dd6975f7522fac5dca4ce1a4d969/tr_-_seo1.png?w=384&h=202&q=100&fm=png 384w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/77mVisJcj8sMquYlW3iq73/22a2dd6975f7522fac5dca4ce1a4d969/tr_-_seo1.png?w=768&h=403&q=100&fm=png 768w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/77mVisJcj8sMquYlW3iq73/22a2dd6975f7522fac5dca4ce1a4d969/tr_-_seo1.png?w=1536&h=806&q=100&fm=png 1536w","sizes":"(min-width: 768px) 768px, 100vw"}},"layout":"constrained","width":768,"height":403}},"structuredDataSchema":null},"hero":{"contentful_id":"4ZjPczvQn6fYgigGRFSQPf","node_locale":"tr","internal":{"type":"ContentfulLayoutHero"},"headline":"MetaMask Haberleri","headlinePortfolio":null,"hideHeadline":false,"description":{"childMarkdownRemark":{"html":"<a href=\"https://twitter.com/metamask/\" target=\"_blank\">\n  <svg width=\"25\" height=\"20\" viewBox=\"0 0 25 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M24.5 2.55699C23.617 2.94899 22.668 3.21299 21.672 3.33199C22.689 2.72299 23.47 1.75799 23.837 0.607986C22.886 1.17199 21.832 1.58199 20.71 1.80299C19.813 0.845986 18.532 0.247986 17.116 0.247986C13.937 0.247986 11.601 3.21399 12.319 6.29299C8.228 6.08799 4.6 4.12799 2.171 1.14899C0.881 3.36199 1.502 6.25699 3.694 7.72299C2.888 7.69699 2.128 7.47599 1.465 7.10699C1.411 9.38799 3.046 11.522 5.414 11.997C4.721 12.185 3.962 12.229 3.19 12.081C3.816 14.037 5.634 15.46 7.79 15.5C5.72 17.123 3.112 17.848 0.5 17.54C2.679 18.937 5.268 19.752 8.048 19.752C17.19 19.752 22.355 12.031 22.043 5.10599C23.005 4.41099 23.84 3.54399 24.5 2.55699Z\" fill=\"#535A61\"/>\n</svg>Takip et @MetaMask\n</a>"}},"descriptionPortfolio":null,"note":null,"eyebrow":null,"eyebrowLogo":null,"eyebrowMobileLogo":null,"eyebrowLogoDarkMode":null,"eyebrowMobileLogoDarkMode":null,"sideImageFlex":false,"sideImageFoxAnimation":null,"sideImage":null,"sideImagePortfolio":null,"sideImageDarkMode":null,"sideImagePortfolioDarkMode":null,"ctas":null,"hubSpotForm":null,"backgroundColor":"default","contentAlignment":"center","learnMoreText":null,"headlineBorderBottom":false,"showFavIcon":false,"sectionPadding":"32px","backgroundImage":{"title":"News Hero","description":"","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/2DkHpHReuWGy3rlFwsseg9/f0814f115710a6ffa477c575a2215f89/News_Hero.png"},"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/2DkHpHReuWGy3rlFwsseg9/f0814f115710a6ffa477c575a2215f89/News_Hero.png?w=480&h=96&q=80&fm=webp 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/2DkHpHReuWGy3rlFwsseg9/f0814f115710a6ffa477c575a2215f89/News_Hero.png?w=960&h=192&q=80&fm=webp 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/2DkHpHReuWGy3rlFwsseg9/f0814f115710a6ffa477c575a2215f89/News_Hero.png?w=1920&h=384&q=80&fm=webp 1920w","sizes":"(min-width: 1920px) 1920px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/9sy2a0egs6zh/2DkHpHReuWGy3rlFwsseg9/f0814f115710a6ffa477c575a2215f89/News_Hero.png?w=1920&h=384&q=80&fm=png","srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/2DkHpHReuWGy3rlFwsseg9/f0814f115710a6ffa477c575a2215f89/News_Hero.png?w=480&h=96&q=80&fm=png 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/2DkHpHReuWGy3rlFwsseg9/f0814f115710a6ffa477c575a2215f89/News_Hero.png?w=960&h=192&q=80&fm=png 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/2DkHpHReuWGy3rlFwsseg9/f0814f115710a6ffa477c575a2215f89/News_Hero.png?w=1920&h=384&q=80&fm=png 1920w","sizes":"(min-width: 1920px) 1920px, 100vw"}},"layout":"constrained","width":1920,"height":384}},"backgroundImageDarkMode":{"title":"News Hero (Dark mode)","description":"","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/RjpEbmeL6vLPeiSjePDpy/2f287d7a85aecbb7657d3bbd0b28b8ed/Auto_Layout_Vertical-dark.png"},"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/RjpEbmeL6vLPeiSjePDpy/2f287d7a85aecbb7657d3bbd0b28b8ed/Auto_Layout_Vertical-dark.png?w=480&h=96&q=80&fm=webp 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/RjpEbmeL6vLPeiSjePDpy/2f287d7a85aecbb7657d3bbd0b28b8ed/Auto_Layout_Vertical-dark.png?w=960&h=192&q=80&fm=webp 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/RjpEbmeL6vLPeiSjePDpy/2f287d7a85aecbb7657d3bbd0b28b8ed/Auto_Layout_Vertical-dark.png?w=1920&h=384&q=80&fm=webp 1920w","sizes":"(min-width: 1920px) 1920px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/9sy2a0egs6zh/RjpEbmeL6vLPeiSjePDpy/2f287d7a85aecbb7657d3bbd0b28b8ed/Auto_Layout_Vertical-dark.png?w=1920&h=384&q=80&fm=png","srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/RjpEbmeL6vLPeiSjePDpy/2f287d7a85aecbb7657d3bbd0b28b8ed/Auto_Layout_Vertical-dark.png?w=480&h=96&q=80&fm=png 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/RjpEbmeL6vLPeiSjePDpy/2f287d7a85aecbb7657d3bbd0b28b8ed/Auto_Layout_Vertical-dark.png?w=960&h=192&q=80&fm=png 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/RjpEbmeL6vLPeiSjePDpy/2f287d7a85aecbb7657d3bbd0b28b8ed/Auto_Layout_Vertical-dark.png?w=1920&h=384&q=80&fm=png 1920w","sizes":"(min-width: 1920px) 1920px, 100vw"}},"layout":"constrained","width":1920,"height":384}},"customClass":"newsHero"},"layoutModuleContainer":{"internal":{"type":"ContentfulLayoutModuleContainer"},"contentful_id":"P9sMsqPrQxPv6xyeMWZvn","node_locale":"tr","eyebrow":null,"headline":null,"description":null,"modules":[{"contentful_id":"3pVthg97YVjIy9Z6a8ntfm","node_locale":"tr","internal":{"type":"ContentfulModuleContainer"},"title":"En Yeniler","description":{"childMarkdownRemark":{"html":"<h2>En Yeni Haberler</h2>\nSizin için blog paylaşımlarımız ve yayınlarımız"}},"numberOfItem":0,"columns":2,"columnType":null,"columnsOnTablet":null,"centerOnTablet":null,"columnsOnMobile":1,"centerOnMobile":null,"contentAlignment":"left","splitModules":false,"displayTitle":false,"isLiquiditySection":false,"isTrustBar":null,"gridModulesGap":"16px","loadMoreMode":null,"loadMoreCta":null,"carouselMode":null,"hasRegionSelector":null,"regionSelectorHeadline":null,"regionSelectorPopupTitle":null,"regionSelectorPopupText":null,"regionListKey":null,"extraData":null,"modules":[{"contentful_id":"3tE0tpmPMGsXezpOhKyWGO","node_locale":"tr","internal":{"type":"ContentfulNewsCategory"},"name":"En Yeniler","slug":"latest"}]},{"contentful_id":"6e8qa9GygFsjJT0bK9T1Ae","node_locale":"tr","internal":{"type":"ContentfulModuleContainer"},"title":"Güvenlik","description":{"childMarkdownRemark":{"html":"<h2>Güvenlik</h2>\nGüvenlikle ilgili tüm haberleriniz"}},"numberOfItem":0,"columns":2,"columnType":null,"columnsOnTablet":null,"centerOnTablet":null,"columnsOnMobile":1,"centerOnMobile":null,"contentAlignment":"left","splitModules":false,"displayTitle":false,"isLiquiditySection":false,"isTrustBar":null,"gridModulesGap":"16px","loadMoreMode":null,"loadMoreCta":null,"carouselMode":null,"hasRegionSelector":null,"regionSelectorHeadline":null,"regionSelectorPopupTitle":null,"regionSelectorPopupText":null,"regionListKey":null,"extraData":null,"modules":[{"contentful_id":"73InEMthwQcFmYQ8Ta61gS","node_locale":"tr","internal":{"type":"ContentfulNewsCategory"},"name":"Güvenlik","slug":"security"}]},{"contentful_id":"3D1RfQOf8U5zibB0UvA9K6","node_locale":"tr","internal":{"type":"ContentfulModuleContainer"},"title":"Geliştiriciler","description":{"childMarkdownRemark":{"html":"<h2>Geliştiriciler</h2>\nGeliştiricinizle ilgili tüm haberler"}},"numberOfItem":0,"columns":2,"columnType":null,"columnsOnTablet":null,"centerOnTablet":null,"columnsOnMobile":1,"centerOnMobile":null,"contentAlignment":"left","splitModules":false,"displayTitle":false,"isLiquiditySection":false,"isTrustBar":null,"gridModulesGap":"16px","loadMoreMode":null,"loadMoreCta":null,"carouselMode":null,"hasRegionSelector":null,"regionSelectorHeadline":null,"regionSelectorPopupTitle":null,"regionSelectorPopupText":null,"regionListKey":null,"extraData":null,"modules":[{"contentful_id":"Jc9ZQ937JgPbuV2Xap2l7","node_locale":"tr","internal":{"type":"ContentfulNewsCategory"},"name":"Geliştiriciler","slug":"developers"}]},{"contentful_id":"6abraWA8TPklSLTzB1wr8E","node_locale":"tr","internal":{"type":"ContentfulModuleContainer"},"title":"Kurumlar","description":{"childMarkdownRemark":{"html":"<h2 class=\"mb-3\">Kurumlar</h2>\nKurumlarla ilgili tüm haberleriniz"}},"numberOfItem":0,"columns":2,"columnType":null,"columnsOnTablet":null,"centerOnTablet":null,"columnsOnMobile":1,"centerOnMobile":null,"contentAlignment":"left","splitModules":false,"displayTitle":false,"isLiquiditySection":false,"isTrustBar":false,"gridModulesGap":"16px","loadMoreMode":null,"loadMoreCta":null,"carouselMode":null,"hasRegionSelector":null,"regionSelectorHeadline":null,"regionSelectorPopupTitle":null,"regionSelectorPopupText":null,"regionListKey":null,"extraData":null,"modules":[{"contentful_id":"75mzA7RLLPzWfBjl54wLRJ","node_locale":"tr","internal":{"type":"ContentfulNewsCategory"},"name":"Kurumlar","slug":"institutions"}]}],"cta":null,"backgroundColor":"default","displayHeadline":false,"headlineAlignCenter":false,"contentAlignCenter":false,"headlineMarginTop0":null,"paddingTop":"40px","sectionPadding":null,"noPaddingTop":null,"noPaddingBottom":false,"modulesMargin":null,"isTab":true,"moduleId":null,"customClass":"newsCategoriesTab","sideImage":null,"backgroundSize":"cover","backgroundImage":null},"stories":{"nodes":[{"contentful_id":"3dK2fJPEGLwwdB5Otiws8p","node_locale":"tr","internal":{"type":"ContentfulNews"},"title":"How to build a user feedback loop into your web3 dapp","slug":"how-to-build-a-user-feedback-loop-into-your-web-3-dapp","subtitle":"Build a user feedback form into your web3 dapp.","image":{"title":"How to build a user feedback loop into your web3 dapp image","description":"","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/7GikXLVJWAbwY6GC4yeNeB/35098a4562894d750b75587884193916/How_to_build_a_user_feedback_loop_into_your_web3_dapp.png"},"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/7GikXLVJWAbwY6GC4yeNeB/35098a4562894d750b75587884193916/How_to_build_a_user_feedback_loop_into_your_web3_dapp.png?w=384&h=216&q=80&fm=webp 384w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/7GikXLVJWAbwY6GC4yeNeB/35098a4562894d750b75587884193916/How_to_build_a_user_feedback_loop_into_your_web3_dapp.png?w=768&h=432&q=80&fm=webp 768w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/7GikXLVJWAbwY6GC4yeNeB/35098a4562894d750b75587884193916/How_to_build_a_user_feedback_loop_into_your_web3_dapp.png?w=1536&h=864&q=80&fm=webp 1536w","sizes":"(min-width: 1536px) 1536px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/9sy2a0egs6zh/7GikXLVJWAbwY6GC4yeNeB/35098a4562894d750b75587884193916/How_to_build_a_user_feedback_loop_into_your_web3_dapp.png?w=1536&h=864&q=80&fm=png","srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/7GikXLVJWAbwY6GC4yeNeB/35098a4562894d750b75587884193916/How_to_build_a_user_feedback_loop_into_your_web3_dapp.png?w=384&h=216&q=80&fm=png 384w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/7GikXLVJWAbwY6GC4yeNeB/35098a4562894d750b75587884193916/How_to_build_a_user_feedback_loop_into_your_web3_dapp.png?w=768&h=432&q=80&fm=png 768w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/7GikXLVJWAbwY6GC4yeNeB/35098a4562894d750b75587884193916/How_to_build_a_user_feedback_loop_into_your_web3_dapp.png?w=1536&h=864&q=80&fm=png 1536w","sizes":"(min-width: 1536px) 1536px, 100vw"}},"layout":"constrained","width":1920,"height":1080}},"publishDate":"August 3, 2023","authors":[{"name":"Clarissa Watson","createProfilePage":true,"profileUrl":"clarissa-watson"}],"content":{"childMarkdownRemark":{"html":"<p>Collecting user feedback is one of the most critical steps to achieving product-market-fit and creating a successful application. And it’s even more important in web3, where standards for UX design are still emerging and undefined.</p>\n<p>For web3 developers, the most popular method of collecting user feedback about their dapps continues to be centralized solutions offered by companies like Google and Mailchimp. However, on-chain feedback forms are now available. Let’s look at these web3-native feedback forms, why they’re important to your dapp’s success, and how to use them.</p>\n<p>In a previous <a href=\"https://metamask.io/news/developers/integrate-a-feedback-form-into-your-dapp-collect-user-data-at-scale/\">post</a>, we introduced <a href=\"https://github.com/Consensys/Form-XChange\">Form-xChange</a>: a new open-source, decentralized web3 form built by <a href=\"https://consensys.io/\">Consensys</a>, and showed you how to integrate it into your dapp using the MetaMask SDK.</p>\n<p>In this tutorial,  we’ll build on these steps by showing you how to deploy a feedback form to your frontend and create a new form for users to share their input about your dapp. But first, a quick reminder on the importance of collecting user feedback for product development and management.</p>\n<h2>Web3 user feedback forms to help mass adoption</h2>\n<br /> \n<p>Native, decentralized feedback forms are desperately needed in web3. Why?</p>\n<ol>\n<li><strong>They cut costs dramatically:</strong> The only (and one-time) cost associated with creating a form is during the deployment of a smart contract. And if deployed on an L2 like <a href=\"https://linea.build/\">Linea</a>, the cost is usually not more than a few dollars.</li>\n<li><strong>They have near-infinite customization possibilities:</strong> You can design your form to collect any kind of feedback you wish (text, reactions, links, etc.). Additionally, you can customize your frontend as needed as it is completely distinct from the contract.</li>\n<li><strong>You pay only for what you use:</strong> With decentralized forms, there are no payment tiers based on the number of responses. Theoretically, you can record as many responses as you want.  \\</li>\n</ol>\n<p>If you’re adopting a model where customers pay gas, you won’t incur any cost beyond contract deployment. <br>\nIf you choose to pay the bill on behalf of your customers, again the cost is a few cents when you’re operating on a cost-efficient network.\n4. <strong>You can implement token gating:</strong> Using decentralized forms, you can gate access to who can respond to your form questions. Therefore, you could theoretically limit access to wallets who own NFTs from your collection, wallets that have a certain non-zero balance of ETH, or an ERC-20 token of your choice.</p>\n<h2>A tutorial: creating your own decentralized user feedback form</h2>\n<br /> \n<h3>Step 1: Install MetaMask</h3>\n<br /> \n<p>We will be deploying and interacting with our contracts on Linea. In order to do this, we will require a crypto wallet that is configured with the Linea network and has a small balance of LineaETH.</p>\n<p>You first need a web3 wallet. In this tutorial we’ll use MetaMask — a free, easy to use wallet that comes automatically configured with Linea. You can install MetaMask <a href=\"https://metamask.io/download/\">as an extension for your browser here</a>.</p>\n<p>Note: For this tutorial, we recommend using a browser other than Brave (for example, Edge, Chrome, Safari, etc.). At the time of writing, Form-xChange has known issues running on the Brave browser.</p>\n<p>Once you’ve added the extension, MetaMask will prompt you to complete a series of steps, including giving you your wallet recovery phrase. <em>Store this phrase carefully</em>. If lost, you can’t recover it. If stolen, someone else will have access to your funds.</p>\n<p>Once your wallet is set up, navigate to the network drop-down in the top left of the MetaMask extension and toggle <em>show test networks</em> on. From the new drop-down, select the <em>Linea Goerli</em> network. If all goes well, your wallet should look something like this:</p>\n<p><img src=\"//images.ctfassets.net/9sy2a0egs6zh/3IS7mG7vg4heLtUzP9brDe/772b05c1494f799ced5d9abefe5926f5/image2.png\" alt=\"Image 2\"></p>\n<h3>Step 2: Acquire LineaETH from a faucet</h3>\n<p>If this is your first time working with Linea, your wallet will (obviously) have a balance of 0 LineaETH.</p>\n<p>Let’s change that. <a href=\"https://www.infura.io/faucet/linea\">Infura has a faucet</a> that gives you access to free 0.5 LineaETH every day. In order to access this faucet, you may be prompted to create a free Infura account.</p>\n<p><img src=\"//images.ctfassets.net/9sy2a0egs6zh/6L9FXQnXv0WpF0ZB9LWX0X/e453b6ac40dcd15fc7ed2d60b55514cd/image1.png\" alt=\"Image 1\"></p>\n<p>Once the top up is done, you should see a small LineaETH balance:</p>\n<p><img src=\"//images.ctfassets.net/9sy2a0egs6zh/5q16JJyRsQVUV9FSApE5AI/077cb25ea8046c040052875930247076/image3.png\" alt=\"Image 3\"></p>\n<h3>Step 3: Acquire a Linea RPC endpoint</h3>\n<br /> \n<p>Sign into <a href=\"https://app.infura.io/dashboard\">Infura</a> again using the account you created in the previous step. You will automatically be redirected to the main dashboard.</p>\n<p>Here, create a new project by creating a new API key on the top right.</p>\n<p><img src=\"//images.ctfassets.net/9sy2a0egs6zh/38acGFUjtpXMMVpqYfvdib/9e3ccd4c9fb1f3b15b6104c965122484/image8.png\" alt=\"Image 4\"></p>\n<p>For network, choose web3 API. You can name the key anything you want.</p>\n<p>Once your key is created, you will be redirected once again to a project dashboard containing a collection of endpoints. From here, take note of the endpoint associated with Linea testnet. We will require this in a later step to deploy our Form-xChange contracts.</p>\n<h3>Step 4: Install node and npm</h3>\n<br /> \n<p>The Form-xChange solution runs on a stack of Infura, Next.js, Truffle, and the Dapp API. In order to install and use these technologies, we’ll need node and npm on our local machine.</p>\n<p><a href=\"https://docs.npmjs.com/downloading-and-installing-node-js-and-npm#using-a-node-version-manager-to-install-nodejs-and-npm\">You can download both for your operating system here</a>.</p>\n<p>Once done, check that it has been installed correctly by checking their version numbers on your terminal.</p>\n<pre><code class=\"language-bash\">$ node -v\n$ npm -v\n</code></pre>\n<h3>Step 5: Clone the Form-xChange repository</h3>\n<p>As mentioned earlier, Form-xChange is an open-source repository whose source code is publicly <a href=\"https://github.com/Consensys/Form-XChange\">available on GitHub</a>.</p>\n<p>Let’s clone this repository and install all required packages using the following commands:</p>\n<pre><code class=\"language-bash\">$ git clone https://github.com/Consensys/Form-XChange\n$ cd Form-XChange\n$ npm install\n</code></pre>\n<p>Open the Form-xChange repository in your favorite code editor (e.g. VS Code). This is a turn-key project, so we won’t need to write much code apart from configuring a few environment variables.</p>\n<h3>Step 6: Deploy the feedback form</h3>\n<br /> \n<p>Navigate to the sub-folder containing the Truffle project and the form smart contracts:</p>\n<pre><code class=\"language-bash\">$ cd packages/form-XChange\n</code></pre>\n<p>In this folder, you will see a <em>contracts</em> sub-folder that contains two main contracts: a FeedbackForm and a FeedbackFormFactory.</p>\n<p>The former implements an individual form that is capable of storing a list of questions and responses made to those questions.</p>\n<p>The latter is a <em>factory</em> contract that can be used to deploy customized versions of the former.</p>\n<p>You can take a look at the source code and make modifications according to the kind of form that you want to create. For this tutorial, we’ll stick to the default configuration.</p>\n<p>In this step, we are going to deploy the FeedbackFormFactory contract. This will allow us, the creator, to create forms from our Next frontend.</p>\n<p>In order to do this, create a file named <em>.env</em> and add the following information:</p>\n<pre><code>MNEMONIC = \"&#x3C; YOUR WALLET RECOVERY PHRASE >\"\n</code></pre>\n<p>Next, in the <em>truffle-config.js</em> file, replace the generic RPC endpoint with the Infura endpoint you generated in Step 3. The final config file should look something like this:</p>\n<pre><code class=\"language-javascript\">require(\"dotenv\").config();\nconst mnemonic = process.env[\"MNEMONIC\"];\n\nconst HDWalletProvider = require(\"@truffle/hdwallet-provider\");\n\nmodule.exports = {\n  networks: {\n    development: {\n      host: \"127.0.0.1\", // Localhost\n      port: 9545,\n      network_id: \"5777\",\n      chain_id: 1337,\n    },\n    linea: {\n      provider: () =>\n        new HDWalletProvider(mnemonic, `&#x3C; INFURA LINEA ENDPOINT >`),\n      network_id: 59140,\n      chain_id: 59140,\n    },\n  },\n  mocha: {\n    timeout: 100000,\n  },\n  compilers: {\n    solc: {\n      version: \"0.8.13\",\n    },\n  },\n};\n\n</code></pre>\n<p>We’re all set! Deploy the feedback form factory contract by running the following command:</p>\n<pre><code class=\"language-bash\">$ npm run linea\n</code></pre>\n<p>If all goes well you should see output that looks something like this:</p>\n<pre><code class=\"language-bash\">> form-xchange@0.0.0 linea\n> npm run compile &#x26;&#x26; npm run generate-types &#x26;&#x26; npm run migrate:linea\n\n> form-xchange@0.0.0 compile\n> truffle compile\n\nCompiling your contracts...\n===========================\n> Everything is up to date, there is nothing to compile.\n\n> form-xchange@0.0.0 generate-types\n> typechain --target=truffle-v5 'build/contracts/*.json'\n\nSuccessfully generated 5 typings!\n\n> form-xchange@0.0.0 migrate:linea\n> truffle migrate --network linea\n\nCompiling your contracts...\n===========================\n> Everything is up to date, there is nothing to compile.\n\nStarting migrations...\n======================\n> Network name:    'linea'\n> Network id:      59140\n> Block gas limit: 61000000 (0x3a2c940)\n\n1_deploy_contracts.js\n=====================\n\n   Replacing 'FeedbackFormFactory'\n   -------------------------------\n   > transaction hash:    0x50ba2c362cb463d0b763ba5f092e3f1a8591dd9cd358f2feda035438ce02cee0\n   > Blocks: 2            Seconds: 21\n   > contract address:    0xBDAb1F857dC80968022784cc1C868820BFD2F7c5\n   > block number:        1099121\n   > block timestamp:     1688991002\n   > account:             0xc361Fc33b99F88612257ac8cC2d852A5CEe0E217\n   > balance:             0.62878173171592041\n   > gas used:            2636875 (0x283c4b)\n   > gas price:           2.500000007 gwei\n   > value sent:          0 ETH\n   > total cost:          0.006592187518458125 ETH\n\n   > Saving artifacts\n   -------------------------------------\n   > Total cost:     0.006592187518458125 ETH\n\nSummary\n=======\n> Total deployments:   1\n> Final cost:          0.006592187518458125 ETH\n</code></pre>\n<p>Take note of the contract address. We’ll need this in a later step.</p>\n<h3>Step 7: Deploy the Next frontend factory</h3>\n<p>With our feedback form factory contract live, let’s shift our attention to the Next frontend. Navigate to the Next app project by running the following command:</p>\n<pre><code class=\"language-bash\">$ cd ../../apps/web\n</code></pre>\n<p>We’ll need to connect our app with the contract we deployed in the previous step. We can do so by opening the <em>lib/contract.ts/config.ts</em> file and adding the contract address.</p>\n<pre><code class=\"language-javascript\">export const FEEDBACK_FACTORY_CONTRACT_ADDRESS = \"&#x3C; FEEDBACK FORM FACTORY CONTRACT ADDRESS >\";\n</code></pre>\n<p>In the apps/web folder, create another <em>.env</em> file and this time, add the Infura key associated with your project from Step 3.</p>\n<pre><code>INFURA_KEY=&#x3C; YOUR INFURA API KEY >\n</code></pre>\n<p>We’re all set! Let’s now deploy the app to localhost:</p>\n<pre><code class=\"language-bash\">$ npm run dev\n</code></pre>\n<p>You can now check out the app on localhost:3000. It should look something like this:</p>\n<p><img src=\"//images.ctfassets.net/9sy2a0egs6zh/792UlrKfIZDzDJyfAKnCVC/84a1f80de120aedbd3c0a60e3a3ec811/image4.png\" alt=\"Image 5\"></p>\n<p>Let’s go ahead and create a new form!</p>\n<p>Connect your MetaMask wallet using the functionality available in the top-right corner of the app. Once this is done, the app automatically recognizes that you were the one who deployed the factory contract and hence, you are the creator of the app too.</p>\n<p>This will allow you to <a href=\"http://localhost:3000/create-form\">create new forms from the UI here</a>.</p>\n<p><img src=\"//images.ctfassets.net/9sy2a0egs6zh/6Rfg1sJDfPB3A8iwbimUuc/4c304e924d438b2e5cc999d2daad9ddf/image7.png\" alt=\"Image 6\"></p>\n<p>Add a form title, description, and at least one question, and click on Create Form.</p>\n<p>This will prompt MetaMask to approve a transaction. Remember that you’re being asked to do this because creation of a form effectively means the creation of a new FeedbackForm contract.</p>\n<p>Head back to the home page, and you should see your form there. You can now submit responses on your form!</p>\n<p><img src=\"//images.ctfassets.net/9sy2a0egs6zh/4t2rVLLjK0kHQfssqU3FCc/aee3129273fbffe4f30009083e94f58d/image6.png\" alt=\"Image 7\"></p>\n<p>Note that you will be required to pay a small amount of gas in order to record this response (via MetaMask).</p>\n<h2>Keep building with the web3 stack: Infura, Linea, and MetaMask</h2>\n<p>And there you have it! Without writing almost any code, we have deployed an entire decentralized form solution for our dapp and gained the ability to not just capture user feedback, but to capture it in a decentralized, web3-native form. Projects like <a href=\"https://github.com/Consensys/Form-XChange\">Form-xChange</a> will be a big step towards bringing web2 UX design to web3 applications. Feel free to modify the look and feel of your Next frontend as well as the functionality offered by the smart contracts. You are free (and in fact, encouraged) to make this your own.</p>"}},"categories":[{"contentful_id":"Jc9ZQ937JgPbuV2Xap2l7","node_locale":"tr","internal":{"type":"ContentfulNewsCategory"},"name":"Geliştiriciler","slug":"developers"}],"metaTitle":null,"metaDescription":null,"canonicalUrl":null,"isPrivate":false},{"contentful_id":"5XSx5EZN8BAUveqTzIKR54","node_locale":"tr","internal":{"type":"ContentfulNews"},"title":"Integrate a Feedback Form into your Dapp & Collect User Data at Scale","slug":"integrate-a-feedback-form-into-your-dapp-collect-user-data-at-scale","subtitle":"Integrate a feedback form into your blockchain app using MetaMask SDK to collect user feedback and improve UX, and beyond!","image":{"title":"integrate a feedback form into your dapp","description":"","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/6VXdiXHF8bGzofDKsZvaZc/e3314cb26e04233188b754e49b7bd77b/image2.png"},"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/6VXdiXHF8bGzofDKsZvaZc/e3314cb26e04233188b754e49b7bd77b/image2.png?w=480&h=320&q=80&fm=webp 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/6VXdiXHF8bGzofDKsZvaZc/e3314cb26e04233188b754e49b7bd77b/image2.png?w=960&h=640&q=80&fm=webp 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/6VXdiXHF8bGzofDKsZvaZc/e3314cb26e04233188b754e49b7bd77b/image2.png?w=1920&h=1280&q=80&fm=webp 1920w","sizes":"(min-width: 1920px) 1920px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/9sy2a0egs6zh/6VXdiXHF8bGzofDKsZvaZc/e3314cb26e04233188b754e49b7bd77b/image2.png?w=1920&h=1280&q=80&fm=png","srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/6VXdiXHF8bGzofDKsZvaZc/e3314cb26e04233188b754e49b7bd77b/image2.png?w=480&h=320&q=80&fm=png 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/6VXdiXHF8bGzofDKsZvaZc/e3314cb26e04233188b754e49b7bd77b/image2.png?w=960&h=640&q=80&fm=png 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/6VXdiXHF8bGzofDKsZvaZc/e3314cb26e04233188b754e49b7bd77b/image2.png?w=1920&h=1280&q=80&fm=png 1920w","sizes":"(min-width: 1920px) 1920px, 100vw"}},"layout":"constrained","width":1920,"height":1280}},"publishDate":"July 6, 2023","authors":[{"name":"Kingsley Okonkwo","createProfilePage":true,"profileUrl":"kingsley-okonkwo"}],"content":{"childMarkdownRemark":{"html":"<p>As the web3 paradigm shift continues to reshape the internet, developers must consistently seek new ways to increase user engagement, democratize decision-making, and gain valuable insights from the people who use the apps they build on-chain. One method to collect user feedback is to integrate a  feedback or survey form into dapps. Feedback forms bridge the communication gap between users and developers and provide real-time feedback at scale to improve applications. They also foster an environment of active participation and collective decision-making.</p>\n<p>From Decentralized Autonomous Organizations (DAOs) employing feedback forms for on-chain governance, to businesses leveraging them to gauge employee sentiment, the utility of feedback forms is infinite.</p>\n<p>This blog provides a step-by-step tutorial to integrate a feedback form into your application backend and start collecting user feedback. For this, we will use a feedback form we built in-house using the MetaMask SDK and other Consensys tools called, Form xChange.</p>\n<p><img src=\"//images.ctfassets.net/9sy2a0egs6zh/pFaNvxTSN7V4XX1EUsc6g/f0d4056dc33dcfd5f850c28bf3ce9e89/image3.png\" alt=\"image3\">\n<em><a href=\"http://form-x-change.vercel.app\">Form xChange</a></em></p>\n<p>Whether you're looking to improve your dapp’s UX, collect post-conference feedback, or a DAO member aiming to democratize decision-making, this tutorial will show you how to integrate a feedback form and open a new channel of communication within your application.</p>\n<h3>What is Form xChange and how does it work?</h3>\n<br /> \n<p><a href=\"https://github.com/ConsenSys/Form-XChange\">Form xChange</a> is an open-sourced tool, developed for the creation and utilization of feedback forms on the blockchain. While the smart contract for Form xChange is currently deployed on <a href=\"http://linea.build/\">Linea</a>, its adaptable architecture allows for deployment on any EVM-compatible network.</p>\n<p>The platform enables participants to cast anonymous votes on the proposals incorporated within these forms and provides both participants and form creators access to view the results, reflecting the transparency ethos of web3.</p>\n<p>Form xChange utilizes a user-friendly interface built with Next.js and operates using two smart contracts, both written in Solidity: the <strong>FeedbackForm</strong> contract and the <strong>FeedbackFormFactory</strong> contract. The process is straightforward—every time a new form is created, a new FeedbackForm contract is deployed, a task handled efficiently by the FeedbackFormFactory contract.</p>\n<p><img src=\"//images.ctfassets.net/9sy2a0egs6zh/5sXAlyRmpNTTZvcVyx2kf6/f80225e34395661e84b225fa8d5c8fdd/image1.png\" alt=\"image1\"></p>\n<p>To utilize Form xChange, users must first connect and sign into the application using their MetaMask wallet. Some of the supported roles and responsibilities are:</p>\n<p><strong>Form Author</strong></p>\n<ul>\n<li>Ability to create new forms containing multiple questions for feedback collection.</li>\n<li>Ability to view an average score derived from user responses to each section post-feedback collection.</li>\n</ul>\n<p><strong>Participant</strong></p>\n<ul>\n<li>Ability to submit responses to forms or proposals while preserving anonymity.</li>\n<li>Access to view the results post-response submission.</li>\n</ul>\n<h3>Integrate a feedback form into your dapp for user feedback at scale</h3>\n<br /> \n<p>Users with less sophisticated use cases can simply rely on the already <a href=\"https://form-x-change.vercel.app/\">deployed instance</a> of Form xChange but if you have a unique use case and would like to host your own instance or control what the user interface looks like, then this part of the blog is for you.</p>\n<p>We’ll go through how to clone the repository to your local machine and get the backend running, we’ll deploy a new instance of the Form  xChange backend to Linea and finally, we’ll touch on the MetaMask SDK and how it makes it easy to connect users' MetaMask wallet clients from any platform.</p>\n<p>We’ll not be building out a user interface as it is beyond the scope of this tutorial but feel free to check out this <a href=\"https://github.com/ConsenSys/Form-XChange/tree/a63a3f482157d4d8325d1ca64852486a808086f1/apps/web\">repository</a> to get an idea of how you can approach building out your own user interface.</p>\n<h3>How to clone the Form xChange backend</h3>\n<br /> \n<p>This section assumes that you have node.js v16 or above installed on your computer, as well as the <a href=\"https://trufflesuite.com/docs/truffle/how-to/install/\">Truffle development environment</a>.</p>\n<ol>\n<li>\n<p>Clone the repository:\n<code>git clone git@github.com:ConsenSys/Form-XChange.git</code></p>\n</li>\n<li>\n<p>Navigate to the contract directory:\n<code>cd Form-XChange/packages/form-XChange</code></p>\n</li>\n<li>\n<p>Compile contract:\n<code>truffle compile</code></p>\n</li>\n<li>\n<p>Run test:\n<code>truffle test</code></p>\n</li>\n</ol>\n<h3>How to deploy your own instance of the Form xChange backend to Linea</h3>\n<br /> \n<p>What is Linea and why deploy on Linea? Well, <a href=\"https://docs.linea.build/overview\">Linea</a> is a type 2 zero-knowledge Ethereum Virtual Machine (zkEVM) that replicates the Ethereum environment as a rollup, allowing developers to build on it with the experience and security of Ethereum but with lower transaction costs.</p>\n<p>Linea offers advantages like faster finality, compatibility with all development tools, default integration with MetaMask, and high throughput among other things, which makes it an excellent choice for deploying Form xChange backend.</p>\n<p>Now that we understand what Linea is and why it is a great choice, let's delve into how one can deploy to Linea. To follow through with this section, ensure you have the <a href=\"https://metamask.io/download/\">MetaMask wallet extension</a> installed as well as some Linea Eth. See <a href=\"https://docs.linea.build/use-linea/fund#get-test-eth-on-goerli\">documentation</a> for more information on how to get some Linea Eth.</p>\n<ol>\n<li>\n<p>Run the Truffle dashboard: <code>truffle dashboard</code>.</p>\n</li>\n<li>\n<p>Head to <code>localhost:24012</code> in your browser and connect your MetaMask wallet, then select Linea from the networks dropdown.</p>\n</li>\n<li>\n<p>Run <code>truffle migrate --network dashboard</code> in a separate terminal.</p>\n</li>\n<li>\n<p>Head back to <code>localhost:24012</code> and click confirm on the prompt asking you to confirm the deployment.</p>\n</li>\n</ol>\n<p>That’s it, you should see the newly deployed contract address on the terminal window you ran the <code>truffle migrate --network dashboard command</code>. You can verify successful deployment by visiting the <a href=\"https://explorer.goerli.linea.build/\">Linea block explorer</a>.</p>\n<h3>Use MetaMask SDK to seamlessly connect your dapp to users’ wallets</h3>\n<br /> \n<p>With the Form XChange backend deployed to Linea, we want to make sure that users are not faced with any difficulties when they interact with our dapps. In other words, we want to make it seamless for users to connect their wallet client to our dapp without any hassle.</p>\n<p>MetaMask presents the most effective method to connect to any dapp deployed on Linea, as the MetaMask wallet extension now includes a Linea network option by default. Furthermore, to simplify the process for developers to add MetaMask support to their dapps, MetaMask recently released the MetaMask <a href=\"https://docs.metamask.io/wallet/how-to/use-sdk/\">SDK</a> that can be used with JavaScript, Mobile and Gaming platforms.</p>\n<p>To use the MetaMask SDK in your React frontend code base, here are some steps you can follow:</p>\n<ol>\n<li>Install the MetaMask SDK using Yarn or NPM:</li>\n</ol>\n<p><code>yarn add @metamask/sdk or npm install @metamask sdk</code></p>\n<ol start=\"2\">\n<li>Import the MetaMask SDK into your React project:</li>\n</ol>\n<p><code>import { MetaMaskSDK } from '@metamask/sdk';</code></p>\n<ol start=\"3\">\n<li>Instantiate the MetaMask SDK using these options</li>\n</ol>\n<pre><code> const sdk = new MetaMaskSDK(options);\n sdk.getProvider(); \n\n</code></pre>\n<ol start=\"4\">\n<li>Access the MetaMask SDK anywhere in your React codebase:</li>\n</ol>\n<p><code>window.ethereum.request({ method: 'eth_requestAccounts', params: [] });</code></p>\n<p>Calling <code>eth_requestAccounts</code> using <code>ethereum.request()</code> prompts the installation or connection popup to appear so it is advisable to always call this function first.</p>\n<p>Check out the <a href=\"https://docs.metamask.io/wallet/how-to/use-sdk/\">MetaMask SDK documentation</a> for more information on how you can use the MetaMask SDK with Node.js, IOS, Unity and more.</p>\n<p>Form xChange enhances your dapp by facilitating valuable feedback collection and promoting increased user input and participatory decision-making. And its ability to run on any EVM-compatible network and user-friendly interface makes it a breeze to integrate.</p>\n<p>This tutorial provides the steps  to integrate a feedback form into your  dapp. From preparing the backend and deploying it on Linea, to establishing a connection with MetaMask using the MetaMask SDK for a better user experience, you're well-prepared to foster an engaging and democratic environment within your dapp. Never forget, the potency of web3 lies within your grasp!</p>\n<p>To learn more about the MetaMask SDK, check out <a href=\"https://metamask.io/sdk/\">metamask.io/sdk/</a>.</p>"}},"categories":[{"contentful_id":"Jc9ZQ937JgPbuV2Xap2l7","node_locale":"tr","internal":{"type":"ContentfulNewsCategory"},"name":"Geliştiriciler","slug":"developers"}],"metaTitle":null,"metaDescription":null,"canonicalUrl":null,"isPrivate":false},{"contentful_id":"2S5RncdmuU6VhSKWpplgTE","node_locale":"tr","internal":{"type":"ContentfulNews"},"title":"Composooor Snap: A composability enabler for hybrid onchain and offchain apps","slug":"composooor-snap-a-composability-enabler-for-hybrid-onchain-and-offchain-apps","subtitle":"An ETHDenver Hackathon winner ","image":{"title":"Snaps Spotlights Feature Images","description":"","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/52NqgRR2XGx8WC2FDU5cNx/09e8b7e66384cd6b7092c3c249d57c7d/Snaps_Spotlights_Feature_Images.png"},"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/52NqgRR2XGx8WC2FDU5cNx/09e8b7e66384cd6b7092c3c249d57c7d/Snaps_Spotlights_Feature_Images.png?w=270&h=180&q=80&fm=webp 270w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/52NqgRR2XGx8WC2FDU5cNx/09e8b7e66384cd6b7092c3c249d57c7d/Snaps_Spotlights_Feature_Images.png?w=540&h=360&q=80&fm=webp 540w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/52NqgRR2XGx8WC2FDU5cNx/09e8b7e66384cd6b7092c3c249d57c7d/Snaps_Spotlights_Feature_Images.png?w=1080&h=720&q=80&fm=webp 1080w","sizes":"(min-width: 1080px) 1080px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/9sy2a0egs6zh/52NqgRR2XGx8WC2FDU5cNx/09e8b7e66384cd6b7092c3c249d57c7d/Snaps_Spotlights_Feature_Images.png?w=1080&h=720&q=80&fm=png","srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/52NqgRR2XGx8WC2FDU5cNx/09e8b7e66384cd6b7092c3c249d57c7d/Snaps_Spotlights_Feature_Images.png?w=270&h=180&q=80&fm=png 270w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/52NqgRR2XGx8WC2FDU5cNx/09e8b7e66384cd6b7092c3c249d57c7d/Snaps_Spotlights_Feature_Images.png?w=540&h=360&q=80&fm=png 540w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/52NqgRR2XGx8WC2FDU5cNx/09e8b7e66384cd6b7092c3c249d57c7d/Snaps_Spotlights_Feature_Images.png?w=1080&h=720&q=80&fm=png 1080w","sizes":"(min-width: 1080px) 1080px, 100vw"}},"layout":"constrained","width":1920,"height":1280}},"publishDate":"June 26, 2023","authors":[{"name":"MetaMask","createProfilePage":null,"profileUrl":null}],"content":{"childMarkdownRemark":{"html":"<p><a href=\"https://metamask.io/snaps/\">MetaMask Snaps</a> is the roadmap to making MetaMask the most extensible wallet in the world. As a developer, you can bring your features and APIs to MetaMask in totally new ways. Web3 developers are the core of this growth and this series aims to showcase the novel MetaMask Snaps being built today.</p>\n<h3>Composooor Snap</h3>\n<br /> \n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/SFA_YiK-z0s\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\n<p><strong>Snap Repo</strong>: <a href=\"https://github.com/kairos-loan/composooor/tree/main/packages/snap\">https://github.com/kairos-loan/composooor/tree/main/packages/snap</a></p>\n<p><strong>Why did you build it?</strong></p>\n<p>During our experience of developing smart-contract based financial protocols and other blockchain apps we noticed a recurrent pattern. More and more apps are using offchain resources (such as computation or data storage) verified in the contract logic due to blockchains technical limitations. Examples include order books, merkle trees of airdrops, sorted lists, token attributes etc.</p>\n<p>In each case valuable information is stored/computed off chain but can be used and has big effects on onchain interactions. To make this possible, contracts use different cryptographic techniques such as hashes or signatures to check validity. Dapps then require frontends/apis with specific logic that can come up with the relevant information for the contract. Sadly this pattern breaks composability, e.g a DeFi app relying on a proprietary order book served on AWS can’t be easily integrated by another smart contract.</p>\n<p>Fed up by those limitations we decided to come up with a standard and infrastructure to enable all apps to be easily integrated into anything. We strongly believe that making integrations easier again are opening many opportunities to the space.</p>\n<p><strong>Can you walk us through the technical implementation?</strong></p>\n<p><strong>Intro</strong></p>\n<p>The Composooor metamask snap is used to standardize and handle communication between a web client, one or multiple offchain arbitrary ressources, and an arbitrary number of smart-contracts implementing the composooor standard. All standard ressources are easily accessible on <a href=\"https://www.npmjs.com/package/@composooor/composooor\">an npm package</a> that makes using composooor’s superpowers a one liner in most cases.</p>\n<p><strong>Step by step</strong></p>\n<ul>\n<li>When preparing a transaction, our metamask snap wallet will request an estimate gas call on the desired on chain contract.</li>\n<li>If the contract needs some data or computation made off chain to function, it will revert with a standardized error containing specs on how to find this missing data. The standardized error looks like this</li>\n</ul>\n<pre><code>error MissingOffchainDataError(\n    address registryAddress,\n    string url,\n    bytes abiArgs\n);\n</code></pre>\n<p>this error is exposed by the <code>ComposooorRegister</code> that contracts must extend to access offchain ressouces.</p>\n<ul>\n<li>The Metamask snap wallet can then decode this error and finds the missing data either by fetching it on a decentralized protocol, or on an API, or by executing some code it fetched from this sources to produce it. For the ETHDenver hackathon, we implemented the simplest option which is the API call.</li>\n</ul>\n<pre><code>const responseData = await fetch(error.url + `?args=${error.abiArgs}`);\n</code></pre>\n<ul>\n<li>The wallet will then estimate gas again, this time adding an instruction to store the fetched data in the standardized registry of the corresponding contract before calling the desired method.</li>\n</ul>\n<pre><code>const callToRegisterData: Call = {\n    callee: error.registryAddress,\n    functionSelector: utils.id('recordParameter(bytes)').slice(0, 10) as PrefixedBy0x,\n    data: defaultAbiCoder.encode(['bytes'], [data]) as PrefixedBy0x,\n};\n</code></pre>\n<ul>\n<li>During the transaction execution, the same or another contract may need another off chain ressource to function. If it’s the case, the wallet loops on the transaction preparation steps until no offchain ressource is needed anymore. This enables endless composability <em>between protocols</em> accessing rich offchain ressources.</li>\n<li>When the gas estimation is successful, the user is prompted with the signature of the prepared transaction, to execute successfully with all necessary ressources included.</li>\n</ul>\n<p><strong>What integrating a composooor-enabled app / making your own looks like.</strong></p>\n<p>At ETHDenver we showed how composooor reduces code complexity of the usual hybrid app pattern by at least 80-90%.</p>\n<p><strong>Smart contract side</strong></p>\n<p>Import with import \"<code>@composooor/ComposooorRegister.sol</code>\";.\nExample usage :</p>\n<pre><code>contract Example is ComposooorRegister {\n    function action() public {\n        bytes memory data = consumeParameter(\"http://api.api/number\", abi.encode(arguments));\n        (uint256 offchainNumber) = abi.decode(data, (uint256));\n        (...)\n    }\n}\n</code></pre>\n<p><code>ComposooorRegister</code> is made with solidity.</p>\n<p><strong>Front end side</strong></p>\n<p>The composooor snap yields the most returns on the front-end side: it reduces typically 200+ lines integrations to… 0 ! The snap logic handles everything.</p>\n<p><strong>Demo</strong></p>\n<p>We made a fully integrated demo in the form of a react-wagmi dapp. This dapp makes it possible to buy an NFT paying only a small fraction of the price upfront and taking a loan to repay later to finance the rest. Onchain, it is no less than 8 contracts which are involved in the transaction. In the middle of it, the NFT marketplace requires an offchain signature of the NFT seller. The composooor snap is able to pick up the error, decode it and provide the information onchain (after being fetched in an api) despite the complexity of the transaction. Composooor made this app way simpler to implement.</p>\n<p><img src=\"//images.ctfassets.net/9sy2a0egs6zh/5hvC8qYY3yAs7nSHVrACLr/77c690ce30608a5b893cf05e954c9dfc/Screenshot_2023-06-26_at_9.49.45_PM.png\" alt=\"Screenshot 2023-06-26 at 9.49.45 PM\"></p>\n<p><strong>What are the next steps if you would implement this?</strong></p>\n<p>Part of such an innovation making developers gain considerable time and enabling new blockchain usecases is adoption. We would implement and deploy multiple user-facing apps using Composooor snap behind the scenes and working with the corresponding snap. If those apps gain traction, we would make some partnerships to compose them with other apps starting a flywheel of adoption fueled by the simplified dev experience. Along the way the snap and the standard would evolve into a more general and standardized product fitting the original vision: connecting blockchains synchronously to arbitrary resources, in an agnostic way regarding decentralization and usecases.</p>\n<p><strong>Can you tell us a little bit about yourself and your team?</strong></p>\n<p>We’re a team building a lending protocol to use NFTs as collateral with a more capital efficient approach.  We decided to go with an architecture using off-chain components like an order book. This choice allows to improve capital efficiency and user experience but may limit interoperability with other protocols. This is why we developed the Composooor snap allowing easy integration with other protocols. We hope that this library will be used by other teams, opening new possibilities and making their work easier.</p>\n<p><strong>What opportunities do you see with MetaMask Snaps and the possibilities it unlocks for the Web3 space?</strong></p>\n<p>Wallets are one of the main unavoidable pillars/building blocks of web3 and  MetaMask is the defacto default wallet for most users. Enabling developers to leverage this for arbitrary new use cases seems crucial to me. The main point is that we can’t imagine or prepare for all innovations wallets will need to be a part of so giving some access to them is like the transition from bitcoin to ethereum: enable arbitrary use cases on top of your tech has unforeseen exponentially compounding upside. So its hard to answer this question but what I’m most excited about is apps making the wallet do more than just signing messages and optimizes the interactions is a context-rich way for the user.</p>\n<p><strong>Any advice you would like to share with developers keen to try MetaMask Snaps?</strong></p>\n<p>Make use of the template provided and be careful to correctly ask for every user approval needed and use as few as possible.</p>\n<h3>Building with MetaMask Snaps</h3>\n<br /> \n<p>To get started with MetaMask Snaps:</p>\n<ol>\n<li>Checkout the <a href=\"https://docs.metamask.io/guide/snaps.html?utm_source=metamask&#x26;utm_medium=post&#x26;utm_campaign=2022_Sep_hackathon-winners-feature-blog-post_content_technical\">developer docs</a></li>\n<li>Install <a href=\"https://docs.metamask.io/snaps/get-started/install-flask/\">MetaMask Flask</a></li>\n<li>Check out a <a href=\"https://github.com/MetaMask/snaps-skunkworks/discussions/675\">MetaMask Snaps guide</a></li>\n<li>Stay connected with us on <a href=\"https://twitter.com/metamaskdev\">Twitter</a>, <a href=\"https://github.com/MetaMask/snaps-skunkworks/discussions\">GitHub discussions</a>, and <a href=\"https://discord.com/invite/consensys\">Discord</a></li>\n</ol>\n<p>Keep an eye out for our team at the next hackathon in an area near you! Happy BUIDLing ⚒️</p>\n<p><em>Disclaimer: MetaMask Snaps are generally developed by third parties other the ConsenSys Software.  Use of third-party-developed MetaMask Snaps is done at your own discretion and risk and with agreement that you will solely be responsible for any loss or damage that results from such activities.  ConsenSys makes no express or implied warranty, whether oral or written, regarding any third-party-developed MetaMask Snaps and disclaims all liability for third-party developed Snaps.  Use of blockchain-related software carries risks, and you assume them in full when using MetaMask Snaps.</em></p>"}},"categories":[{"contentful_id":"Jc9ZQ937JgPbuV2Xap2l7","node_locale":"tr","internal":{"type":"ContentfulNewsCategory"},"name":"Geliştiriciler","slug":"developers"}],"metaTitle":null,"metaDescription":"Composooor Snap: Hybrid onchain and offchain apps | An ETHDenver Hackathon winner ","canonicalUrl":null,"isPrivate":false},{"contentful_id":"rjggGPCVYMzttH7lyhdiN","node_locale":"tr","internal":{"type":"ContentfulNews"},"title":"Trust Score Snap: Simplifying transactions using code colors ","slug":"trust-score-snap-simplifying-transactions-using-code-colors","subtitle":"An ETHLisbon Hackathon winner","image":{"title":"Snaps Spotlights Feature Images (1)","description":"","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/7LFpb5J4YBKbqUVKS1vj9D/31e95772da1260c303de2e1442ea67d9/Snaps_Spotlights_Feature_Images__1_.png"},"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/7LFpb5J4YBKbqUVKS1vj9D/31e95772da1260c303de2e1442ea67d9/Snaps_Spotlights_Feature_Images__1_.png?w=270&h=180&q=80&fm=webp 270w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/7LFpb5J4YBKbqUVKS1vj9D/31e95772da1260c303de2e1442ea67d9/Snaps_Spotlights_Feature_Images__1_.png?w=540&h=360&q=80&fm=webp 540w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/7LFpb5J4YBKbqUVKS1vj9D/31e95772da1260c303de2e1442ea67d9/Snaps_Spotlights_Feature_Images__1_.png?w=1080&h=720&q=80&fm=webp 1080w","sizes":"(min-width: 1080px) 1080px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/9sy2a0egs6zh/7LFpb5J4YBKbqUVKS1vj9D/31e95772da1260c303de2e1442ea67d9/Snaps_Spotlights_Feature_Images__1_.png?w=1080&h=720&q=80&fm=png","srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/7LFpb5J4YBKbqUVKS1vj9D/31e95772da1260c303de2e1442ea67d9/Snaps_Spotlights_Feature_Images__1_.png?w=270&h=180&q=80&fm=png 270w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/7LFpb5J4YBKbqUVKS1vj9D/31e95772da1260c303de2e1442ea67d9/Snaps_Spotlights_Feature_Images__1_.png?w=540&h=360&q=80&fm=png 540w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/7LFpb5J4YBKbqUVKS1vj9D/31e95772da1260c303de2e1442ea67d9/Snaps_Spotlights_Feature_Images__1_.png?w=1080&h=720&q=80&fm=png 1080w","sizes":"(min-width: 1080px) 1080px, 100vw"}},"layout":"constrained","width":1920,"height":1280}},"publishDate":"May 25, 2023","authors":[{"name":"MetaMask","createProfilePage":null,"profileUrl":null}],"content":{"childMarkdownRemark":{"html":"<p><a href=\"https://metamask.io/snaps/\">MetaMask Snaps</a> is the roadmap to making MetaMask the most extensible wallet in the world. As a developer, you can bring your features and APIs to MetaMask in totally new ways. Web3 developers are the core of this growth and this series aims to showcase the novel MetaMask Snaps being built today.</p>\n<h3>Trust Score Snap</h3>\n<br /> \n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/9H49s7sAhVw\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\n<p><strong>Snap Repo:</strong> <a href=\"https://github.com/Tbaut/template-snap-monorepo\">https://github.com/Tbaut/template-snap-monorepo</a></p>\n<p><strong>Why did you build it?</strong></p>\n<p>When it comes to transaction signing on Ethereum, the elephant in the room is that most users have very little clue about what they are signing. Decoding methods and arguments is a good first step, but if users interact with a malicious contract, the visible information can be misleading. To counterbalance this, I thought about showing quantitative data, in a very simple manner, using code colors 🟥 🟧 🟩. The idea is to show a trust score based on data that is easy to verify from multiple sources. I chose to start with 4 criterias:</p>\n<ul>\n<li>How many users have interacted with the smart-contract overall.</li>\n<li>How often the current account has interacted with this contract.</li>\n<li>How old this contract is.</li>\n<li>Has this contract code been verified.</li>\n</ul>\n<p><strong>Can you walk us through the technical implementation?</strong></p>\n<h4>The insights main function</h4>\n<br /> \n<p>The snap is very simple, and is easy to extend. Here is the full <a href=\"https://github.com/Tbaut/template-snap-monorepo\">code</a> that we will go through.</p>\n<p>When the insights tab is clicked on MetaMask, the <code>onTransaction</code> function is called. Inide it, we call each function diving us the criteria that we decided to take into account.</p>\n<pre><code>type ScoreResult = {\n  score: number;\n  description: string;\n};\n\nconst onTransaction: OnTransactionHandler = async ({\n  transaction,\n  chainId,\n}) => {\n  // call all the insights criteria\n  // they all return a ScoreResult\n}\n</code></pre>\n<p>Those functions generally call an api, and process the results. Let’s dig into one of these to understand.</p>\n<h4>Determine a trust score based on overall interactions</h4>\n<br /> \n<p>Let’s dig in the function giving a score based on the total amount of transaction that a contract received. We use the Etherscan api here, but any other api could work to verify the same data.</p>\n<pre><code>/**\n * Gets a trust score for a contract based on the overall tx count\n * 3 -> the contract had overall >=100 txs\n * 2 -> the contract had overall 50 &#x3C;= tx &#x3C; 99\n * 1 -> the contract had overall tx &#x3C; 50\n *\n *@param options0\n * @param options0.chainId - the chain id to call the api with\n * @param options0.contractAddress - the contract address to check\n * @returns the score and a description\n */\nexport async function getContractTransactionCountScore({\n  chainId,\n  contractAddress,\n}: IContractTransactionCountScore): Promise&#x3C;ScoreResult> {\n  // get the api url asking for the 100th transaction\n  // it will return undefined if there is none\n  const url100 = getEtherscanContractTxsUrl({\n    txNumber: 100,\n    chainId,\n    contractAddress,\n  });\n  const { result: result100 } = await fetchUrl&#x3C;EtherscanResponse>(url100);\n\n  // if there is a 100th tx it means the contract\n  // has received at least 100 txs. We have all we need\n  // we can return with the best score of 3\n  if (result100.length === 1) {\n    return {\n      score: 3,\n      description: 'more than 100 txs',\n    };\n  }\n\n  // this will be call if there are less than 100 txs\n  // we check if there is a 50th tx.\n  const url50 = getEtherscanContractTxsUrl({\n    txNumber: 50,\n    chainId,\n    contractAddress,\n  });\n  const { result: result50 } = await fetchUrl&#x3C;EtherscanResponse>(url50);\n\n  // if there is a 50th tx we can return with a score of 2\n  if (result50.length === 1) {\n    return {\n      score: 2,\n      description: 'more than 50 txs',\n    };\n  }\n\n  // otherwise, return with the lowest score\n  return {\n    score: 1,\n    description: 'fewer than 50 txs',\n  };\n}\n</code></pre>\n<h4>Not all scores are equal</h4>\n<br /> \n<p>Now that we have a <code>TrustResult</code> for each of our criteria, it is time to apply weights. Indeed, not all of our criterias trust score should have the same weight. For instance, the amount of past transactions with the contract has a cost. If a scammer was willing to game it, it would cost them some ETH for gas. As a result, this criteria is considered more costly to game, hence more important, I gave it a weight of 3.</p>\n<p>Similarly, the contract’s age cannot be circunvented by an attacker, they would have to deploy it, and then wait before launching their attack if they wanted to have a high trust score. I gave it a weight of 2.</p>\n<p>The other criterias are considered weaker and have a weight of 1.</p>\n<pre><code>// arbitrary weight for each score\nconst Weights = {\n  contractTransactionCountScore: 3,\n  contractAgeScore: 2,\n  contractVerificationScore: 1,\n  contractUserTransactionScore: 1,\n};\n\n// calculate the overall trust score after applying the weights\nconst calculateOverallScoreWithWeight = ({\n  contractTransactionCountScore,\n  contractUserTransactionScore,\n  contractAgeScore,\n  contractVerificationScore,\n}: CalculateOverallScoreWithWeightArgs) => {\n  const totalWeitght = Object.values(Weights).reduce(\n    (acc: number, curr: number) => acc + curr,\n    0,\n  );\n\n  const overallScoreWithWeight =\n    (contractUserTransactionScore.score * Weights.contractUserTransactionScore +\n      contractTransactionCountScore.score *\n        Weights.contractTransactionCountScore +\n      contractAgeScore.score * Weights.contractAgeScore +\n      contractVerificationScore.score * Weights.contractVerificationScore) /\n    totalWeitght;\n\n  return Math.floor(overallScoreWithWeight);\n};\n</code></pre>\n<h4>Present the final score</h4>\n<br /> \n<p>Finally, we now have the trust score of a smart contract, we need to show it in a simple manner. The MetaMask insights api only allows to show key value pairs. The keys are in bold, and the values have a reglar font weight. I figured that by using emojis, I could create an interface that is not intimidating to users, while still showing all the information gathered.</p>\n<p>The function transforming the trust score into emojis:</p>\n<pre><code>const getColor = (result: number) => {\n  switch (result) {\n    case 3:\n      return '🟩';\n    case 2:\n      return '🟧';\n    default:\n      return '🟥';\n  }\n};\n</code></pre>\n<p>And the return part of the <code>onTransaction</code> function, with some hacks to show key values, in a nice way:</p>\n<pre><code>return {\n    insights: {\n      '': `Trust score: ${getColor(overallScore)}`,\n      ' ': '-----------------------------',\n      'Contract popularity': `${getColor(\n        contractTransactionCountScore.score,\n      )} ${contractTransactionCountScore.description}`,\n      'Previous interactions': `${getColor(\n        contractUserTransactionScore.score,\n      )} ${contractUserTransactionScore.description}`,\n      'Contract age': `${getColor(contractAgeScore.score)} ${\n        contractAgeScore.description\n      }`,\n      'Contract verification': `${getColor(contractVerificationScore.score)} ${\n        contractVerificationScore.description\n      }`,\n    },\n  };\n\n</code></pre>\n<p>Finally, I created a very simple interface to call 2 types of contracts, one very well known and used Uniswap contract, and one very recently deployed storage contract, the one presented by default on Remix. I you were to use this snap and interract with the <a href=\"https://goerli.etherscan.io/address/0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45\">Uniswap router contract</a> you would see the following:</p>\n<p><img src=\"//images.ctfassets.net/9sy2a0egs6zh/aTUNnd3NE3KYsfkMIxEsE/6f79c40caed890a21e87de6a529f0e31/Screenshot_2023-05-25_at_6.24.47_PM.png\" alt=\"Screenshot 2023-05-25 at 6.24.47 PM\"></p>\n<p><strong>What are the next steps if you would implement this?</strong></p>\n<p>This is only scratching the surface of what information could give user confidence, or prevent them from being phished. The obvious first step would be to use more sources for our data. The contract verification already use Sourcify and Etherscan, but it would be better to use multiple sources for each criteria.</p>\n<p>Then, we should apply more advanced algorithm to prevent scammers from being able to game the scores easiely. For instance, we should count the amount of unique accounts who transacted with a contract. We could do some anaysis on the accounts that interacted with it in the past as well, to make sure they are not all originating from one source. The down-side is that all this analysis is harder to make using multiple sources of truth.</p>\n<p>There are some interesting research as well done on scam detection for smart contract that could be integrated. <a href=\"https://arxiv.org/pdf/2201.07220.pdf\">More info here</a>.</p>\n<p>All in all, the overwelming amount of positive reactions I received for this hack shows that users are demending for some more information, and I believe that the fact that it is easy to digest played a key role.</p>\n<p><strong>Can you tell us a little bit about yourself?</strong></p>\n<p>I am a software engineer at ChainSafe and I worked at Parity in the past. I love to build products with a focus on good UX. Web3 is a great playground for me because everything is so complex, trying to make it understandable to as many ppl as possible is a great challenge. I have been in the space for almost 5 years and although I have attended many hackathons, I am generally a volonteer, a mentor or a judge rather than a hacker. The main reason is that I am a perfectionist and generally don’t like quick and dirty solutions :).</p>\n<p><strong>When were you first introduced to MetaMask Snaps and what was your experience like?</strong></p>\n<p>Interestingly, my colleagues at ChainSafe have built one of the first ever snap, the one for Filecoin. I probably had a look at the code back then, but did not dig further.</p>\n<p>At the time of hacking, the insights api wasn’t actually available to developers. I was talking to the MetaMask team in Lisbon, I did not expect to be able to add a user interface to MetaMask. They told me that it was about to be released, and that I could build on it now. In fact this was only available with a custom build, and the documentation hadn’t been released yet.</p>\n<p><strong>What makes MetaMask Snaps different from other wallets?</strong></p>\n<p>Having the ability to add custom code in a tab, while making sure that this code is safe to execute opens the doors to a huge range of enhancements. I’m very much looking forward to what will come out of this.</p>\n<p><strong>Tell us about what building Snaps with MetaMask is like for you?</strong></p>\n<p>The template monorepo made it a breath to get started. The fact that all my code could be written in one repo, with one command to launch both the test dapp and the snap, both with auto-refresh was a great developer experience.</p>\n<p><strong>What does Snaps mean to you?</strong></p>\n<p>It’s the extension to an extension. No product can fit all users. Adding this composable layer is a great opportunity for anyone asking for some feature to build it themselves.</p>\n<p><strong>What opportunities do you see with MetaMask Snaps and the possibilities it unlocks for the Web3 space?</strong></p>\n<p>I’ll talk about the insights in particular that is unlocking infinite customability depending on the needs. I bet that many more safety related insights will be developped in the future.</p>\n<p><strong>Any advice you would like to share with developers keen to try MetaMask Snaps?</strong></p>\n<p>Clone the monorepo, and enjoy a very quick start.</p>\n<h3>Building with MetaMask Snaps</h3>\n<br /> \n<p>To get started with MetaMask Snaps:</p>\n<ol>\n<li>Checkout the <a href=\"https://docs.metamask.io/guide/snaps.html?utm_source=metamask&#x26;utm_medium=post&#x26;utm_campaign=2022_Sep_hackathon-winners-feature-blog-post_content_technical\">developer docs</a></li>\n<li>Install <a href=\"https://docs.metamask.io/snaps/get-started/install-flask/\">MetaMask Flask</a></li>\n<li>Check out a <a href=\"https://github.com/MetaMask/snaps-skunkworks/discussions/675\">MetaMask Snaps guide</a></li>\n<li>Stay connected with us on <a href=\"https://twitter.com/metamaskdev\">Twitter</a>, <a href=\"https://github.com/MetaMask/snaps-skunkworks/discussions\">GitHub discussions</a>, and <a href=\"https://discord.com/invite/consensys\">Discord</a></li>\n</ol>\n<p>Keep an eye out for our team at the next hackathon in an area near you! Happy BUIDLing ⚒️</p>\n<p><em>Disclaimer: MetaMask Snaps are generally developed by third parties other the ConsenSys Software.  Use of third-party-developed MetaMask Snaps is done at your own discretion and risk and with agreement that you will solely be responsible for any loss or damage that results from such activities.  ConsenSys makes no express or implied warranty, whether oral or written, regarding any third-party-developed MetaMask Snaps and disclaims all liability for third-party developed Snaps.  Use of blockchain-related software carries risks, and you assume them in full when using MetaMask Snaps.</em></p>"}},"categories":[{"contentful_id":"Jc9ZQ937JgPbuV2Xap2l7","node_locale":"tr","internal":{"type":"ContentfulNewsCategory"},"name":"Geliştiriciler","slug":"developers"}],"metaTitle":null,"metaDescription":"Trust Score Snap: Simplifying transactions using code colors | An ETHLisbon Hackathon winner","canonicalUrl":null,"isPrivate":false}]}},"pageContext":{"headerId":"6I0knvqLf0DS5PB72DqUlM","footerId":"75bFgEllkMxpVsY8wWlroX","seoId":"7k3sOZj8ICP53K0J7jXp7B","modules":["4ZjPczvQn6fYgigGRFSQPf","P9sMsqPrQxPv6xyeMWZvn"],"themeColor":null,"pathBuild":"/tr/news/developers/page/10/","isFaqLayout":false,"h2FontSize":"40px","localizedPages":["/","/news/","/download/","/swaps/","/news/latest/powerful-configurable-secure-metamask-is-how-you-show-up-in-web-3/","/news/latest/metamask-portfolio-track-and-manage-your-web-3-everything/","/news/latest/how-to-use-metamasks-buy-feature-to-fund-your-wallet/","/news/latest/how-to-use-metamasks-swap-feature-to-get-what-you-want/","/news/latest/how-to-stake-crypto-and-secure-the-network/","/news/latest/bridge-easily-move-tokens-across-chains/","/news/latest/how-to-sell-crypto-for-cash/","/news/latest/dashboard-track-everything-in-one-place/","/news/security/","/news/developers/","/news/institutions/"],"limit":4,"skip":36,"categoryId":"Jc9ZQ937JgPbuV2Xap2l7","category":"developers","totalItems":65,"currentPage":10,"totalPages":17,"sharedCopy":{"browserNotSupported":"desteklenmiyor. Lütfen MetaMask'i destekleyen bir tarayıcı indirin.","by":"yazar","copyLink":"Bağlantıyı kopyala","copied":"Kopyalandı"},"slug":"/news/developers/page/10/","translation":true,"locale":"tr","node_locale":"tr","newsCategories":[{"name":"security","categoryId":"73InEMthwQcFmYQ8Ta61gS","total":32},{"name":"","categoryId":"3tE0tpmPMGsXezpOhKyWGO","total":66},{"name":"developers","categoryId":"Jc9ZQ937JgPbuV2Xap2l7","total":65},{"name":"institutions","categoryId":"75mzA7RLLPzWfBjl54wLRJ","total":49}]}},"staticQueryHashes":["2087975078","2272059946","3000541721","3155062165"],"slicesMap":{}}