{"componentChunkName":"component---src-templates-news-layout-js","path":"/news/developers/5-security-audit-tips-from-msq-snap-and-consensys-diligence/","result":{"data":{"header":{"contentful_id":"6I0knvqLf0DS5PB72DqUlM","node_locale":"en-US","internal":{"type":"ContentfulLayoutHeader"},"logo":{"contentful_id":"6fkPzzTMo3IoMKGMshuSVD","node_locale":"en-US","internal":{"type":"ContentfulLogo"},"title":"MetaMask Logo","logo":{"title":"mm-logo","description":"","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/4zJfzJbG3kTDSk5Wo4RJI1/1b363263141cf629b28155e2625b56c9/mm-logo.svg"},"gatsbyImageData":null},"logoDarkMode":{"title":"mm-logo-white","description":"","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/2qy1wS5MmZOXkXn9yFlGJp/f3797a512c283e6f71450abd408b7452/mm-logo-white.svg"},"gatsbyImageData":null},"link":"/","newTab":false,"displayTitle":false,"widthLogo":null,"backgroundColor":null,"customClass":null},"logoMobile":null,"menuItems":[{"columns":1,"title":"Features","displayTitle":true,"modules":[{"node_locale":"en-US","contentful_id":"3Ngv0xEpQwwiVjfu3MVui9","fontSize":null,"ctaLink":"https://portfolio.metamask.io/","displayText":"MetaMask Portfolio","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":"Nav Bar Button","eventCategory":"MetaMask Portfolio ","socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"272HODLnCd83z9Is3VXfCV","fontSize":null,"ctaLink":"/swaps/","displayText":"Swaps","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"3GGJuQss10B4ejSi1vzHxk","fontSize":null,"ctaLink":"/buy-crypto/","displayText":"Buy Crypto","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"4OJuQIyiz6RKXiEZ2aMYX5","fontSize":null,"ctaLink":"/sell-crypto/","displayText":"Sell Crypto","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":"sell-crypto","customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"5n6LAatVBeM1vw6ok6bqcR","fontSize":null,"ctaLink":"/snaps/","displayText":"MetaMask Snaps","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}]},{"columns":1,"title":"Build","displayTitle":true,"modules":[{"node_locale":"en-US","contentful_id":"1JmDHLFU2Y45o1QXsQDjC1","fontSize":null,"ctaLink":"https://docs.metamask.io/","displayText":"Documentation","displayTextTreatment":null,"newTab":true,"buttonDisplay":null,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":false,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"5gPptdmrIjeGdYowLtrCHo","fontSize":null,"ctaLink":"/developer/","displayText":"Developers","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":false,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"60cjqarld8mVDWHs8qZ4q1","fontSize":null,"ctaLink":"/institutions/","displayText":"Institutions","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":false,"buttonCaretDown":false,"launchDarklyFlag":"institutions","customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"39eW2psItqGMrBVsMkLyDz","fontSize":null,"ctaLink":"/sdk/","displayText":"SDK","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}]},{"columns":1,"title":"Resources","displayTitle":true,"modules":[{"node_locale":"en-US","contentful_id":"6NMiwFe3tTn9NV1K9UGlcZ","fontSize":null,"ctaLink":"/news/","displayText":"Blog","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"3eavIRbBzcKt3XA1CZRrON","fontSize":null,"ctaLink":"https://support.metamask.io","displayText":"Support","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"qGq9T5d9vFmRNSvrQbNOk","fontSize":null,"ctaLink":"/faqs/","displayText":"FAQs","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"hFoMVr6dpc0M4Q8OzIvoa","fontSize":null,"ctaLink":"https://community.metamask.io/","displayText":"Community","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}]},{"node_locale":"en-US","contentful_id":"1wFIQKdGvyapyZJfmISWHc","fontSize":null,"ctaLink":"https://learn.metamask.io/overview","displayText":"Learn","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":"Nav Bar Button","eventCategory":"MetaMask Learn ","socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}],"downloadButton":{"node_locale":"en-US","contentful_id":"3v9J6feUIljXuMBM0EYQNh","fontSize":null,"ctaLink":"/download/","displayText":"Download","displayTextTreatment":"Get MetaMask","newTab":false,"buttonDisplay":true,"buttonGradient":false,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":"Nav Bar Button","eventCategory":"Download Intent","socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":"mm-download-cta-header","customClassName":"ld-download-link","internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":{"node_locale":"en-US","contentful_id":"4bGNlgZAx6ugxPYFht8Ble","fontSize":null,"ctaLink":"https://portfolio.metamask.io/","displayText":"View MetaMask Web","displayTextTreatment":"View Your Assets","newTab":true,"buttonDisplay":true,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":false,"buttonCaretDown":null,"launchDarklyFlag":"mm-portfolio-cta-header","customClassName":"ld-portfolio-link","internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null}},"popupAnnouncement":{"contentful_id":"5yOpjVXgyG3eGYvZQkmv4f","node_locale":"en-US","internal":{"type":"ContentfulPopupAnnouncement"},"title":null,"ctaText":"Discover MetaMask Portfolio today. Track and manage your web3 assets in one place!","ctaLink":"https://portfolio.metamask.io","backgroundColor":"#037DD5"},"popupAnnouncementTreatment":{"contentful_id":"5cklTGW1qCkOwqxdVYhhFc","node_locale":"en-US","internal":{"type":"ContentfulPopupAnnouncement"},"title":null,"ctaText":"Watch your crypto grow with Pooled Staking. Stake your crypto and earn rewards for securing the Ethereum network.","ctaLink":"https://portfolio.metamask.io/stake?tab=pooled","backgroundColor":"#037DD5"},"isSticky":true,"launchDarklyFlag":"use-treatment-for-non-uk-and-us-announcement"},"cta":{"node_locale":"en-US","contentful_id":"6iOGB8Fiab9ilS0jfZ8N5I","fontSize":null,"ctaLink":"/news/","displayText":"All posts","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},"news":{"contentful_id":"5W8EGK64kMNORrADf1FD6j","node_locale":"en-US","internal":{"type":"ContentfulNews"},"title":"5 Security Audit Tips from MSQ Snap and Consensys Diligence","slug":"5-security-audit-tips-from-msq-snap-and-consensys-diligence","subtitle":"This article results from a collaboration between Consensys Diligence and the MSQ project with support from DFinity Foundation and MetaMask Snaps DAO","image":{"title":"5 Security Audit Tips from MSQ Snap and Consensys Diligence","description":"","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/42fBnLQ56N6XUrYpBrVUHC/e7754545b4f72ae72b8df40f8c508199/5_Security_Audit_Tips.png"},"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/42fBnLQ56N6XUrYpBrVUHC/e7754545b4f72ae72b8df40f8c508199/5_Security_Audit_Tips.png?w=480&h=270&q=80&fm=webp 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/42fBnLQ56N6XUrYpBrVUHC/e7754545b4f72ae72b8df40f8c508199/5_Security_Audit_Tips.png?w=960&h=540&q=80&fm=webp 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/42fBnLQ56N6XUrYpBrVUHC/e7754545b4f72ae72b8df40f8c508199/5_Security_Audit_Tips.png?w=1920&h=1080&q=80&fm=webp 1920w","sizes":"(min-width: 1920px) 1920px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/9sy2a0egs6zh/42fBnLQ56N6XUrYpBrVUHC/e7754545b4f72ae72b8df40f8c508199/5_Security_Audit_Tips.png?w=1920&h=1080&q=80&fm=png","srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/42fBnLQ56N6XUrYpBrVUHC/e7754545b4f72ae72b8df40f8c508199/5_Security_Audit_Tips.png?w=480&h=270&q=80&fm=png 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/42fBnLQ56N6XUrYpBrVUHC/e7754545b4f72ae72b8df40f8c508199/5_Security_Audit_Tips.png?w=960&h=540&q=80&fm=png 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/42fBnLQ56N6XUrYpBrVUHC/e7754545b4f72ae72b8df40f8c508199/5_Security_Audit_Tips.png?w=1920&h=1080&q=80&fm=png 1920w","sizes":"(min-width: 1920px) 1920px, 100vw"}},"layout":"constrained","width":1920,"height":1080}},"publishDate":"June 6, 2024","authors":[{"name":"Consensys Diligence &  MSQ team","createProfilePage":false,"profileUrl":"consensys-diligence-and-msq-team"}],"content":{"childMarkdownRemark":{"html":"<p>Consensys Diligence is an auditing branch within Consensys Software Inc., renowned for its unparalleled expertise in conducting meticulous audits across a spectrum encompassing Solidity, Cairo, and an array of ZK libraries. The Diligence team is spearheading auditing and security standards for MetaMask Snaps and works closely with the MetaMask team to ensure the security of the wallet feature. Moreover, the Diligence team pioneers the development of security tooling and cutting-edge continuous fuzzing solutions validated within the most demanding production environments.</p>\n<p>The<a href=\"https://icp.msq.tech/\"> MSQ project</a> was recently launched on<a href=\"https://snaps.metamask.io/\"> the MetaMask Snaps Store</a>. MSQ is a Snap that allows users to interact with the Internet Computer network, manage IC-based tokens, safely authorize within IC-based dapps, and pay for digital goods and services. In essence, it's a crypto wallet integrated with MetaMask, designed specifically for the Internet Computer with distinct features for authorization and payments.</p>\n<p>Together, Diligence and MSQ teams identified five key areas to cover in this article—Documentation, Software Design, Code, Supply Chain, and Fixes—providing a list of practices employed by the MSQ team during development, along with commentary from the Diligence team elaborating on the security benefits of these practices, making it a helpful resource for anyone building a Snap for the MetaMask Wallet or any other security-critical system subject to possible security audit. Let’s begin!</p>\n<h2>1. Create multi-layered documentation</h2>\n<br />\nDocumentation transforms the concepts in your head into something visible to others. Layered documentation helps the reader understand these concepts the way you intend by gradually immersing them in the context. Obviously, the cleaner the documentation, the wider perspective it can give on your project, and the better others will understand you.\n<p>We define documentation layers in reverse order of how a reader would typically access them, with each layer offering a higher level of abstraction. This way, readers starting with the big picture will progressively dive into the details.</p>\n<h3>1.1 Code</h3>\n<p>The ultimate source of information about your software is the code itself, which serves as the foundational layer of your documentation. While it contains all necessary information, it is hard to process this information. The cleaner the code, the easier it is to parse the higher-level abstractions from it. But in real systems, these abstractions are hidden behind complex interactions of the system’s components, weeks of technical debt, and quick, dirty solutions.</p>\n<p>So, first of all, you want to protect people reading your code from being misled by some complicated parts of your system. The best way to do that is to reduce the cognitive load required to read your code. Some strategies include:</p>\n<ul>\n<li>Making your code navigable, allowing for easy traversal in IDEs.</li>\n<li>Using verbose naming to clarify the purpose and functionality of code elements.</li>\n<li>Employing strongly typed languages to define clear data formats.</li>\n</ul>\n<p>The MSQ Snap and the dapp frontends are developed in TypeScript, which has prevented numerous potential errors, contrasting with the pitfalls of plain JavaScript. Similarly, our backend leverages Rust, known for its robust type system. Also, MSQ Snap exports a bunch of methods that can be executed by a third-party app. However, we don’t use strings to identify these methods, instead we use constants. We have a constant object like this:</p>\n<pre><code class=\"language-JavaScript\">export const SNAP_METHODS = {\n  protected: {\n    identity: {\n      login: \"protected_identity_login\",\n      ...\n    },\n    icrc1: {      \n\t    ...\n    },\n    ...\n  },\n  public: {\n    identity: {\n      sign: \"public_identity_sign\",\t\t\t\n      ...\n    },\n    ...\n  },\n};\n</code></pre>\n<p>In code, this constant object can be used as a guide for accessing the right method, and readers can understand a lot about this method by its identifier in the object. For example, the method <code>SNAP_METHODS.protected.identity.login</code> can only be executed by MSQ's companion dapp and allows the user to log in. This approach enhances code clarity and simplifies refactoring, as changes to method names are centrally managed rather than updated across multiple occurrences.</p>\n<p>To match method names, we use a big switch expression with branches like this:</p>\n<pre><code class=\"language-JavaScript\">case SNAP_METHODS.protected.identity.login: {\n  result = protected_handleIdentityLogin(req.params.body);\n  break;\n  }\n</code></pre>\n<p>As you can see, it is very hard to misinterpret something while reading here —everything is named precisely, leaving no room for imagination.</p>\n<p><strong>Diligence comment</strong>\n<br />\nTime is a critical factor. While developers have weeks to understand a codebase, security engineers often have just days to identify risks.\nThis constraint highlights the importance of reducing cognitive load in code—a practice that benefits both developer efficiency and security.</p>\n<p>What we can learn from MSQ's codebase is, that, clear, navigable code with descriptive naming and strong typing (like TypeScript) reduces misunderstandings, a common source of vulnerabilities.</p>\n<p>But remember, TypeScript type annotations are only checked at compile-time!\nFor any data that is processed or parsed at runtime (RPC, JSON, ...) additional type enforcements, data format and bounds checks are required!\nFor this purpose, MSQ elegantly employs zod, a TypeScript-first schema validation with static type inference library and we would recommend teams to follow that approach.</p>\n<p>MSQ hit a sweet spot by making code intentions clear through the right amount of commentary.\nThis clarity helps security researchers quickly grasp the codebase's \"red line\" and core concepts.\nBy writing code that's easy to understand, developers significantly boost the effectiveness of rapid security reviews.</p>\n<h3>1.2 Code comments</h3>\n<p>We believe commenting isn't about covering 100% of your code. It's crucial to annotate parts that are complex or poorly written. Areas like regular expressions, cryptography, and string manipulations particularly benefit from clear comments.</p>\n<p>For example, at MSQ, we have a<a href=\"https://github.com/fort-major/msq/blob/master/packages/snap/src/utils.ts#L167\"> function</a> that escapes possible<a href=\"https://en.wikipedia.org/wiki/Markdown\"> Markdown</a> control characters in a string. Its body is a single line of code, but there is regular expression matching, so we describe its functionality in a comment:</p>\n<pre><code>/**\n * Escapes Markdown control characters, newline characters, and backticks in a string.\n * This function takes a string and returns a new string with all Markdown control characters, newline characters, and backticks escaped.\n * Escaping is done by prefixing each control character and backtick with a backslash (`\\\\`), and newline characters are replaced with `\\\\\\\\n`.\n *\n * Control characters include: `{`, `}`, `[`, `]`, `(`, `)`, `#`, `!`, `|`, `\\\\`, and `` ` ``.\n * Newline characters are replaced with a visible escape sequence (`\\\\\\\\n`) for demonstration or specific formatting needs.\n * Since all newlines are escaped, list creating characters `-`, `+` and `.` are allowed.\n * Text styling characters `*`, `_` are also allowed\n *\n * @param {string} text The string to be escaped.\n * @return {string} The escaped string, safe to be used in Markdown without triggering formatting, with newline characters visually represented and backticks escaped.\n */\nexport function escapeMarkdown(text: string) {\n  return text.replace(/([{}\\\\[\\\\]()#!|\\\\\\\\`])|\\\\n/g, (match) => (match === \"\\\\n\" ? \"\\\\\\\\n\" : \"\\\\\\\\\" + match));\n}\n</code></pre>\n<p>If you don’t mind AI in your workflow,<a href=\"https://chat.openai.com/\"> ChatGPT</a> is great at generating good comments for such utility functions quickly (just double-check the output it provides).</p>\n<p><strong>Diligence comment</strong>\n<br />\nAs security reviewers we use function commentary as roadmaps through unfamiliar code.\nRemember, we only have so much time to review code, and when comments don't match the implementation, it's not just confusing — it's a red flag.</p>\n<p>They often reveal that either the function or its description deviates from the spec, signaling potential vulnerabilities.\nMaybe a function skips promised checks or handles data unexpectedly, which can lead to severe consequences.</p>\n<p>Therefore, keep your comments concise and accurate, similar to how MSQ does it in their codebase.\nInline comments are not just notes; they're beacons guiding us through your code, and misalignments are clues that something might be amiss.</p>\n<h3>1.3 System-level documentation</h3>\n<p>After ensuring your code and its complexities are well-documented, the next step is to outline the system’s architecture. This involves detailing the interactions between components, and the protocols, algorithms, and data structures your software employs. This layer primarily uses human-readable formats, such as text and diagrams, rather than code.</p>\n<p>MSQ's system documentation includes an<a href=\"https://github.com/fort-major/msq/blob/master/documentation/architecture.md\"> architecture overview</a> and an<a href=\"https://github.com/fort-major/msq/blob/master/documentation/integration.md\"> integration guide</a>. These documents, rich with textual descriptions, examples, and diagrams, clarify how different system parts interact.</p>\n<p>Sequence diagrams are invaluable for visualizing component interactions. We recommend using<a href=\"http://diagrams.net/\"> diagrams.net</a> (<a href=\"http://draw.io/\">draw.io</a>), a free tool that has proven versatile across various projects.</p>\n<p><strong>Diligence comment</strong>\n<br />\nUnlike inline comments that detail functions, system docs provide a 10,000-foot view, revealing an application's entire landscape.\nThis perspective is crucial for spotting cross-component issues or user-flow vulnerabilities that are often invisible at the code level.</p>\n<p>Think of a security review like a game of Command &#x26; Conquer.\nYou start with a mostly obscured map. As you explore, system docs act like scout units, uncovering the full architecture — permissions, Snap-dApp interactions, user interactions.\nThis unfolding overview lets reviewers trace user journeys, like tracking game unit movements, to spot paths that might bypass security.</p>\n<p>Moreover, comprehensive system docs should contain security-relevant remarks and, ideally, output from a threat modeling exercise.\nProviding a clear overview of the main components, interactions, risks, actors, and typical user flows.\nThis helps reviewers focus on high-priority areas and spot deviations from the specification.</p>\n<p>For developers, good system documentation isn't just paperwork; it's a shared map that guides offensive and defensive strategies, transforming security reviews from blind probes into strategic operations.</p>\n<h3>1.4 Big picture documentation</h3>\n<p>This layer includes a wide variety of materials, such as articles, landing pages, blog posts, demo videos, and more.</p>\n<p>This information is mostly about business stuff, but it makes a great deal of answering the question “What?” while all the previous layers were answering the “How?” question with different levels of detail.</p>\n<p>A newcomer would most likely meet your project through such a material, so keeping this layer as simple and visual as possible is a good idea. Also, this kind of material is usually the only one that shows the software in action - how a user could reach from state A to state B using your software. By seeing it in action, people introduce themself to the main idea of your software, allowing them to make guesses on how this software works under the hood.</p>\n<p>For example,<a href=\"https://icp.msq.tech/\"> MSQ’s landing page hero screen</a> says with big letters: “USE THE INTERNET COMPUTER WITH METAMASK”. After reading through this simple sentence, the reader would probably guess: “Ah, so this is a wallet Snap that can store tokens from the Internet Computer blockchain. So it probably works the same way as other Snaps for other blockchains, just using technologies from the IC’s dev ecosystem,” - which is a 100% correct guess.</p>\n<p><strong>Diligence comment</strong>\n<br />\nOur experience with MSQ and numerous other blockchain projects has consistently shown that clear, high-level documentation is not just beneficial — it's critical for both user adoption and security.\nDuring our review of MSQ's Snap, we were positively surprised by their multi-layered documentation approach. A video walkthrough from their developer quickly got us up to speed.\nWe would quickly understand Snap's features even before looking at the code itself. This high-level overview showcased the user interface, complete with commentary on expected behaviors and typical user flows.\nSuch visual aids are invaluable, allowing security experts to grasp the intended \"happy paths\" encoded into the application much faster and look for vulnerabilities that are often hidden off these paths.\nThis, combined with a live walkthrough of the snap and code, is typically the ideal start for a security review.</p>\n<h2>2 Restrict design where possible</h2>\n<br />\nThis part is probably the most important for the security of your project. Your code can be 100% safe from bugs, and your infrastructure can be protected with millions of dollars worth of various measures. But all of those efforts would mean nothing if your design contains some fundamental flaw that can be exploited by malicious actors.\n<p>While specific examples vary by use case, we offer several universal tips.</p>\n<h3>2.1 Develop security guidelines and follow them</h3>\n<p>At the outset of MSQ, we established core security principles that align with our vision:</p>\n<ul>\n<li><strong>MSQ team knows nothing</strong>: We do not collect any user-sensitive information, including key materials, authorization session data, or account details.</li>\n<li><strong>Cryptographic material never leaves the Snap</strong>: Protected user MetaMask entropy is processed exclusively within the Snap, generated on demand, and discarded immediately after use.</li>\n<li><strong>MSQ is deterministic</strong>: Users can recover all funds, identities, and key pairs deterministically using their root seed phrase without needing additional knowledge.</li>\n<li><strong>MSQ is privacy-first</strong>: Our efforts prioritize user privacy above all else.</li>\n</ul>\n<p>These principles are tailored to MSQ's specific needs. However, the MetaMask team also provides a set of security guidelines for Snap developers, which MSQ adheres to, available<a href=\"https://www.notion.so/5-Security-Audit-Tips-from-MSQ-Snap-and-Consensys-Diligence-902c0b34a69848bf8c884e2c315f7d4a?pvs=21\"> here</a>.</p>\n<p>For example, there is a <strong>Minimum permissions</strong> principle, which basically means that the fewer permissions your Snap asks from a user, the better its security. MSQ only asks 4 permissions:</p>\n<ul>\n<li>endowment:rpc</li>\n<li>snap_dialog</li>\n<li>snap_manageState</li>\n<li>snap_getEntropy</li>\n</ul>\n<p>We don’t need <code>endowment: network access</code> because MSQ is only responsible for signing transactions, not for delivering them to the IC—the integrating dapp is responsible for the latter.</p>\n<p>You should do the same thing in your Snap - take the default guideline from MetaMask, extend it with your specific rules, and follow them.</p>\n<p><strong>Diligence comment</strong>\n<br />\nWe tell our clients, \"Security isn't a feature you add; it's a principle you design around.\"\nMSQ's establishment of core security principles at the project's outset is what we look for.\nToo often, projects treat security as an afterthought, bolting on measures after the core architecture is set.\nThis retrofit approach inevitably leaves fundamental flaws that code-level fixes can't truly resolve.</p>\n<p>At ConsenSys Diligence, we provide security expert services, tooling, and we advocate for end users' rights.\nThis includes ensuring users' key material stays safe within wallet trust boundaries, never unintentionally exposed outside this zone.\nWe also focus on preserving user privacy, ideally preventing even metadata or side-channel information leaks to third parties.\nAdditionally, we push for snaps to request only the minimum permissions needed for functionality - the principle of least privilege.</p>\n<p>MSQ's proactive stance aligns with these principles.\nBy prioritizing security from the start, they're building a stronger foundation — one that's inherently more resistant to vulnerabilities.</p>\n<h3>2.2 Protect the user at all costs</h3>\n<p>This is more like a meta-guideline - it is a principle that should be implemented in any software: from online games to banking systems.</p>\n<p>The most notable example of this in MSQ is our approach to identity management. As you might know, the majority of wallets out there supply the user with a set of identities (addresses, accounts, etc.). This set can be accessed by any dapp, with the user's consent. For example, to sign some transactions.</p>\n<p>This is very useful for integrations between dapps, because any dapp can invoke smart-contract methods of other dapps on behalf of the user and extend each other’s capabilities this way. For example, a crypto payment platform can call Uniswap’s smart-contracts to automatically swap buyer’s tokens so they match what the seller’s expecting to receive as a payment for a particular good or service.</p>\n<p>But this is harmful for security, since scam websites can trick people into signing malicious transactions and empty their wallets.</p>\n<p>In contrast to that, MSQ adopts <code>identity scoping technique</code> - each dapp (each distinct url origin) has its own separate set of user identities it can interact with, with no ability to interact with user's identities from other dapps. This not only solves the scam websites issue, but also greatly helps with the privacy, because dapps can no longer track the user and see what smart-contracts (which are called canisters in the IC) does they interact with. This method, inspired by<a href=\"https://identity.ic0.app/\"> Internet Identity</a> and the<a href=\"https://webauthn.io/\"> WebAuthn specification</a>, significantly mitigates security risks.</p>\n<p>For example, if a well-known dapp is compromised, traditional wallets would be vulnerable across all dapps. In contrast, MSQ’s identity scoping confines the threat to the compromised dapp, preventing broader damage.</p>\n<p>However, this method limits direct integration between dapps, as users have distinct identities on each. MSQ offers solutions for specific scenarios, like allowing identity sharing between dapps with dual consents, useful for situations like domain name changes.</p>\n<p>Additionally, MSQ ensures that the data a dapp can access is strictly tied to the relevant identity, further securing user information and maintaining privacy across different applications.</p>\n<p><strong>Diligence comment</strong>\n<br />\nThe trade-off of limited direct dApp integration is a thoughtful one.\nIn our risk assessments, we often discuss the \"security budget\"—acknowledging that perfect security can hamper functionality.\nMSQ has spent this budget wisely.\nBy constraining cross-dApp interactions, they've drastically reduced one of the most severe risks (widespread identity abuse) while preserving core wallet functions.</p>\n<h2>3 Write sound code</h2>\n<br />\nWe already talked about the code a little, when we discussed the documentation. Here we want to emphasize on a couple of other aspects of code, which are more related to technique other than to readability.\n<h3>3.1 Your code</h3>\n<p>\"Sound\" here means the code behaves predictably, covering all expected and unexpected inputs. For instance, how should your Snap react if given a <code>base64</code> string when it expects <code>hex</code>? Or if methods are called in an unintended sequence, or an undefined RPC method is invoked?</p>\n<p>Addressing these uncertainties requires:</p>\n<ol>\n<li><strong>Clear error handling:</strong> Ensure every branch and case in your code is checked and handled appropriately. In MSQ’s Snap, we use TypeScript's exhaustive checks in switch-case statements to catch any unexpected method calls, as shown below:</li>\n</ol>\n<pre><code class=\"language-JavaScript\">default: {\n  err(ErrorCode.INVALID_RPC_METHOD, request.method);\n}\n</code></pre>\n<p>This setup captures cases where an unknown RPC method identifier is used.</p>\n<ol start=\"2\">\n<li><strong>Input sanitation:</strong> Validating input data against expected types and formats can be complex but is essential for security. We utilize the<a href=\"https://github.com/colinhacks/zod\"> zod</a> library in TypeScript for this, extending TypeScript’s type system to runtime checks. Zod allows detailed schema definitions, ensuring only valid data is processed.</li>\n</ol>\n<p>For example, our method <code>SNAP_METHODS.protected.identity.login</code> uses a zod schema to validate input rigorously:</p>\n<pre><code class=\"language-JavaScript\">export const ZIdentityLoginRequest = z.object({\n  toOrigin: ZOrigin,\n  withIdentityId: ZIdentityId,\n  withLinkedOrigin: z.optional(ZOrigin),\n});\n\nexport const ZOrigin = z.string().url();\nexport const ZIdentityId = z.number().int().nonnegative();\n</code></pre>\n<p>Here, <code>ZOrigin</code> and <code>ZIdentityId</code> are not mere strings or numbers but specifically validated subtypes, ensuring inputs are not just correct in type but also contextually appropriate.</p>\n<p>By defining zod schemas as precisely as possible, you can preemptively solve many potential issues. Auditors recommended enforcing strict validation in MSQ, which, upon implementation, identified and rectified several security risks.</p>\n<p><strong>Diligence comment</strong>\n<br />\nThis is not the first time we hear from our clients that implementing stricter validation based on our recommendations for a particular attack scenario revealed several other security risks.\nThis mirrors our experience precisely and that's why we always advocate for strict input validation to reduce attack surface.\nIn many security reviews, we start by scrutinizing input validation. Tightening this often exposes lurking issues — a domino effect where fixing one vulnerability reveals another.\nIt's a clear signal that the project takes our feedback seriously, iteratively hardening their system.\nWith reduced attack surface it gets incrementally harder for attackers to successfully exploit weaknesses.</p>\n<h3>3.2 Third-party code</h3>\n<p>At MSQ, we consider it our duty to provide dapp developers with an intuitive library, facilitating correct and efficient interaction with our Snap. This enables not only MSQ but also third-party developers to maintain clean and sound codebases.</p>\n<p>Such a library is beneficial for several reasons:</p>\n<ul>\n<li><strong>Simplifies API complexity:</strong> We abstract the Snap's complexities into a user-friendly API. For instance, MSQ’s client library uses <code>CBOR</code> for data encoding, bypassing the constraints of JSON-RPC and sparing developers the hassle of manual data encoding and decoding.</li>\n<li><strong>Ensures secure and direct interactions:</strong> Certain Snap functionalities are exclusive to our companion dapp. To facilitate this, we manage the redirection and data transfer processes, ensuring a seamless flow via <code>postMessage</code>. This internal handling guarantees that third-party developers interact with our Snap through a clear, straightforward API.</li>\n<li><strong>Enhances semantic clarity:</strong> A clean API is more than just a tool; it’s a communication medium, making the code more readable and understandable, free from the clutter of intricate encoding/decoding processes and additional operational layers.</li>\n</ul>\n<p>By prioritizing these aspects, MSQ aims to create an ecosystem where both our Snap and the integrating dapps can operate efficiently and securely.</p>\n<p><strong>Diligence comment</strong>\n<br />\nMSQ’s approach to third-party code integration through their library demonstrates a commitment to simplifying development while maintaining security.\nWhile at its core, security must be strictly enforced in the Snap context, a dapp facing library can provide a convenient way for communicating with the Snap.\nHowever, it should always be noted that the dapp developer needs to ensure secure interaction with the Snap and safe encoding of data when used within the dapp's context.</p>\n<h2>4 Protect your supply chain</h2>\n<br />\n<p><a href=\"https://www.wired.com/story/xz-backdoor-everything-you-need-to-know\">Recent XZ backdoor</a> another time emphasized how important it is to work against malicious code getting inside some of your dependencies. At MSQ we use<a href=\"https://pnpm.io\"> pnpm</a> to manage dependencies, but there is actually no difference in what package manager you prefer. There are two things we do at MSQ to protect against such attack vectors:</p>\n<h3>4.1 Bind packages to specific versions</h3>\n<p>Using <code>pnpm install --save &#x26;lt;package-name></code> typically installs the latest version of a package, adhering to the<a href=\"https://github.com/semver/semver\"> semver spec</a>, which allows auto-updates to non-breaking newer versions. This is denoted by the caret (<code>^</code>) symbol in <code>package.json</code>, signifying a range of acceptable versions:</p>\n<pre><code class=\"language-JavaScript\">\"zod\": \"^3.22.4\" // Installs version 3.22.4 or newer up to 4.0.0\n</code></pre>\n<p>However, to prevent risks from malicious updates, it's safer to lock dependencies to specific versions:</p>\n<ol>\n<li>Eliminate the caret (<code>^</code>) from your <code>package.json</code> to fix each dependency version. Remove any existing lock files and <code>node_modules</code>, then execute <code>pnpm install</code> to align with the defined versions strictly.</li>\n<li>Use the <code>--save-exact</code> flag for future installations (<code>pnpm install --save-exact &#x26;lt;package-name></code>) to avoid automatic updates.</li>\n</ol>\n<p>Trust is a factor in this decision. For example, at MSQ we consider <code>@metamask</code> and <code>@dfinity</code> dependency namespaces safe and allow updates within their semver range. However, while doing so, be cautious of potential vulnerabilities from transitive dependencies.</p>\n<p><strong>Diligence comment</strong>\n<br />\nShifting projects to exact dependency versions has prevented countless issues:</p>\n<ul>\n<li>It's stopped silent updates from reintroducing patched vulnerabilities.</li>\n<li>It's prevented \"version skew\" where different modules see different library behaviors.</li>\n<li>It's been crucial in post-incident investigations, allowing us to replicate the exact environment.</li>\n</ul>\n<p>Every next update can be malicious, in any namespace, any package.\nBy reviewing used packages and only binding to known safe versions preventing accidental update the attack surface for supply chain attacks is further reduced.\nTrusting certain vendors is okay, as long as the new versions are manually verified not to contain malicious code before use.\nNote, that, especially well known packages used by many projects are prime targets for malicious actors and as the past as shown, any such core library might fall to sophisticated supply chain attacks (see <a href=\"https://www.wired.com/story/xz-backdoor-everything-you-need-to-know/\">XZ backdoor attack</a>)</p>\n<h3>4.2 Commit lock files to your repository</h3>\n<br />\nTo ensure consistency across your team and maintain reproducible builds, commit your lockfiles to the version control system. In MSQ, we leverage `pnpm workspaces` and `turborepo`, necessitating a single root lockfile, `pnpm-lock.yaml`. However, your setup might require maintaining multiple lockfiles; all should be version-controlled to guarantee environment consistency.\n<p><strong>Diligence comment</strong>\n<br />\nThis practice, while sometimes overlooked as a mere development convenience, is in fact a critical component of maintaining a secure and stable codebase.\nOur years of auditing smart contracts, blockchain components, and now MetaMask Snaps have repeatedly shown that reproducible builds are not just a nice-to-have but a fundamental security requirement.\nCommitting lockfiles is one puzzle piece to reduce attack surface for supply chain attacks. When <code>npm install</code> is not a lottery anymore, concrete versions and checksums leave an audit trail in the repository, builds are more deterministic, and \"Works on my Machine\" discussions are no more.</p>\n<h2>5 Fix fast and clean</h2>\n<br />\nWhile this isn’t directly about our Snap, understanding how to address audit findings efficiently is vital.\n<p>As soon as the auditors team reports a finding, you should start working on a fix. The fix size and complexity clearly depends on the finding, but there is an advice to make it smaller and cleaner - fix the cause, not the symptom, where possible.</p>\n<p>For instance, at MSQ, the auditors discovered that it is possible to inject Markdown control characters in our MetaMask consent messages. Instead of fixing each separate consent message, making multiple changes in different parts of the code, we simply redefined <code>text()</code> and <code>heading()</code> elements (from <code>@metamask/snaps-sdk</code>), so they first pass their content through the <code>escapeMarkdown()</code> function and only then render it. This allowed us to simply replace <code>import</code> expressions in all files with consent messages with our custom elements, instead of fixing each invocation of <code>text()</code> and <code>heading()</code> separately, which was a much cleaner fix.</p>\n<p>Effective resolution not only improves the specific issue but also preemptively secures against unseen vulnerabilities.</p>\n<p><strong>Diligence comment</strong>\n<br />\nToo often, we see projects take a whack-a-mole approach to security, patching each individual issue as it appears without considering the underlying vulnerability class.\nBy addressing the root cause of issues and not holding back from extinguishing vulnerability classes globally, shows that MSQ understands security not as a series of patches but as a holistic discipline.\nAs security experts, we can only recommend our clients to not rush fixes and take enough time for turning a security finding into an event that has a positive effect on the security of the project.</p>\n<h2>Conclusion</h2>\n<br />\nThat concludes our insights into successfully navigating a MetaMask Snaps security audit. Following these guidelines helped the MSQ team receive a positive report from the Diligence team. We hope sharing the MSQ experience will assist you in your security audit preparations, ensuring a thorough and effective process.\n<p>Consensys Diligence has helped a wide range of projects across the blockchain ecosystem ensure their protocols are ready for launch and built to protect users. We’re happy to check your Snap for these and more vulnerabilities in a custom audit. <a href=\"https://consensys.io/diligence/contact\">Hit us up and get a quote!</a></p>"}},"categories":[{"contentful_id":"Jc9ZQ937JgPbuV2Xap2l7","node_locale":"en-US","internal":{"type":"ContentfulNewsCategory"},"name":"Developers","slug":"developers"}],"metaTitle":"5 Security Audit Tips from MSQ Snap and Consensys Diligence","metaDescription":"This article results from a collaboration between Consensys Diligence and the MSQ project with support from DFinity Foundation and MetaMask Snaps DAO","canonicalUrl":null,"isPrivate":false},"news_bg":{"file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/3hGSTCAVrdhSMmLJHSHOWT/94799532e03716ceb32ad39268bef4b0/news-detail-bg.png"}},"news_dark_bg":{"file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/2StKLJf0XE38EyT9GlzQuO/ed29f2ebdc6b99f7ff32175a192133c3/news-detail-dark-bg.png"}},"hubspot":{"contentful_id":"5VZVKtbcRMzaaP77nsz3Fs","node_locale":"en-US","internal":{"type":"ContentfulHubSpotForm"},"title":"Receive our Newsletter","description":null,"portalId":"4795067","formId":"fbfea1e4-e214-4ab2-a98b-964f9a81695a","campaignId":null,"displayTitle":true,"width":null,"customClass":"newsletterOnNewsDetail","customId":null},"latest":{"internal":{"type":"ContentfulLayoutModuleContainer"},"contentful_id":"nO1tqQRjoUDUJfdg2B651","node_locale":"en-US","eyebrow":null,"headline":"Keep reading our latest stories","description":{"childMarkdownRemark":{"html":"<p>Developers, security news, and more</p>"}},"modules":[{"node_locale":"en-US","contentful_id":"6iOGB8Fiab9ilS0jfZ8N5I","fontSize":null,"ctaLink":"/news/","displayText":"All posts","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"contentful_id":"1B0wZMveBTSiMJZWu4uunI","node_locale":"en-US","internal":{"type":"ContentfulModuleContainer"},"title":"News > Latest Stories (3 items)","description":null,"numberOfItem":3,"columns":3,"columnType":null,"columnsOnTablet":null,"centerOnTablet":null,"columnsOnMobile":1,"centerOnMobile":null,"contentAlignment":"left","splitModules":false,"displayTitle":false,"isLiquiditySection":false,"isTrustBar":null,"gridModulesGap":"12px","loadMoreMode":null,"loadMoreCta":null,"carouselMode":null,"hasRegionSelector":null,"regionSelectorHeadline":null,"regionSelectorPopupTitle":null,"regionSelectorPopupText":null,"regionListKey":null,"extraData":null,"modules":[{"contentful_id":"3tE0tpmPMGsXezpOhKyWGO","node_locale":"en-US","internal":{"type":"ContentfulNewsCategory"},"name":"Latest","slug":"latest"}]}],"cta":null,"backgroundColor":"default","displayHeadline":true,"headlineAlignCenter":true,"contentAlignCenter":false,"headlineMarginTop0":null,"paddingTop":"40px","sectionPadding":null,"noPaddingTop":null,"noPaddingBottom":false,"modulesMargin":null,"isTab":false,"moduleId":null,"customClass":"storiesOnNewsDetail","sideImage":null,"backgroundSize":"cover","backgroundImage":null},"latestStories":{"nodes":[{"contentful_id":"oMStgqx4WOHyEJiS22XQg","node_locale":"en-US","internal":{"type":"ContentfulNews"},"title":"Making DeFi onboarding safer with MoonPay","slug":"making-defi-onboarding-safer-moonpay","subtitle":"Meet the builders who are transforming web3, in our More With MetaMask Partner Series.","image":{"title":"More secure with MetaMask and MoonPay ","description":"Making DeFi onboarding more secure with MetaMask and MoonPay.","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/606tfexj8p9AupRZpE4iZG/859890929bb862747edb867be90cbe6f/24-11-8_MwM_Blog-Moonpay.png"},"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/606tfexj8p9AupRZpE4iZG/859890929bb862747edb867be90cbe6f/24-11-8_MwM_Blog-Moonpay.png?w=480&h=270&q=80&fm=webp 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/606tfexj8p9AupRZpE4iZG/859890929bb862747edb867be90cbe6f/24-11-8_MwM_Blog-Moonpay.png?w=960&h=541&q=80&fm=webp 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/606tfexj8p9AupRZpE4iZG/859890929bb862747edb867be90cbe6f/24-11-8_MwM_Blog-Moonpay.png?w=1920&h=1081&q=80&fm=webp 1920w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/606tfexj8p9AupRZpE4iZG/859890929bb862747edb867be90cbe6f/24-11-8_MwM_Blog-Moonpay.png?w=3840&h=2162&q=80&fm=webp 3840w","sizes":"(min-width: 1920px) 1920px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/9sy2a0egs6zh/606tfexj8p9AupRZpE4iZG/859890929bb862747edb867be90cbe6f/24-11-8_MwM_Blog-Moonpay.png?w=1920&h=1081&q=80&fm=png","srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/606tfexj8p9AupRZpE4iZG/859890929bb862747edb867be90cbe6f/24-11-8_MwM_Blog-Moonpay.png?w=480&h=270&q=80&fm=png 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/606tfexj8p9AupRZpE4iZG/859890929bb862747edb867be90cbe6f/24-11-8_MwM_Blog-Moonpay.png?w=960&h=541&q=80&fm=png 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/606tfexj8p9AupRZpE4iZG/859890929bb862747edb867be90cbe6f/24-11-8_MwM_Blog-Moonpay.png?w=1920&h=1081&q=80&fm=png 1920w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/606tfexj8p9AupRZpE4iZG/859890929bb862747edb867be90cbe6f/24-11-8_MwM_Blog-Moonpay.png?w=3840&h=2162&q=80&fm=png 3840w","sizes":"(min-width: 1920px) 1920px, 100vw"}},"layout":"constrained","width":1920,"height":1081}},"publishDate":"November 8, 2024","authors":[{"name":"Geoffrey Lyons","createProfilePage":false,"profileUrl":"geoffrey-lyons"}],"content":{"childMarkdownRemark":{"html":"<p><em>MetaMask is the gateway to the decentralized web, enabling you to do more. Users can connect to any dapp, on any network, from any device. From DeFi to DeSci, gaming to NFTs, and beyond: MetaMask is deeply passionate about the web3 community. The More With MetaMask Partner Series shines a light on builders who are innovating across web3. Next up, MoonPay.</em></p>\n<p>MoonPay is a leading crypto company that lets users buy and sell digital assets directly with their MetaMask wallet. Since MoonPay’s partnership with MetaMask began in 2022, we’ve been dedicated to simplifying the management of cryptocurrencies, while keeping users secure. Let’s dive into the ways our collaboration achieves this.</p>\n<h2>Streamlining DeFi onboarding</h2>\n<p>As the demand for self-custodial wallets has risen, so too has the need for robust and intuitive tools that give users a frictionless “web2-like” experience. In the past, the two haven’t always mixed well. Newcomers to crypto, who typically have the highest appetite for intuitive UX, tend to find DeFi overly complex.</p>\n<p>Recognizing this tension, MoonPay saw an opportunity to bridge-the-gap by providing seamless cash-to-crypto onboarding to the world’s leading self-custodial wallet, MetaMask. Integrating with MoonPay allowed MetaMask’s millions of users to interface with DeFi through familiar payment options like credit cards, debit cards, Apple Pay, and Google Pay. It also allowed MetaMask users to benefit from MoonPay’s stringent security protocols.</p>\n<h2>Simplifying ramps to protect users</h2>\n<p>One of the key advantages of the integration is that users can purchase digital assets directly within MetaMask wallet — eliminating the need to navigate multiple platforms. This approach smoothes out the process, while keeping users’ information safe. By avoiding unnecessary third-party platforms, data exposure is minimized.</p>\n<p>In addition to decreasing exposure by helping users stay within the platform, MoonPay is committed to protection and security in various ways:</p>\n<ul>\n<li>Our ramps are built with advanced encryption technology like AES-256.</li>\n<li>We comply with PCI-DSS Level 1, ISO 27001, and ISO 27018 standards, ensuring we meet stringent data security criteria.</li>\n<li>Our systems have undergone independent audits for PCI-DSS Level 1, ISO 27001/27018, and SOC2 Type 2 certifications, giving users peace of mind that our safety standards don’t waver.</li>\n<li>Our rigorous Anti-Money Laundering and Know Your Customer policies helps prevent bad actors from entering our ecosystem.</li>\n</ul>\n<h2>Creating a more secure web3</h2>\n<p>As we continue to work alongside MetaMask, our shared focus on safe, user-friendly solutions remains a cornerstone of this partnership. Together, we’re not only simplifying crypto onboarding for newcomers – we’re setting the bar for what it means to prioritize security in web3.</p>\n<p><strong>Buying and selling crypto with your MetaMask wallet via MoonPay has never been easier. It’s easy, fast, and safe. <a href=\"https://live.moonpay.com/metamask\">Get started today.</a></strong></p>"}},"categories":[{"contentful_id":"3tE0tpmPMGsXezpOhKyWGO","node_locale":"en-US","internal":{"type":"ContentfulNewsCategory"},"name":"Latest","slug":"latest"}],"metaTitle":"Making DeFi onboarding safer with MoonPay","metaDescription":"Find out how MetaMask and MoonPay enable DeFi onboarding that is secure and seamless. ","canonicalUrl":null,"isPrivate":false},{"contentful_id":"6scjk5nRoHqjQBrHl4Pl1b","node_locale":"en-US","internal":{"type":"ContentfulNews"},"title":"Introducing MetaMask Signature Insights Snaps","slug":"metamask-snaps signature insights","subtitle":" A new way to stay protected with community-powered tools. ","image":{"title":"Introducing MetaMask Signature Insights Snaps","description":"Introducing MetaMask Signature Insights Snaps","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/61HkDyYkSFCiehTtMLdZcj/0f8bf61bf34ad322d0fd0f643397ce3e/More_With_MetaMask_Signature_Insights_Snaps.png"},"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/61HkDyYkSFCiehTtMLdZcj/0f8bf61bf34ad322d0fd0f643397ce3e/More_With_MetaMask_Signature_Insights_Snaps.png?w=480&h=270&q=80&fm=webp 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/61HkDyYkSFCiehTtMLdZcj/0f8bf61bf34ad322d0fd0f643397ce3e/More_With_MetaMask_Signature_Insights_Snaps.png?w=960&h=540&q=80&fm=webp 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/61HkDyYkSFCiehTtMLdZcj/0f8bf61bf34ad322d0fd0f643397ce3e/More_With_MetaMask_Signature_Insights_Snaps.png?w=1920&h=1080&q=80&fm=webp 1920w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/61HkDyYkSFCiehTtMLdZcj/0f8bf61bf34ad322d0fd0f643397ce3e/More_With_MetaMask_Signature_Insights_Snaps.png?w=3840&h=2160&q=80&fm=webp 3840w","sizes":"(min-width: 1920px) 1920px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/9sy2a0egs6zh/61HkDyYkSFCiehTtMLdZcj/0f8bf61bf34ad322d0fd0f643397ce3e/More_With_MetaMask_Signature_Insights_Snaps.png?w=1920&h=1080&q=80&fm=png","srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/61HkDyYkSFCiehTtMLdZcj/0f8bf61bf34ad322d0fd0f643397ce3e/More_With_MetaMask_Signature_Insights_Snaps.png?w=480&h=270&q=80&fm=png 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/61HkDyYkSFCiehTtMLdZcj/0f8bf61bf34ad322d0fd0f643397ce3e/More_With_MetaMask_Signature_Insights_Snaps.png?w=960&h=540&q=80&fm=png 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/61HkDyYkSFCiehTtMLdZcj/0f8bf61bf34ad322d0fd0f643397ce3e/More_With_MetaMask_Signature_Insights_Snaps.png?w=1920&h=1080&q=80&fm=png 1920w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/61HkDyYkSFCiehTtMLdZcj/0f8bf61bf34ad322d0fd0f643397ce3e/More_With_MetaMask_Signature_Insights_Snaps.png?w=3840&h=2160&q=80&fm=png 3840w","sizes":"(min-width: 1920px) 1920px, 100vw"}},"layout":"constrained","width":1920,"height":1080}},"publishDate":"November 8, 2024","authors":[{"name":"Christian Montoya","createProfilePage":true,"profileUrl":"christian-montoya"}],"content":{"childMarkdownRemark":{"html":"<p>Safety is paramount in today's digital world — especially in web3, where users frequently interact with decentralized applications and manage valuable assets. A common vulnerability in the ecosystem is malicious signature requests, which lead unsuspecting users to authorize transactions that compromise their assets. This can happen by tricking people into signing something that allows a nefarious actor to transfer a users’ assets.</p>\n<p>To address this critical safety issue, MetaMask has introduced Signature Insight Snaps, a new category of security tools built by third-party developers. These Snaps empower users with greater transparency and control over signature requests, helping to identify and avoid potential threats.</p>\n<p>Signature Insight Snaps integrate seamlessly with MetaMask. These tools work by analyzing the contents of requests, giving users insights into the signature’s purpose and potential risks. Leveraging knowledge from Signature Insight Snaps allows users to make more informed decisions, reducing the likelihood of falling victim to phishing attempts, unauthorized access, or other malicious activities. The added layer of security reinforces users' trust, and also fosters a safer environment for web3 interactions.</p>\n<h2>Discover our first Signature Insights Snaps</h2>\n<p>Kleros Scout is the first Snap to support Signature Insights. It decodes the content of signature requests, and identifies the addresses of any contracts you may be authorizing in the signature via Kleros’s decentralized token curated registries. It can then warn you if the contract you are interacting with is malicious.</p>\n<p><img src=\"//images.ctfassets.net/9sy2a0egs6zh/4m9NFwKPI72J5L1m9418nt/8399b863fb6d6c1d68760338b33db48e/image1.png\" alt=\"Kleros Scout insight in action.\"></p>\n<p><em>Above, the Kleros Scout insight is displayed in the new signature request design. The insight shows that the contract being authorized by this signature request is the official Seaport 1.6 contract for NFT trading deployed by OpenSea.</em></p>\n<p>ZyFi Paymaster Insights is our second Signature Insight Snap to launch. It improves the readability of signing transactions in the zkSync ecosystem, especially for paymaster-related transactions using txType 113. ZyFi Paymaster Insights adds helpful information about the “from” and “to” addresses for these paymaster-related transactions. Additionally, it provides extra information related to the paymaster, such as the address, type, gas fee token address, and gas fee token amount. This gives users more clarity on what they’re signing, helping them to avoid potentially malicious signatures.</p>\n<p><img src=\"//images.ctfassets.net/9sy2a0egs6zh/4rJ5Uj2w4IrZnBSnurXNze/79643d1a8f02649f72fa4bae72b08437/image2.png\" alt=\"ZyFi Paymaster Insights\"></p>\n<p><em>Above, the ZyFi Paymaster Insight shows the from address, to address, and the paymaster type of the signature request on zkSync.</em></p>\n<p>Install <a href=\"https://snaps.metamask.io/snap/npm/kleros/scout-snap/\">Kleros Scout Snap</a> and <a href=\"https://snaps.metamask.io/snap/npm/zyfi-paymaster-insight-snap/\">ZyFi Paymaster Insights</a> from the MetaMask Snaps Directory in MetaMask Extension 12.4.2 or later.</p>\n<h2>Build your own</h2>\n<p>Visit the <a href=\"https://docs.metamask.io/snaps/features/signature-insights/\">MetaMask Developer Documentation</a> to learn how you can build your own Signature Insight Snaps, and sign-up for our <a href=\"https://consensys.notion.site/MetaMask-Snaps-Builder-Engagement-Program-733ddd6d30df443fa6fa7920707801fa\">Builder Engagement Program</a> so we can support you on your developer journey.</p>\n<p>In the future, Signature Insights Snaps will be able to hook into alerts in signature requests. MetaMask will also offer more types of insights including information about origin URL of any request.</p>\n<p><strong>Head to the <a href=\"https://snaps.metamask.io/explore/\">MetaMask Snaps Directory</a> to discover security Snaps that will keep you safe in your web3 journey.</strong></p>"}},"categories":[{"contentful_id":"3tE0tpmPMGsXezpOhKyWGO","node_locale":"en-US","internal":{"type":"ContentfulNewsCategory"},"name":"Latest","slug":"latest"}],"metaTitle":"Introducing MetaMask Signature Insights Snaps","metaDescription":"Explore MetaMask Signature Insights Snaps, which help to safeguard web3 users from malicious signature requests. ","canonicalUrl":null,"isPrivate":false},{"contentful_id":"5xDhGZnNUVR3zCOfHFKdRw","node_locale":"en-US","internal":{"type":"ContentfulNews"},"title":"How to buy crypto","slug":"how-to-buy-crypto","subtitle":"Go from cash to crypto. All in one place.","image":{"title":"How to buy crypto","description":"Explore the ways MetaMask makes buying crypto speedy, simple, and secure.","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/r6xJ4nmPZXAiy0ToL2Hr7/c732959270c87c6c445e463c0e2a68b4/How_to_buy_crypto_with_MetaMask.png"},"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/r6xJ4nmPZXAiy0ToL2Hr7/c732959270c87c6c445e463c0e2a68b4/How_to_buy_crypto_with_MetaMask.png?w=480&h=270&q=80&fm=webp 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/r6xJ4nmPZXAiy0ToL2Hr7/c732959270c87c6c445e463c0e2a68b4/How_to_buy_crypto_with_MetaMask.png?w=960&h=540&q=80&fm=webp 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/r6xJ4nmPZXAiy0ToL2Hr7/c732959270c87c6c445e463c0e2a68b4/How_to_buy_crypto_with_MetaMask.png?w=1920&h=1080&q=80&fm=webp 1920w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/r6xJ4nmPZXAiy0ToL2Hr7/c732959270c87c6c445e463c0e2a68b4/How_to_buy_crypto_with_MetaMask.png?w=3840&h=2160&q=80&fm=webp 3840w","sizes":"(min-width: 1920px) 1920px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/9sy2a0egs6zh/r6xJ4nmPZXAiy0ToL2Hr7/c732959270c87c6c445e463c0e2a68b4/How_to_buy_crypto_with_MetaMask.png?w=1920&h=1080&q=80&fm=png","srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/r6xJ4nmPZXAiy0ToL2Hr7/c732959270c87c6c445e463c0e2a68b4/How_to_buy_crypto_with_MetaMask.png?w=480&h=270&q=80&fm=png 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/r6xJ4nmPZXAiy0ToL2Hr7/c732959270c87c6c445e463c0e2a68b4/How_to_buy_crypto_with_MetaMask.png?w=960&h=540&q=80&fm=png 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/r6xJ4nmPZXAiy0ToL2Hr7/c732959270c87c6c445e463c0e2a68b4/How_to_buy_crypto_with_MetaMask.png?w=1920&h=1080&q=80&fm=png 1920w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/r6xJ4nmPZXAiy0ToL2Hr7/c732959270c87c6c445e463c0e2a68b4/How_to_buy_crypto_with_MetaMask.png?w=3840&h=2160&q=80&fm=png 3840w","sizes":"(min-width: 1920px) 1920px, 100vw"}},"layout":"constrained","width":1920,"height":1080}},"publishDate":"November 4, 2024","authors":[{"name":"MetaMask","createProfilePage":null,"profileUrl":"metamask"}],"content":{"childMarkdownRemark":{"html":"<p>Wondering how to buy crypto, but not sure where to start? You’ve come to the right place. Buying crypto with MetaMask is swift, seamless, and safe. You can use methods like a credit card, debit card, bank account, Apple Pay, Google Pay, or PayPal. No need for centralized exchanges. We’ve cut out all of the unnecessary steps — saving you time, and money on excess fees too.</p>\n<p>Below, we'll give you an overview of how we make MetaMask wallet powerful, secure, and configurable when you buy cryptocurrencies. Then, you'll find videos and step-by-step guides showing you exactly how to buy crypto with MetaMask on your browser or mobile app.</p>\n<p>Let's get into it! 🦊</p>\n<h3>How MetaMask empowers you</h3>\n<ul>\n<li>Buy crypto straight into your MetaMask wallet.</li>\n<li>Choose the best quote from our industry-leading aggregator.</li>\n<li>Avoid centralized exchanges, extra steps, and additional costs.</li>\n<li>Use MetaMask wallet in 188 countries with over 80 currencies available.</li>\n<li>Select from hundreds of your favorite tokens across 15+ networks including: Ethereum, Linea, Optimism, BNB Chain, Polygon, zkSync, Base, Arbitrum, and Avalanche.</li>\n<li>Go from cash to crypto back to cash. All <a href=\"https://portfolio.metamask.io/\">in one place</a>.</li>\n</ul>\n<h3>How MetaMask keeps you secure</h3>\n<ul>\n<li>Get 24/7 help whenever you need it from our expert customer service team.</li>\n<li>We only work with trusted providers, ensuring that they comply with applicable regulations and are legitimate, responsible parties.</li>\n<li>Preserving your privacy is paramount: MetaMask does not store — nor do we have access to — any personal information you provide when buying or selling crypto, such as payment details, personal data, or email addresses.</li>\n<li>Unlike a centralized exchange, neither MetaMask nor our partners have access to the cryptocurrencies after you purchase or transfer them, meaning you can access your assets immediately without a holding period.</li>\n</ul>\n<h3>How MetaMask gives you choice</h3>\n<ul>\n<li>Choose your preferred way to buy crypto including: debit card, credit card, bank transfer, instant ACH, PayPal, Apple Pay, Google Pay, Ideal, SEPA bank transfers, and alternative local payment methods. These are subject to availability based on your region.</li>\n<li>Select your preferred quote and provider.</li>\n<li>Buy crypto using MetaMask Extension on desktop or the MetaMask app on mobile.</li>\n</ul>\n<h3>Buy crypto with MetaMask Extension</h3>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/OtoymxLYQYU?si=dn_Ly9FIv0pXRbex\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n<p>Clicking the <strong>Buy &#x26; Sell</strong> button on the MetaMask extension will redirect you to <a href=\"https://portfolio.metamask.io/\">MetaMask Portfolio</a>. Once there, connect your MetaMask wallet.</p>\n<ol>\n<li>Click <strong>Move crypto.</strong></li>\n<li>Click <strong>Buy.</strong></li>\n<li>Select your region, and currency — located to the right of your wallet address.</li>\n<li>Select the crypto token, and network that you want to buy on. Example: ETH on Ethereum.</li>\n<li>Enter the amount you want to buy. Example: 0.5 ETH Example: $100 of ETH.</li>\n<li>Select the payment method you want to use to buy crypto. Example: debit card, credit card, bank account, or PayPal balance. Availability will depend on your region.</li>\n<li>Select the best real-time quote from our industry-leading providers.</li>\n<li>You'll be securely redirected to the provider's website to complete the purchase, and funds will be deposited into your MetaMask wallet.</li>\n</ol>\n<p>Success! 🦊</p>\n<h3>Buy crypto with MetaMask app</h3>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/vtjp3w8wSEg?si=bn1CSHjvj9nGkwag\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n<ol>\n<li>Sign-in to your MetaMask app.</li>\n<li>Tap the menu button, which has two arrows in opposite directions and is located on the bottom of your homepage screen.</li>\n<li>Tap <strong>Buy</strong>.</li>\n<li>Select your region and currency — located to the right of your wallet address.</li>\n<li>Select the crypto token, and network that you want to buy on. Example: ETH on Ethereum.</li>\n<li>Enter the amount you want to buy. Example: 0.5 ETH.</li>\n<li>Select the payment method you want to use to buy crypto. Example: debit card, credit card, bank account, or PayPal balance. Availability will depend on your region.</li>\n<li>Tap <strong>Get quotes</strong> to proceed. Select the best quote from our industry-leading providers.</li>\n<li>Complete the transaction on the provider’s portal, and link your desired payment method.</li>\n<li>Review the order summary in your MetaMask app, and confirm the transaction to get crypto in your wallet.</li>\n</ol>\n<p>Success! 🦊</p>\n<p><strong>Ready to get started? If you’re on desktop, download <a href=\"https://metamask.io/download/?utm_source=owned-metamask&#x26;utm_medium=content&#x26;utm_campaign=cmp-7695331-afbf08\">MetaMask Extension</a>. If you’re on mobile, <a href=\"https://metamask.io/download/?utm_source=owned-metamask&#x26;utm_medium=content&#x26;utm_campaign=cmp-7695331-afbf08\">download MetaMask app</a> for iOS or Android.</strong></p>\n<p><strong>Need more help? We got you. Head to <a href=\"https://support.metamask.io/metamask-portfolio/move-crypto/sell/how-to-sell-your-crypto-assets-for-fiat-currency-in-metamask/?utm_source=owned-metamask&#x26;utm_medium=content&#x26;utm_campaign=cmp-7654441-afbf08\">MetaMask Support</a> to speak with our team of experts around-the-clock.</strong></p>"}},"categories":[{"contentful_id":"3tE0tpmPMGsXezpOhKyWGO","node_locale":"en-US","internal":{"type":"ContentfulNewsCategory"},"name":"Latest","slug":"latest"}],"metaTitle":"How to buy crypto | MetaMask","metaDescription":"Explore the ways to buy crypto directly using your debit card, credit card, PayPal, and bank account with MetaMask wallet. ","canonicalUrl":null,"isPrivate":false}]},"footer":{"contentful_id":"75bFgEllkMxpVsY8wWlroX","node_locale":"en-US","internal":{"type":"ContentfulLayoutFooter"},"logo":{"contentful_id":"6fkPzzTMo3IoMKGMshuSVD","node_locale":"en-US","internal":{"type":"ContentfulLogo"},"title":"MetaMask Logo","logo":{"title":"mm-logo","description":"","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/4zJfzJbG3kTDSk5Wo4RJI1/1b363263141cf629b28155e2625b56c9/mm-logo.svg"},"gatsbyImageData":null},"logoDarkMode":{"title":"mm-logo-white","description":"","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/2qy1wS5MmZOXkXn9yFlGJp/f3797a512c283e6f71450abd408b7452/mm-logo-white.svg"},"gatsbyImageData":null},"link":"/","newTab":false,"displayTitle":false,"widthLogo":null,"backgroundColor":null,"customClass":null},"menuItems":[{"columns":1,"title":"Learn More","displayTitle":true,"modules":[{"node_locale":"en-US","contentful_id":"2OzvqisgIr6A5gzJuQm24G","fontSize":null,"ctaLink":"/about/","displayText":"About","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"5gPptdmrIjeGdYowLtrCHo","fontSize":null,"ctaLink":"/developer/","displayText":"Developers","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":false,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"NM6IbWouGG4tghpXmNAtJ","fontSize":null,"ctaLink":"/download/","displayText":"Download","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"6Ui9MOvxC2ExjCL1DeWH1q","fontSize":null,"ctaLink":"/institutions/","displayText":"MetaMask Institutional","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"5UxqbY7b31kskBIj5IibqC","fontSize":null,"ctaLink":"/news/","displayText":"News","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"6qlnG54k7tXJVMscTQhIun","fontSize":null,"ctaLink":"https://metamask.io/security/","displayText":"Security","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}]},{"columns":1,"title":"Get Involved","displayTitle":true,"modules":[{"node_locale":"en-US","contentful_id":"4mpEqrd6pewz2iX2Gfxt3z","fontSize":null,"ctaLink":"https://github.com/MetaMask/metamask-extension/","displayText":"GitHub","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"6kdhvf8S4erkJPUlGWY0Ae","fontSize":null,"ctaLink":"https://gitcoin.co/","displayText":"Gitcoin","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"5xd9mrSTpZ9Ky7XWhDDTth","fontSize":null,"ctaLink":"https://consensys.io/open-roles/?discipline=32543","displayText":"Open Positions","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"6SYAtiKQ188OxaIKhHd7qj","fontSize":null,"ctaLink":"https://shop.spreadshirt.com/metamask/","displayText":"Swag Shop","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"72IN7H47TcmIvmYyyTETIS","fontSize":null,"ctaLink":"https://consensys.io/contact","displayText":"Press & Partnerships","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}]},{"columns":1,"title":"Legal","displayTitle":true,"modules":[{"node_locale":"en-US","contentful_id":"4LiJW9vtg515J8Bhlzq8nC","fontSize":null,"ctaLink":"https://consensys.io/privacy-notice","displayText":"Privacy Policy","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"2GpObxkrC9uUyLXLonaa3F","fontSize":null,"ctaLink":"/terms-of-use/","displayText":"Terms of Use","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"5WpVb2xPvtf19P6NVNloit","fontSize":null,"ctaLink":"/cla/","displayText":"Contributor License Agreement","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"19JXW3A4VGjeuEC6u46uC4","fontSize":null,"ctaLink":"/sitemap/","displayText":"Site Map","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}]}],"copyright":"©2024 MetaMask • A Consensys Formation"}},"pageContext":{"news_content_id":"5W8EGK64kMNORrADf1FD6j","pathBuild":"/news/developers/5-security-audit-tips-from-msq-snap-and-consensys-diligence/","node_locale":"en-US","localizedPages":["/download/","/news/","/swaps/","/","/news/latest/how-to-sell-crypto-for-cash/","/news/latest/powerful-configurable-secure-metamask-is-how-you-show-up-in-web3/","/news/latest/metamask-portfolio-track-and-manage-your-web3-everything/","/news/latest/how-to-use-metamasks-buy-feature-to-fund-your-wallet/","/news/latest/how-to-use-metamasks-swap-feature-to-get-what-you-want/","/news/latest/how-to-stake-crypto-and-secure-the-network/","/news/latest/bridge-easily-move-tokens-across-chains/","/news/latest/dashboard-track-everything-in-one-place/","/news/security/","/news/institutions/","/news/developers/"],"translation":null,"sharedCopy":{"browserNotSupported":"is not supported. Please download a browser that supports MetaMask.","by":"by","copyLink":"Copy link","copied":"Copied"}}},"staticQueryHashes":["2087975078","2272059946","3000541721","3155062165"],"slicesMap":{}}