{"componentChunkName":"component---src-templates-news-layout-js","path":"/news/developers/understanding-how-to-write-upgradable-smart-contracts/","result":{"data":{"header":{"contentful_id":"6I0knvqLf0DS5PB72DqUlM","node_locale":"en-US","internal":{"type":"ContentfulLayoutHeader"},"logo":{"contentful_id":"6fkPzzTMo3IoMKGMshuSVD","node_locale":"en-US","internal":{"type":"ContentfulLogo"},"title":"MetaMask Logo","logo":{"title":"mm-logo","description":"","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/4zJfzJbG3kTDSk5Wo4RJI1/1b363263141cf629b28155e2625b56c9/mm-logo.svg"},"gatsbyImageData":null},"logoDarkMode":{"title":"mm-logo-white","description":"","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/2qy1wS5MmZOXkXn9yFlGJp/f3797a512c283e6f71450abd408b7452/mm-logo-white.svg"},"gatsbyImageData":null},"link":"/","newTab":false,"displayTitle":false,"widthLogo":null,"backgroundColor":null,"customClass":null},"logoMobile":null,"menuItems":[{"columns":1,"title":"Features","displayTitle":true,"modules":[{"node_locale":"en-US","contentful_id":"3Ngv0xEpQwwiVjfu3MVui9","fontSize":null,"ctaLink":"https://portfolio.metamask.io/","displayText":"MetaMask Portfolio","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":"Nav Bar Button","eventCategory":"MetaMask Portfolio ","socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"272HODLnCd83z9Is3VXfCV","fontSize":null,"ctaLink":"/swaps/","displayText":"Swaps","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"3GGJuQss10B4ejSi1vzHxk","fontSize":null,"ctaLink":"/buy-crypto/","displayText":"Buy Crypto","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"4OJuQIyiz6RKXiEZ2aMYX5","fontSize":null,"ctaLink":"/sell-crypto/","displayText":"Sell Crypto","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":"sell-crypto","customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"6j2UlI3YimoI5gCk4jI1Ob","fontSize":null,"ctaLink":"https://portfolio.metamask.io/stake?tab=liquid","displayText":"Stake and Earn","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":false,"buttonCaretDown":false,"launchDarklyFlag":"earn","customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"73Te5lYt1GgouJN1uatwfu","fontSize":null,"ctaLink":"https://portfolio.metamask.io/bridge","displayText":"Bridge Tokens","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":false,"buttonCaretDown":false,"launchDarklyFlag":"bridge","customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"1NfSHcPaEcXx4uyhEbGdIN","fontSize":null,"ctaLink":"https://portfolio.metamask.io/card","displayText":"MetaMask Card","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":"Nav Bar Button","eventCategory":"MetaMask Portfolio ","socialLink":null,"showCaretRight":false,"buttonCaretDown":false,"launchDarklyFlag":"metamask-card","customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"5n6LAatVBeM1vw6ok6bqcR","fontSize":null,"ctaLink":"/snaps/","displayText":"MetaMask Snaps","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}]},{"columns":1,"title":"Build","displayTitle":true,"modules":[{"node_locale":"en-US","contentful_id":"1JmDHLFU2Y45o1QXsQDjC1","fontSize":null,"ctaLink":"https://docs.metamask.io/","displayText":"Documentation","displayTextTreatment":null,"newTab":true,"buttonDisplay":null,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":false,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"5gPptdmrIjeGdYowLtrCHo","fontSize":null,"ctaLink":"/developer/","displayText":"Developers","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":false,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"60cjqarld8mVDWHs8qZ4q1","fontSize":null,"ctaLink":"/institutions/","displayText":"Institutions","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":false,"buttonCaretDown":false,"launchDarklyFlag":"institutions","customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"39eW2psItqGMrBVsMkLyDz","fontSize":null,"ctaLink":"/sdk/","displayText":"SDK","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}]},{"columns":1,"title":"Resources","displayTitle":true,"modules":[{"node_locale":"en-US","contentful_id":"6NMiwFe3tTn9NV1K9UGlcZ","fontSize":null,"ctaLink":"/news/","displayText":"Blog","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"3eavIRbBzcKt3XA1CZRrON","fontSize":null,"ctaLink":"https://support.metamask.io","displayText":"Support","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"qGq9T5d9vFmRNSvrQbNOk","fontSize":null,"ctaLink":"/faqs/","displayText":"FAQs","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"hFoMVr6dpc0M4Q8OzIvoa","fontSize":null,"ctaLink":"https://community.metamask.io/","displayText":"Community","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}]},{"node_locale":"en-US","contentful_id":"1wFIQKdGvyapyZJfmISWHc","fontSize":null,"ctaLink":"https://learn.metamask.io/overview","displayText":"Learn","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":"Nav Bar Button","eventCategory":"MetaMask Learn ","socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}],"downloadButton":{"node_locale":"en-US","contentful_id":"3v9J6feUIljXuMBM0EYQNh","fontSize":null,"ctaLink":"/download/","displayText":"Download","displayTextTreatment":"Get MetaMask","newTab":false,"buttonDisplay":true,"buttonGradient":false,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":"Nav Bar Button","eventCategory":"Download Intent","socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":"mm-download-cta-header","customClassName":"ld-download-link","internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":{"node_locale":"en-US","contentful_id":"4bGNlgZAx6ugxPYFht8Ble","fontSize":null,"ctaLink":"https://portfolio.metamask.io/","displayText":"View MetaMask Web","displayTextTreatment":"View Your Assets","newTab":true,"buttonDisplay":true,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":false,"buttonCaretDown":null,"launchDarklyFlag":"mm-portfolio-cta-header","customClassName":"ld-portfolio-link","internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null}},"popupAnnouncement":{"contentful_id":"5yOpjVXgyG3eGYvZQkmv4f","node_locale":"en-US","internal":{"type":"ContentfulPopupAnnouncement"},"title":null,"ctaText":"Discover MetaMask Portfolio today. Track and manage your web3 assets in one place!","ctaLink":"https://portfolio.metamask.io","backgroundColor":"#037DD5"},"popupAnnouncementTreatment":{"contentful_id":"5cklTGW1qCkOwqxdVYhhFc","node_locale":"en-US","internal":{"type":"ContentfulPopupAnnouncement"},"title":null,"ctaText":"Watch your crypto grow with Pooled Staking. Stake your crypto and earn rewards for securing the Ethereum network.","ctaLink":"https://portfolio.metamask.io/stake?tab=pooled","backgroundColor":"#037DD5"},"isSticky":true,"launchDarklyFlag":"use-treatment-for-non-uk-and-us-announcement"},"cta":{"node_locale":"en-US","contentful_id":"6iOGB8Fiab9ilS0jfZ8N5I","fontSize":null,"ctaLink":"/news/","displayText":"All posts","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},"news":{"contentful_id":"lJ0iEddksU9CMcCXfc4JH","node_locale":"en-US","internal":{"type":"ContentfulNews"},"title":"Understanding How to Write Upgradable Smart Contracts","slug":"understanding-how-to-write-upgradable-smart-contracts","subtitle":"Explore the importance of upgradable smart contracts in decentralized applications. Learn how they enable updates, bug fixes, and enhanced security through the proxy pattern.","image":{"title":"Upgradable Smart Contract Feature Image","description":"","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/5lqlSkQcM51jfazSO2x4Ji/860f2a6527f2fdd4d43cbd2c2d2a0bf6/Understanding_How_to_Write_Upgradable_Smart_Contracts.png"},"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/5lqlSkQcM51jfazSO2x4Ji/860f2a6527f2fdd4d43cbd2c2d2a0bf6/Understanding_How_to_Write_Upgradable_Smart_Contracts.png?w=480&h=270&q=80&fm=webp 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/5lqlSkQcM51jfazSO2x4Ji/860f2a6527f2fdd4d43cbd2c2d2a0bf6/Understanding_How_to_Write_Upgradable_Smart_Contracts.png?w=960&h=540&q=80&fm=webp 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/5lqlSkQcM51jfazSO2x4Ji/860f2a6527f2fdd4d43cbd2c2d2a0bf6/Understanding_How_to_Write_Upgradable_Smart_Contracts.png?w=1920&h=1080&q=80&fm=webp 1920w","sizes":"(min-width: 1920px) 1920px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/9sy2a0egs6zh/5lqlSkQcM51jfazSO2x4Ji/860f2a6527f2fdd4d43cbd2c2d2a0bf6/Understanding_How_to_Write_Upgradable_Smart_Contracts.png?w=1920&h=1080&q=80&fm=png","srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/5lqlSkQcM51jfazSO2x4Ji/860f2a6527f2fdd4d43cbd2c2d2a0bf6/Understanding_How_to_Write_Upgradable_Smart_Contracts.png?w=480&h=270&q=80&fm=png 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/5lqlSkQcM51jfazSO2x4Ji/860f2a6527f2fdd4d43cbd2c2d2a0bf6/Understanding_How_to_Write_Upgradable_Smart_Contracts.png?w=960&h=540&q=80&fm=png 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/5lqlSkQcM51jfazSO2x4Ji/860f2a6527f2fdd4d43cbd2c2d2a0bf6/Understanding_How_to_Write_Upgradable_Smart_Contracts.png?w=1920&h=1080&q=80&fm=png 1920w","sizes":"(min-width: 1920px) 1920px, 100vw"}},"layout":"constrained","width":1920,"height":1080}},"publishDate":"October 3, 2024","authors":[{"name":"MetaMask Developer","createProfilePage":null,"profileUrl":null},{"name":"Alejandro Mena","createProfilePage":false,"profileUrl":"alejandro-mena"}],"content":{"childMarkdownRemark":{"html":"<p>Smart contracts have changed the way we think about decentralized applications by introducing self-executing programs that eliminate the need for intermediaries. They execute transparently on decentralized blockchain networks, offering benefits like trustlessness and increased security. However, their immutability once considered a strength, poses a significant challenge: once a smart contract is deployed, it can't be altered. This rigidity makes implementing necessary updates or fixing bugs difficult.</p>\n<p>In this post, we'll explore the concept of upgradable smart contracts, explain why they are essential, and break down how they work, particularly focusing on their implementation on <strong>Linea zkEVM</strong>.</p>\n<h2><strong>What are upgradable smart contracts?</strong></h2>\n<p>Upgradable smart contracts solve the limitations of traditional smart contracts by allowing modifications and improvements after deployment. While traditional smart contracts are known for their immutability, upgradable contracts combine the security of immutability with the flexibility to adapt. This allows developers to implement updates without disrupting users or requiring them to migrate to a new contract.</p>\n<p>In traditional contracts, bugs or security flaws are permanent once deployed. Upgradable contracts address this by enabling updates after deployment, solving key issues such as:</p>\n<p><strong>1. Bug fixes and security vulnerabilities</strong>: Developers can patch vulnerabilities post-deployment, safeguarding user assets.</p>\n<p><strong>2. Adaptability</strong>: Upgradable contracts allow for seamless integration with new protocols, keeping applications up-to-date with technological advances.</p>\n<p><strong>3. Security enhancements</strong>: With evolving cyber threats, these contracts make it easy to implement new security measures without redeploying the entire contract.</p>\n<p><strong>4. Governance flexibility</strong>: Decentralized Autonomous Organizations (DAOs) can use community voting to manage the upgrade process, ensuring transparency and stakeholder participation.</p>\n<p><strong>5. Simplified updates</strong>: Unlike traditional contracts that require complex redeployment and data migration, upgradable contracts streamline updates for a more efficient and user-friendly experience.</p>\n<h2><strong>How do upgradable smart contracts work?</strong></h2>\n<p>To create an upgradable smart contract, the most common method is the proxy pattern. This approach separates the contract's logic from its data, allowing developers to update the logic while keeping the same data storage.</p>\n<p>Here’s how it works:</p>\n<ol>\n<li><strong>Proxy Contract</strong>: This contract holds the storage (state variables) and acts as the interface for users.</li>\n<li><strong>Implementation Contract</strong>: This contract contains the executable code (business logic).</li>\n<li><strong>Delegation</strong>: The proxy contract delegates function calls to the implementation contract using Ethereum’s delegatecall. This allows the proxy to execute the implementation’s code while retaining the same storage.</li>\n</ol>\n<p>When an upgrade is required, the proxy contract is directed to a new implementation contract, enabling logic updates without changing the contract's storage or disrupting users. Here's an example using a DAO proxy contract to illustrate this process:</p>\n<pre><code class=\"language-Solidity\">// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract DAOProxy {\n    // Storage slot for the address of the implementation contract\n    bytes32 private constant implementationSlot = keccak256(\"simple.dao.proxy.implementation\");\n    // Storage slot for the admin address\n    bytes32 private constant adminSlot = keccak256(\"simple.dao.proxy.admin\");\n\n    // Modifier to restrict access to admin\n    modifier onlyAdmin() {\n        require(msg.sender == _admin(), \"Caller is not admin\");\n        _;\n    }\n\n    // Constructor to set the initial implementation and admin\n    constructor(address _implementation) {\n        _setImplementation(_implementation);\n        _setAdmin(msg.sender);\n    }\n\n    // Fallback function to delegate calls to the implementation\n    fallback() external payable {\n        _delegate(implementation());\n    }\n\n    // Receive function to handle plain Ether transfers\n    receive() external payable {\n        _delegate(implementation());\n    }\n\n    // Internal function to delegate the call to the implementation\n    function _delegate(address _implementation) internal {\n        assembly {\n            // Copy msg.data\n            calldatacopy(0, 0, calldatasize())\n            // Call the implementation\n            let result := delegatecall(gas(), _implementation, 0, calldatasize(), 0, 0)\n            // Copy the returned data\n            returndatacopy(0, 0, returndatasize())\n            // Handle result\n            switch result\n            case 0 {\n                // Revert if the call failed\n                revert(0, returndatasize())\n            }\n            default {\n                // Return data if the call succeeded\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    // Getter for the implementation address\n    function implementation() internal view returns (address impl) {\n        bytes32 slot = implementationSlot;\n        assembly {\n            impl := sload(slot)\n        }\n    }\n\n    // Getter for the admin address\n    function _admin() internal view returns (address adm) {\n        bytes32 slot = adminSlot;\n        assembly {\n            adm := sload(slot)\n        }\n    }\n\n    // Function to upgrade the implementation contract\n    function upgradeTo(address newImplementation) external onlyAdmin {\n        _setImplementation(newImplementation);\n    }\n\n    // Internal function to set the implementation address\n    function _setImplementation(address newImplementation) internal {\n        bytes32 slot = implementationSlot;\n        assembly {\n            sstore(slot, newImplementation)\n        }\n    }\n\n    // Function to change admin\n    function changeAdmin(address newAdmin) external onlyAdmin {\n        _setAdmin(newAdmin);\n    }\n\n    // Internal function to set the admin address\n    function _setAdmin(address newAdmin) internal {\n        bytes32 slot = adminSlot;\n        assembly {\n            sstore(slot, newAdmin)\n        }\n    }\n}\n</code></pre>\n<pre><code class=\"language-Solidity\">    bytes32 private constant implementationSlot = keccak256(\"simple.dao.proxy.implementation\");\n    bytes32 private constant adminSlot = keccak256(\"simple.dao.proxy.admin\");\n</code></pre>\n<p>Two important things to note are the storage slot for the address of the implementation contract and the storage slot for the admin address. These are deliberate and unique identifiers used to compute a storage slot for the implementation address within the proxy contract.</p>\n<p>When using the proxy pattern with delegatecall (we’ll take a closer look at this function soon), the implementation contract operates in the context of the proxy's storage. This means:</p>\n<ul>\n<li>Shared storage space: Both contracts share the same storage layout.</li>\n<li>Risk of overwriting: Without careful management, variables in the proxy contract could be overwritten by the implementation contract.</li>\n</ul>\n<p>By using a hashed unique identifier:</p>\n<ul>\n<li>Isolation: It ensures that the storage slots used by the proxy are unlikely to conflict with any variables in the implementation contract.</li>\n<li>Consistency: The same storage slot is consistently used throughout the contract wherever the implementation address is needed.</li>\n</ul>\n<pre><code class=\"language-Solidity\">constructor(address _implementation) {\n        _setImplementation(_implementation);\n        _setAdmin(msg.sender);\n    }\n</code></pre>\n<p>Another important aspect is the constructor of the proxy contract. It includes an _implementation parameter, meaning the implementation contract must be deployed first, and its address is passed as an argument when deploying the proxy contract.</p>\n<pre><code class=\"language-Solidity\"> fallback() external payable {\n        _delegate(implementation());\n    }\n\n    receive() external payable {\n        _delegate(implementation());\n    }\n</code></pre>\n<p>Now we have the fallback and receive functions, these are Solidity functions and play crucial roles in forwarding calls and Ether transfers to the implementation contract. They handle situations where a contract receives calls or funds that do not match any of its explicitly defined functions. Here's an in-depth explanation of what these functions do:</p>\n<h3><strong>1. The fallback function</strong></h3>\n<ul>\n<li><strong>Fallback mechanism</strong>: The fallback function in Solidity is a special function that executes under two main conditions:\n<ul>\n<li>When a function that does not exist in the contract is called.</li>\n<li>When data is sent to the contract without matching any function signature.</li>\n</ul>\n</li>\n<li><strong>Delegation</strong>: In the context of the DAOProxy contract, the fallback function delegates all such calls to the current implementation contract.</li>\n</ul>\n<p><strong>How it works in DAOProxy:</strong></p>\n<ul>\n<li><strong>Function call handling:</strong>\n<ul>\n<li>When a user calls a function not defined in the proxy contract, the fallback function is triggered.</li>\n<li>This is common because the proxy contract mainly contains administrative functions like <code>upgradeTo</code> and <code>changeAdmin</code>, rather than the business logic functions of the implementation contract.</li>\n</ul>\n</li>\n<li><strong>Delegation to implementation:</strong>\n<ul>\n<li>The fallback function calls <code>_delegate(implementation())</code>, forwarding the call to the implementation contract.</li>\n<li>_delegate is an internal function that uses <code>delegatecall</code> to execute the implementation's code while operating in the proxy's storage context.</li>\n</ul>\n</li>\n<li><strong>Execution context:</strong>\n<ul>\n<li>All state changes happen in the proxy's storage.</li>\n<li><code>msg.sender</code> and <code>msg.value</code> remain unchanged, preserving the original caller's context.</li>\n</ul>\n</li>\n</ul>\n<h3><strong>2. The receive function</strong></h3>\n<ul>\n<li><strong>Ether reception:</strong> The receive function, introduced in Solidity 0.6.0, is executed when a contract receives Ether without any accompanying data (i.e., when msg.data is empty).</li>\n<li>**Delegation of Ether transfers:**In the DAOProxy contract, plain Ether transfers are delegated to the implementation contract.</li>\n</ul>\n<p><strong>How it works in DAOProxy:</strong></p>\n<ul>\n<li><strong>Ether transfer handling:</strong>\n<ul>\n<li>When someone sends Ether to the proxy contract’s address without data, the receive function is triggered.</li>\n<li>This happens through a transaction that specifies only the to address and value (Ether amount), without calling any specific function.</li>\n</ul>\n</li>\n<li><strong>Delegation to implementation:</strong>\n<ul>\n<li>Like the fallback function, receive calls _delegate(implementation()), forwarding the Ether transfer to the implementation contract.</li>\n<li>The implementation contract then defines how to handle the received Ether (e.g., updating balances, emitting events).</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-Solidity\"> function _delegate(address _implementation) internal {\n        assembly {\n            calldatacopy(0, 0, calldatasize())\n            let result := delegatecall(gas(), _implementation, 0, calldatasize(), 0, 0)\n            returndatacopy(0, 0, returndatasize())\n            switch result\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n</code></pre>\n<p>Now we have the <code>_delegate</code> function, which enables the proxy to forward function calls to the implementation contract while preserving the context of the original call. This allows the contract logic to be upgraded over time without changing the contract's address or disrupting its state.</p>\n<p>The other functions are getters and setters that help us manage the state variables of our proxy contract. To achieve this, we use the <code>assembly</code> keyword, which allows developers to include low-level assembly code directly within their contracts. This feature provides direct access to Ethereum Virtual Machine (EVM) instructions, enabling more precise control over contract behavior, optimization of gas consumption, and execution of operations that are either not directly available or are less efficient in Solidity's high-level code.</p>\n<p>Now, the big question is: how do we interact with our implementation smart contract using this proxy contract?</p>\n<p>To do this, we need the implementation’s smart contract ABI. Since the proxy delegates the calls to the implementation contract, you need its ABI to know which functions you can call. Additionally, we’ll use the address of the proxy contract when interacting with the blockchain, not the implementation contract. The proxy holds the state and delegates calls to the implementation, so all interactions should go through the proxy.</p>\n<p>Let’s imagine we have a JavaScript project, and we’re using Ethers.js to interact with the blockchain. Here’s how it would look:</p>\n<pre><code class=\"language-Solidity\">const proxyAddress = \"0xProxyContractAddress\";\nconst implementationABI = [ /* ABI array of the implementation contract */ ];\n\nconst proxyContract = new ethers.Contract(proxyAddress, implementationABI, provider);\n\n// For a function 'setValue(uint256 newValue)'\nawait proxyContract.connect(signer).setValue(42);\n\n// For a function 'getValue()'\nconst value = await proxyContract.getValue();\nconsole.log(\"Value:\", value);\n</code></pre>\n<p>This way, we’re calling the imaginary function <code>setValue</code> in our implementation contract using our proxy contract.</p>\n<p>Now that we’re discussing upgradeable contracts, another important question arises: how do I upgrade my contracts?</p>\n<p>First, only the admin (the person who deployed the proxy contract) can upgrade the implementation contract. To do this, the admin must first deploy a new version of the implementation contract to the blockchain. After that, they should call the `upgradeTo` function in the proxy contract, passing the new contract address as a parameter. It would look like this:</p>\n<pre><code class=\"language-JavaScript\">await proxyContract.connect(adminSigner).upgradeTo(newImplementationAddress);\n</code></pre>\n<h2>Embracing the future of smart contracts</h2>\n<p>Upgradeable smart contracts are important in blockchain development because they allow for changes and improvements after deployment. By leveraging the proxy pattern, developers can seamlessly introduce new features, fix bugs, and respond to changing requirements without disrupting the user experience or migrating assets.</p>\n<p>However, with great power comes great responsibility. It's crucial to approach upgradeable contracts with a thorough understanding of their mechanics, security implications, and best practices. Ensuring storage layout consistency, implementing robust access controls, and thoroughly testing upgrades are essential steps to safeguard against potential risks.</p>\n<p>As you venture into building upgradeable contracts, consider utilizing established tools like OpenZeppelin's Upgrades Plugin to streamline the process and enhance security. Happy coding!</p>"}},"categories":[{"contentful_id":"Jc9ZQ937JgPbuV2Xap2l7","node_locale":"en-US","internal":{"type":"ContentfulNewsCategory"},"name":"Developers","slug":"developers"}],"metaTitle":"Understanding How to Write Upgradable Smart Contracts","metaDescription":"Explore the importance of upgradable smart contracts in decentralized applications. Learn how they enable updates, bug fixes, and enhanced security.","canonicalUrl":null,"isPrivate":false},"news_bg":{"file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/3hGSTCAVrdhSMmLJHSHOWT/94799532e03716ceb32ad39268bef4b0/news-detail-bg.png"}},"news_dark_bg":{"file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/2StKLJf0XE38EyT9GlzQuO/ed29f2ebdc6b99f7ff32175a192133c3/news-detail-dark-bg.png"}},"hubspot":{"contentful_id":"5VZVKtbcRMzaaP77nsz3Fs","node_locale":"en-US","internal":{"type":"ContentfulHubSpotForm"},"title":"Receive our Newsletter","description":null,"portalId":"4795067","formId":"fbfea1e4-e214-4ab2-a98b-964f9a81695a","campaignId":null,"displayTitle":true,"width":null,"customClass":"newsletterOnNewsDetail","customId":null},"latest":{"internal":{"type":"ContentfulLayoutModuleContainer"},"contentful_id":"nO1tqQRjoUDUJfdg2B651","node_locale":"en-US","eyebrow":null,"headline":"Keep reading our latest stories","description":{"childMarkdownRemark":{"html":"<p>Developers, security news, and more</p>"}},"modules":[{"node_locale":"en-US","contentful_id":"6iOGB8Fiab9ilS0jfZ8N5I","fontSize":null,"ctaLink":"/news/","displayText":"All posts","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"contentful_id":"1B0wZMveBTSiMJZWu4uunI","node_locale":"en-US","internal":{"type":"ContentfulModuleContainer"},"title":"News > Latest Stories (3 items)","description":null,"numberOfItem":3,"columns":3,"columnType":null,"columnsOnTablet":null,"centerOnTablet":null,"columnsOnMobile":1,"centerOnMobile":null,"contentAlignment":"left","splitModules":false,"displayTitle":false,"isLiquiditySection":false,"isTrustBar":null,"gridModulesGap":"12px","loadMoreMode":null,"loadMoreCta":null,"carouselMode":null,"hasRegionSelector":null,"regionSelectorHeadline":null,"regionSelectorPopupTitle":null,"regionSelectorPopupText":null,"regionListKey":null,"extraData":null,"modules":[{"contentful_id":"3tE0tpmPMGsXezpOhKyWGO","node_locale":"en-US","internal":{"type":"ContentfulNewsCategory"},"name":"Latest","slug":"latest"}]}],"cta":null,"backgroundColor":"default","displayHeadline":true,"headlineAlignCenter":true,"contentAlignCenter":false,"headlineMarginTop0":null,"paddingTop":"40px","sectionPadding":null,"noPaddingTop":null,"noPaddingBottom":false,"modulesMargin":null,"isTab":false,"moduleId":null,"customClass":"storiesOnNewsDetail","sideImage":null,"backgroundSize":"cover","backgroundImage":null},"latestStories":{"nodes":[{"contentful_id":"4JsuzZRND5zXEs5BA7rLhV","node_locale":"en-US","internal":{"type":"ContentfulNews"},"title":"MetaMask feature update: Gas Station","slug":"metamask-feature-update-gas-station","subtitle":"Make running out of gas a thing of the past.","image":{"title":"MetaMask feature update: Gas Station","description":"MetaMask feature update: Gas Station image","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/2LeaQ6WFOBjI7SelPnhWyN/efb8b88e78c2fd174b9180c085a0c669/24-10-18_MwM_Blog-Gas-Station__16x9_.png"},"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/2LeaQ6WFOBjI7SelPnhWyN/efb8b88e78c2fd174b9180c085a0c669/24-10-18_MwM_Blog-Gas-Station__16x9_.png?w=480&h=270&q=80&fm=webp 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/2LeaQ6WFOBjI7SelPnhWyN/efb8b88e78c2fd174b9180c085a0c669/24-10-18_MwM_Blog-Gas-Station__16x9_.png?w=960&h=540&q=80&fm=webp 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/2LeaQ6WFOBjI7SelPnhWyN/efb8b88e78c2fd174b9180c085a0c669/24-10-18_MwM_Blog-Gas-Station__16x9_.png?w=1920&h=1080&q=80&fm=webp 1920w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/2LeaQ6WFOBjI7SelPnhWyN/efb8b88e78c2fd174b9180c085a0c669/24-10-18_MwM_Blog-Gas-Station__16x9_.png?w=3840&h=2160&q=80&fm=webp 3840w","sizes":"(min-width: 1920px) 1920px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/9sy2a0egs6zh/2LeaQ6WFOBjI7SelPnhWyN/efb8b88e78c2fd174b9180c085a0c669/24-10-18_MwM_Blog-Gas-Station__16x9_.png?w=1920&h=1080&q=80&fm=png","srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/2LeaQ6WFOBjI7SelPnhWyN/efb8b88e78c2fd174b9180c085a0c669/24-10-18_MwM_Blog-Gas-Station__16x9_.png?w=480&h=270&q=80&fm=png 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/2LeaQ6WFOBjI7SelPnhWyN/efb8b88e78c2fd174b9180c085a0c669/24-10-18_MwM_Blog-Gas-Station__16x9_.png?w=960&h=540&q=80&fm=png 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/2LeaQ6WFOBjI7SelPnhWyN/efb8b88e78c2fd174b9180c085a0c669/24-10-18_MwM_Blog-Gas-Station__16x9_.png?w=1920&h=1080&q=80&fm=png 1920w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/2LeaQ6WFOBjI7SelPnhWyN/efb8b88e78c2fd174b9180c085a0c669/24-10-18_MwM_Blog-Gas-Station__16x9_.png?w=3840&h=2160&q=80&fm=png 3840w","sizes":"(min-width: 1920px) 1920px, 100vw"}},"layout":"constrained","width":1920,"height":1080}},"publishDate":"November 15, 2024","authors":[{"name":"MetaMask","createProfilePage":null,"profileUrl":"metamask"}],"content":{"childMarkdownRemark":{"html":"<p>Being blocked by insufficient gas will no longer be a problem when swapping, thanks to MetaMask’s new Gas Station feature. Gas Station, aka gas-included swaps, is now available when you enable Smart Transactions with MetaMask Swaps.</p>\n<p>Most web3 users have experienced running out of gas. If users do not have enough ETH balance to cover network fees, they cannot proceed with their transaction. When this happens, users must go through a time consuming, and often costly, on-ramping process, such as purchasing ETH on a centralized exchange, and transferring funds to their on-chain wallet. On-chain opportunities can be time-sensitive, and the on-ramping process can take hours.</p>\n<p>With the rollout of Gas Station, our gas-included Swaps feature, users will be able to seamlessly and speedily complete their transactions — with network fees included in the quote(s) they receive. Additionally, users will not be limited to any specific liquidity source for their Swaps, meaning we will still compare prices across the same wide variety of providers as we do today. Our Swaps feature combines data from decentralized exchange aggregators, market makers, and DEXs, to ensure you get competitive quotes with the lowest network fees.</p>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ypQKSoKpyuQ?si=ScjRyg1HSHKZCvPt\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n<p>Gas Station is live on MetaMask Extension via Ethereum mainnet, with mobile release on the horizon. Swaps value must be sufficient to also cover the cost of gas, and include the following assets: USDT, USDC, DAI, ETH, wETH, wBTC, wstETH, wSOL.</p>\n<p><strong>Head to <a href=\"https://portfolio.metamask.io/\">MetaMask Portfolio</a> today to get swapping. Looking for more? Dive into our recent updates <a href=\"https://metamask.io/news/\">here</a>.</strong></p>"}},"categories":[{"contentful_id":"3tE0tpmPMGsXezpOhKyWGO","node_locale":"en-US","internal":{"type":"ContentfulNewsCategory"},"name":"Latest","slug":"latest"}],"metaTitle":null,"metaDescription":"MetaMask's new Gas Station feature — aka gas-included swaps — now includes network fees in the quotes users receive. ","canonicalUrl":null,"isPrivate":false},{"contentful_id":"7rrNgfq0Fsx8v9cyAJhzjG","node_locale":"en-US","internal":{"type":"ContentfulNews"},"title":"MetaMask feature update: Account Sync  ","slug":"metamask-feature-update-account-sync","subtitle":"Giving you more configurability across your devices. ","image":{"title":"MetaMask Account Sync","description":"MetaMask Account Sync feature update","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/77KHytBDzqvMsWvO4I1DNr/cf62cd93922c98b31906c4df2d3abe8a/MetaMask_Account_Sync.png"},"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/77KHytBDzqvMsWvO4I1DNr/cf62cd93922c98b31906c4df2d3abe8a/MetaMask_Account_Sync.png?w=480&h=270&q=80&fm=webp 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/77KHytBDzqvMsWvO4I1DNr/cf62cd93922c98b31906c4df2d3abe8a/MetaMask_Account_Sync.png?w=960&h=540&q=80&fm=webp 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/77KHytBDzqvMsWvO4I1DNr/cf62cd93922c98b31906c4df2d3abe8a/MetaMask_Account_Sync.png?w=1920&h=1080&q=80&fm=webp 1920w","sizes":"(min-width: 1920px) 1920px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/9sy2a0egs6zh/77KHytBDzqvMsWvO4I1DNr/cf62cd93922c98b31906c4df2d3abe8a/MetaMask_Account_Sync.png?w=1920&h=1080&q=80&fm=png","srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/77KHytBDzqvMsWvO4I1DNr/cf62cd93922c98b31906c4df2d3abe8a/MetaMask_Account_Sync.png?w=480&h=270&q=80&fm=png 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/77KHytBDzqvMsWvO4I1DNr/cf62cd93922c98b31906c4df2d3abe8a/MetaMask_Account_Sync.png?w=960&h=540&q=80&fm=png 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/77KHytBDzqvMsWvO4I1DNr/cf62cd93922c98b31906c4df2d3abe8a/MetaMask_Account_Sync.png?w=1920&h=1080&q=80&fm=png 1920w","sizes":"(min-width: 1920px) 1920px, 100vw"}},"layout":"constrained","width":1920,"height":1080}},"publishDate":"November 15, 2024","authors":[{"name":"MetaMask","createProfilePage":null,"profileUrl":"metamask"}],"content":{"childMarkdownRemark":{"html":"<p>MetaMask has released a new feature called Account Sync — available now on browser extension, ahead of mobile wallet availability coming soon. Account Sync allows you to unify account names and addresses across a wallet that has the same Secret Recovery Phrase. Enabling this optional setting means that you no longer have to go in and manually edit details across different devices. Part of MetaMask Profile Sync functionality, users’ data privacy is ensured through end-to-end encryption, preventing MetaMask, and anyone else, from viewing or accessing this information.</p>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/OA55VklBcaw?si=rNj1BejVfM6-mCkV\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n<p><strong>A wallet with the same Secret Recovery Phrase can:</strong></p>\n<ul>\n<li>Sync MetaMask Extension across Chrome/Brave browsers</li>\n<li>Sync MetaMask Extension across desktops or laptops</li>\n<li>Sync MetaMask wallet across Extension and mobile app</li>\n<li>Sync MetaMask mobile apps across mobile devices</li>\n<li>Sync MetaMask wallet after install</li>\n</ul>\n<h2>How to enable Account Sync</h2>\n<p><strong>Existing users</strong></p>\n<ol>\n<li>Go to <strong>Settings</strong>.</li>\n<li>Click on <strong>Privacy &#x26; Security</strong>.</li>\n<li>Turn on <strong>ProfileSync</strong>.</li>\n</ol>\n<p><strong>New users</strong></p>\n<p>Account Sync is turned on by default. To disable:</p>\n<ol>\n<li>Go to <strong>Settings</strong>.</li>\n<li>Click on <strong>Privacy &#x26; Security</strong>.</li>\n<li>Turn off <strong>ProfileSync</strong>.</li>\n</ol>\n<p><strong>How it works</strong></p>\n<p>Updates will be reflected when you lock/unlock or close/open MetaMask Extension. For example, if you have MetaMask open on two devices, and you add an account or rename an account on device A, you will need to close/open or lock/unlock MetaMask from device B for these changes to be reflected.</p>\n<p><strong>Synchronization details</strong></p>\n<ul>\n<li>If device A has more accounts than device B, MetaMask will add these additional accounts to device B.</li>\n<li>The most recently re-named account will be synchronized across devices.</li>\n<li>If you turn off Account Sync, account names and newly added accounts will start to vary across devices.</li>\n<li>Re-enabling Account Sync will re-sync your devices.</li>\n</ul>\n<p>In addition to Account Sync, MetaMask Profile Sync also includes Account Activity Notifications, with more features rolling out this year.</p>\n<p><strong>Head to <a href=\"https://portfolio.metamask.io/\">MetaMask Portfolio</a> to enable Account Sync — for seamless account management across devices. Check out our <a href=\"https://support.metamask.io/privacy-and-security/profile-privacy\">profile privacy and security guide</a> for more ways we protect and manage user data.</strong></p>"}},"categories":[{"contentful_id":"3tE0tpmPMGsXezpOhKyWGO","node_locale":"en-US","internal":{"type":"ContentfulNewsCategory"},"name":"Latest","slug":"latest"}],"metaTitle":"MetaMask feature update: Account Sync  ","metaDescription":"MetaMask's new Account Sync feature  allows you to unify account names and addresses across a wallet that has the same Secret Recovery Phrase.","canonicalUrl":null,"isPrivate":false},{"contentful_id":"1w4Dqc0UAOJcKZYtAciXO9","node_locale":"en-US","internal":{"type":"ContentfulNews"},"title":"MetaMask feature update: Chain Permissions","slug":"metamask-feature-update-chain-permissions","subtitle":"Use dapps on any network with granular control.","image":{"title":"MetaMask Chain Permissions feature update","description":"MetaMask Chain Permissions feature update","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/3STqGuBLPOVKb9UqI37651/99819f09e9a9e4ff0ec4296bfc20c868/MetaMask_feature_update_chain_permissions.png"},"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/3STqGuBLPOVKb9UqI37651/99819f09e9a9e4ff0ec4296bfc20c868/MetaMask_feature_update_chain_permissions.png?w=480&h=270&q=80&fm=webp 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/3STqGuBLPOVKb9UqI37651/99819f09e9a9e4ff0ec4296bfc20c868/MetaMask_feature_update_chain_permissions.png?w=960&h=540&q=80&fm=webp 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/3STqGuBLPOVKb9UqI37651/99819f09e9a9e4ff0ec4296bfc20c868/MetaMask_feature_update_chain_permissions.png?w=1920&h=1080&q=80&fm=webp 1920w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/3STqGuBLPOVKb9UqI37651/99819f09e9a9e4ff0ec4296bfc20c868/MetaMask_feature_update_chain_permissions.png?w=3840&h=2160&q=80&fm=webp 3840w","sizes":"(min-width: 1920px) 1920px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/9sy2a0egs6zh/3STqGuBLPOVKb9UqI37651/99819f09e9a9e4ff0ec4296bfc20c868/MetaMask_feature_update_chain_permissions.png?w=1920&h=1080&q=80&fm=png","srcSet":"https://images.ctfassets.net/9sy2a0egs6zh/3STqGuBLPOVKb9UqI37651/99819f09e9a9e4ff0ec4296bfc20c868/MetaMask_feature_update_chain_permissions.png?w=480&h=270&q=80&fm=png 480w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/3STqGuBLPOVKb9UqI37651/99819f09e9a9e4ff0ec4296bfc20c868/MetaMask_feature_update_chain_permissions.png?w=960&h=540&q=80&fm=png 960w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/3STqGuBLPOVKb9UqI37651/99819f09e9a9e4ff0ec4296bfc20c868/MetaMask_feature_update_chain_permissions.png?w=1920&h=1080&q=80&fm=png 1920w,\nhttps://images.ctfassets.net/9sy2a0egs6zh/3STqGuBLPOVKb9UqI37651/99819f09e9a9e4ff0ec4296bfc20c868/MetaMask_feature_update_chain_permissions.png?w=3840&h=2160&q=80&fm=png 3840w","sizes":"(min-width: 1920px) 1920px, 100vw"}},"layout":"constrained","width":1920,"height":1080}},"publishDate":"November 15, 2024","authors":[{"name":"MetaMask","createProfilePage":null,"profileUrl":"metamask"}],"content":{"childMarkdownRemark":{"html":"<p>MetaMask’s latest Extension updates optimize your experience when interacting with dapps and networks – via seamless 'intra-dapp' network switching, granular permission controls, and RPC url management.</p>\n<p>As web3 evolves, users increasingly interact with multiple dapps across various networks. Earlier this year, MetaMask elevated the multichain experience by <a href=\"https://metamask.io/news/latest/improved-multi-dapp-experience-in-metamask-extension/\">remembering the network</a> used for each dapp, eliminating the need for manual network switching when using multiple dapps simultaneously. Our new update takes it a step further. Users can now sign transactions on any permitted network, without needing to approve the network switch.</p>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/b4oSFXT2U54?si=SPpXVhEIROyz47hY\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n<p>Permissions are granted to each dapp at the time of connection, and can always be managed by the user to maintain flexibility and control. When users connect a dapp, the account that they are on, and all default enabled networks, will be permissioned for that dapp. You can edit at the time of connection, or after the connection has been made in the All Permissions section. Home stakers, and others preferring their own infrastructure, can also review and update their chosen RPC url as needed.</p>\n<p>Having control over the networks that dapps have access to adds a security layer—minimizing the impact of interacting with potentially malicious dapps to permitted networks. As the multichain ecosystem continues to expand, MetaMask is here to meet your needs and keep you protected along the way.</p>\n<p><strong>Make sure you're using the latest version of <a href=\"https://metamask.io/download/\">MetaMask Extension</a> for optimal security, and visit our <a href=\"https://support.metamask.io/managing-my-wallet/using-metamask/how-to-update-the-version-of-metamask/\">support page</a> to learn how to stay up to date. Looking for more? Dive into all our recent updates <a href=\"https://metamask.io/news/\">here</a>.</strong></p>"}},"categories":[{"contentful_id":"3tE0tpmPMGsXezpOhKyWGO","node_locale":"en-US","internal":{"type":"ContentfulNewsCategory"},"name":"Latest","slug":"latest"}],"metaTitle":null,"metaDescription":"MetaMask's new Chain Permissions update lets you seamlessly use dapps on any network, with granular control and trusted security.","canonicalUrl":null,"isPrivate":false}]},"footer":{"contentful_id":"75bFgEllkMxpVsY8wWlroX","node_locale":"en-US","internal":{"type":"ContentfulLayoutFooter"},"logo":{"contentful_id":"6fkPzzTMo3IoMKGMshuSVD","node_locale":"en-US","internal":{"type":"ContentfulLogo"},"title":"MetaMask Logo","logo":{"title":"mm-logo","description":"","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/4zJfzJbG3kTDSk5Wo4RJI1/1b363263141cf629b28155e2625b56c9/mm-logo.svg"},"gatsbyImageData":null},"logoDarkMode":{"title":"mm-logo-white","description":"","file":{"url":"//images.ctfassets.net/9sy2a0egs6zh/2qy1wS5MmZOXkXn9yFlGJp/f3797a512c283e6f71450abd408b7452/mm-logo-white.svg"},"gatsbyImageData":null},"link":"/","newTab":false,"displayTitle":false,"widthLogo":null,"backgroundColor":null,"customClass":null},"menuItems":[{"columns":1,"title":"Learn More","displayTitle":true,"modules":[{"node_locale":"en-US","contentful_id":"2OzvqisgIr6A5gzJuQm24G","fontSize":null,"ctaLink":"/about/","displayText":"About","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"5gPptdmrIjeGdYowLtrCHo","fontSize":null,"ctaLink":"/developer/","displayText":"Developers","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":false,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"NM6IbWouGG4tghpXmNAtJ","fontSize":null,"ctaLink":"/download/","displayText":"Download","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"6Ui9MOvxC2ExjCL1DeWH1q","fontSize":null,"ctaLink":"/institutions/","displayText":"MetaMask Institutional","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"5UxqbY7b31kskBIj5IibqC","fontSize":null,"ctaLink":"/news/","displayText":"News","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"6qlnG54k7tXJVMscTQhIun","fontSize":null,"ctaLink":"https://metamask.io/security/","displayText":"Security","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":false,"buttonSecondary":false,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}]},{"columns":1,"title":"Get Involved","displayTitle":true,"modules":[{"node_locale":"en-US","contentful_id":"4mpEqrd6pewz2iX2Gfxt3z","fontSize":null,"ctaLink":"https://github.com/MetaMask/metamask-extension/","displayText":"GitHub","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"6kdhvf8S4erkJPUlGWY0Ae","fontSize":null,"ctaLink":"https://gitcoin.co/","displayText":"Gitcoin","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"5xd9mrSTpZ9Ky7XWhDDTth","fontSize":null,"ctaLink":"https://consensys.io/open-roles/?discipline=32543","displayText":"Open Positions","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"6SYAtiKQ188OxaIKhHd7qj","fontSize":null,"ctaLink":"https://shop.spreadshirt.com/metamask/","displayText":"Swag Shop","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"72IN7H47TcmIvmYyyTETIS","fontSize":null,"ctaLink":"https://consensys.io/contact","displayText":"Press & Partnerships","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}]},{"columns":1,"title":"Legal","displayTitle":true,"modules":[{"node_locale":"en-US","contentful_id":"4LiJW9vtg515J8Bhlzq8nC","fontSize":null,"ctaLink":"https://consensys.io/privacy-notice","displayText":"Privacy Policy","displayTextTreatment":null,"newTab":true,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"2GpObxkrC9uUyLXLonaa3F","fontSize":null,"ctaLink":"/terms-of-use/","displayText":"Terms of Use","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"5WpVb2xPvtf19P6NVNloit","fontSize":null,"ctaLink":"/cla/","displayText":"Contributor License Agreement","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null},{"node_locale":"en-US","contentful_id":"19JXW3A4VGjeuEC6u46uC4","fontSize":null,"ctaLink":"/sitemap/","displayText":"Site Map","displayTextTreatment":null,"newTab":false,"buttonDisplay":false,"buttonGradient":null,"buttonSecondary":null,"hideButtonIcon":null,"eventLabel":null,"eventCategory":null,"socialLink":null,"showCaretRight":null,"buttonCaretDown":null,"launchDarklyFlag":null,"customClassName":null,"internal":{"type":"ContentfulCta"},"hubSpotForm":null,"embedHTML":null,"downloadBrowsers":null,"mobileCta":null,"alternativeCta":null}]}],"copyright":"©2024 MetaMask • A Consensys Formation"}},"pageContext":{"news_content_id":"lJ0iEddksU9CMcCXfc4JH","pathBuild":"/news/developers/understanding-how-to-write-upgradable-smart-contracts/","node_locale":"en-US","localizedPages":["/download/","/news/","/swaps/","/","/news/latest/powerful-configurable-secure-metamask-is-how-you-show-up-in-web3/","/news/latest/metamask-portfolio-track-and-manage-your-web3-everything/","/news/latest/how-to-use-metamasks-buy-feature-to-fund-your-wallet/","/news/latest/how-to-use-metamasks-swap-feature-to-get-what-you-want/","/news/latest/how-to-stake-crypto-and-secure-the-network/","/news/latest/bridge-easily-move-tokens-across-chains/","/news/latest/dashboard-track-everything-in-one-place/","/news/latest/how-to-sell-crypto-for-cash/","/news/security/","/news/institutions/","/news/developers/"],"translation":null,"sharedCopy":{"browserNotSupported":"is not supported. Please download a browser that supports MetaMask.","by":"by","copyLink":"Copy link","copied":"Copied"}}},"staticQueryHashes":["2087975078","2272059946","3000541721","3155062165"],"slicesMap":{}}