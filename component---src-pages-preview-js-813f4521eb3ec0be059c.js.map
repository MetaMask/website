{"version":3,"sources":["webpack:///./src/components/PreviewLoading/index.js","webpack:///./src/pages/preview.js"],"names":["Wrapper","styled","div","PreviewLoading","version","id","xmlns","xmlnsXlink","x","y","width","height","viewBox","xmlSpace","fill","attributeName","attributeType","values","begin","dur","repeatCount","PreviewPage","state","loading","moduleConfig","error","getModule","a","location","props","queryParams","qs","parse","search","module_id","environment","window","href","pathname","stringify","setState","message","fetchContentfulTypename","type","fetchContentfulData","data","contentType","previewContent","__typename","contentId","sys","undefined","dataUpdate","internal","convertContentfulPreviewTypename","contentful_id","console","log","componentDidMount","this","render","themeColor","h2FontSize","PreviewInfo","contentfulModuleToComponent","React","Component"],"mappings":"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","file":"component---src-pages-preview-js-813f4521eb3ec0be059c.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst PreviewLoading = () => {\n  return (\n    <Wrapper>\n      <svg\n        version=\"1.1\"\n        id=\"Layer_1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"48px\"\n        height=\"60px\"\n        viewBox=\"0 0 24 30\"\n        xmlSpace=\"preserve\"\n      >\n        <rect x=\"0\" y=\"13\" width=\"4\" height=\"5\" fill=\"#333\">\n          <animate\n            attributeName=\"height\"\n            attributeType=\"XML\"\n            values=\"5;21;5\"\n            begin=\"0s\"\n            dur=\"0.6s\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            attributeName=\"y\"\n            attributeType=\"XML\"\n            values=\"13; 5; 13\"\n            begin=\"0s\"\n            dur=\"0.6s\"\n            repeatCount=\"indefinite\"\n          />\n        </rect>\n        <rect x=\"10\" y=\"13\" width=\"4\" height=\"5\" fill=\"#333\">\n          <animate\n            attributeName=\"height\"\n            attributeType=\"XML\"\n            values=\"5;21;5\"\n            begin=\"0.15s\"\n            dur=\"0.6s\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            attributeName=\"y\"\n            attributeType=\"XML\"\n            values=\"13; 5; 13\"\n            begin=\"0.15s\"\n            dur=\"0.6s\"\n            repeatCount=\"indefinite\"\n          />\n        </rect>\n        <rect x=\"20\" y=\"13\" width=\"4\" height=\"5\" fill=\"#333\">\n          <animate\n            attributeName=\"height\"\n            attributeType=\"XML\"\n            values=\"5;21;5\"\n            begin=\"0.3s\"\n            dur=\"0.6s\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            attributeName=\"y\"\n            attributeType=\"XML\"\n            values=\"13; 5; 13\"\n            begin=\"0.3s\"\n            dur=\"0.6s\"\n            repeatCount=\"indefinite\"\n          />\n        </rect>\n      </svg>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  padding-top: 20vh;\n  svg path,\n  svg rect {\n    fill: #f58420;\n  }\n`\n\nexport default PreviewLoading\n","import qs from 'query-string'\nimport React from 'react'\nimport styled from 'styled-components'\nimport PreviewLoading from '../components/PreviewLoading'\nimport {\n  convertContentfulPreviewTypename,\n  fetchContentfulData,\n  fetchContentfulTypename,\n} from '../lib/utils/fetchContentfulData'\nimport { contentfulModuleToComponent } from '../lib/utils/moduleToComponent'\nimport Layout from '../templates/PageLayout'\n\nclass PreviewPage extends React.Component {\n  state = {\n    loading: true,\n    moduleConfig: null,\n    error: null,\n  }\n\n  componentDidMount() {\n    this.getModule()\n  }\n\n  getModule = async () => {\n    const { location } = this.props\n    const queryParams = qs.parse(location.search ?? '')\n    const id = queryParams.module_id\n\n    if (queryParams.environment && queryParams.environment === 'master') {\n      delete queryParams.environment\n      return (window.location.href = `https://metamask.io${\n        location.pathname\n      }?${qs.stringify(queryParams)}`)\n    }\n\n    try {\n      if (!id) {\n        this.setState({\n          loading: false,\n          error: {\n            message: 'No module id provided to preview',\n          },\n        })\n        return\n      }\n\n      const type = await fetchContentfulTypename(id)\n      if (!type) {\n        this.setState({\n          loading: false,\n          error: {\n            message: 'Failed to fetch contentful type name',\n          },\n        })\n        return\n      }\n\n      const { data } = await fetchContentfulData(type, id)\n      if (data) {\n        const contentType = data.previewContent?.__typename\n        const contentId = data.previewContent?.sys.id || undefined\n        const dataUpdate = {\n          ...data.previewContent,\n          internal: {\n            type: convertContentfulPreviewTypename(contentType),\n          },\n          contentful_id: contentId,\n        }\n        this.setState({\n          loading: false,\n          moduleConfig: dataUpdate,\n        })\n        return\n      }\n    } catch (error) {\n      console.log('Fetch preview data error: ', error)\n    }\n\n    this.setState({\n      loading: false,\n      error: {\n        message: 'Failed to fetch preview data',\n      },\n    })\n  }\n\n  render() {\n    const { loading, moduleConfig, error } = this.state\n\n    if (loading) return <PreviewLoading />\n    if (moduleConfig) {\n      return (\n        <Layout\n          themeColor={moduleConfig.themeColor}\n          h2FontSize={moduleConfig.h2FontSize}\n        >\n          <PreviewInfo>Preview mode</PreviewInfo>\n          {contentfulModuleToComponent(moduleConfig)}\n        </Layout>\n      )\n    }\n    return <h4>Failed to load preview component: {error?.message}</h4>\n  }\n}\n\nconst PreviewInfo = styled.div`\n  width: 140px;\n  height: 35px;\n  background-color: lightyellow;\n  color: red;\n  text-align: center;\n  line-height: 31px;\n  font-weight: bold;\n  border: 2px solid lightgoldenrodyellow;\n  border-radius: 10px 10px 0 0;\n  position: fixed;\n  top: 200px;\n  left: -53px;\n  z-index: 2000;\n  transform: rotate(90deg);\n`\n\nexport default PreviewPage\n"],"sourceRoot":""}